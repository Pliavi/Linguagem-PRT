/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/chevrotain/lib_esm/src/api.js":
/*!****************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/api.js ***!
  \****************************************************/
/*! exports provided: VERSION, Parser, CstParser, EmbeddedActionsParser, ParserDefinitionErrorType, EMPTY_ALT, Lexer, LexerDefinitionErrorType, createToken, createTokenInstance, EOF, tokenLabel, tokenMatcher, tokenName, defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, EarlyExitException, isRecognitionException, MismatchedTokenException, NotAllInputParsedException, NoViableAltException, defaultLexerErrorProvider, Alternation, Flat, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, serializeGrammar, serializeProduction, GAstVisitor, assignOccurrenceIndices, resolveGrammar, validateGrammar, clearCache, createSyntaxDiagramsCode, generateParserFactory, generateParserModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearCache\", function() { return clearCache; });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./node_modules/chevrotain/lib_esm/src/version.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return _version__WEBPACK_IMPORTED_MODULE_0__[\"VERSION\"]; });\n\n/* harmony import */ var _parse_parser_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse/parser/parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return _parse_parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"Parser\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CstParser\", function() { return _parse_parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"CstParser\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EmbeddedActionsParser\", function() { return _parse_parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"EmbeddedActionsParser\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ParserDefinitionErrorType\", function() { return _parse_parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EMPTY_ALT\", function() { return _parse_parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"EMPTY_ALT\"]; });\n\n/* harmony import */ var _scan_lexer_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scan/lexer_public */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Lexer\", function() { return _scan_lexer_public__WEBPACK_IMPORTED_MODULE_2__[\"Lexer\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LexerDefinitionErrorType\", function() { return _scan_lexer_public__WEBPACK_IMPORTED_MODULE_2__[\"LexerDefinitionErrorType\"]; });\n\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createToken\", function() { return _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__[\"createToken\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createTokenInstance\", function() { return _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__[\"createTokenInstance\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EOF\", function() { return _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__[\"EOF\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tokenLabel\", function() { return _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__[\"tokenLabel\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tokenMatcher\", function() { return _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__[\"tokenMatcher\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"tokenName\", function() { return _scan_tokens_public__WEBPACK_IMPORTED_MODULE_3__[\"tokenName\"]; });\n\n/* harmony import */ var _parse_errors_public__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parse/errors_public */ \"./node_modules/chevrotain/lib_esm/src/parse/errors_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultGrammarResolverErrorProvider\", function() { return _parse_errors_public__WEBPACK_IMPORTED_MODULE_4__[\"defaultGrammarResolverErrorProvider\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultGrammarValidatorErrorProvider\", function() { return _parse_errors_public__WEBPACK_IMPORTED_MODULE_4__[\"defaultGrammarValidatorErrorProvider\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultParserErrorProvider\", function() { return _parse_errors_public__WEBPACK_IMPORTED_MODULE_4__[\"defaultParserErrorProvider\"]; });\n\n/* harmony import */ var _parse_exceptions_public__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parse/exceptions_public */ \"./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EarlyExitException\", function() { return _parse_exceptions_public__WEBPACK_IMPORTED_MODULE_5__[\"EarlyExitException\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isRecognitionException\", function() { return _parse_exceptions_public__WEBPACK_IMPORTED_MODULE_5__[\"isRecognitionException\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MismatchedTokenException\", function() { return _parse_exceptions_public__WEBPACK_IMPORTED_MODULE_5__[\"MismatchedTokenException\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NotAllInputParsedException\", function() { return _parse_exceptions_public__WEBPACK_IMPORTED_MODULE_5__[\"NotAllInputParsedException\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NoViableAltException\", function() { return _parse_exceptions_public__WEBPACK_IMPORTED_MODULE_5__[\"NoViableAltException\"]; });\n\n/* harmony import */ var _scan_lexer_errors_public__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scan/lexer_errors_public */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer_errors_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"defaultLexerErrorProvider\", function() { return _scan_lexer_errors_public__WEBPACK_IMPORTED_MODULE_6__[\"defaultLexerErrorProvider\"]; });\n\n/* harmony import */ var _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./parse/grammar/gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Alternation\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"Alternation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Flat\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"Flat\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NonTerminal\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"NonTerminal\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Option\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"Option\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Repetition\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"Repetition\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RepetitionMandatory\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"RepetitionMandatory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RepetitionMandatoryWithSeparator\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"RepetitionMandatoryWithSeparator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RepetitionWithSeparator\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"RepetitionWithSeparator\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Rule\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"Rule\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Terminal\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"Terminal\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"serializeGrammar\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"serializeGrammar\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"serializeProduction\", function() { return _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_7__[\"serializeProduction\"]; });\n\n/* harmony import */ var _parse_grammar_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse/grammar/gast/gast_visitor_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"GAstVisitor\", function() { return _parse_grammar_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_8__[\"GAstVisitor\"]; });\n\n/* harmony import */ var _parse_grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parse/grammar/gast/gast_resolver_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_resolver_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"assignOccurrenceIndices\", function() { return _parse_grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_9__[\"assignOccurrenceIndices\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"resolveGrammar\", function() { return _parse_grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_9__[\"resolveGrammar\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"validateGrammar\", function() { return _parse_grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_9__[\"validateGrammar\"]; });\n\n/* harmony import */ var _diagrams_render_public__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./diagrams/render_public */ \"./node_modules/chevrotain/lib_esm/src/diagrams/render_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createSyntaxDiagramsCode\", function() { return _diagrams_render_public__WEBPACK_IMPORTED_MODULE_10__[\"createSyntaxDiagramsCode\"]; });\n\n/* harmony import */ var _generate_generate_public__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./generate/generate_public */ \"./node_modules/chevrotain/lib_esm/src/generate/generate_public.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateParserFactory\", function() { return _generate_generate_public__WEBPACK_IMPORTED_MODULE_11__[\"generateParserFactory\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generateParserModule\", function() { return _generate_generate_public__WEBPACK_IMPORTED_MODULE_11__[\"generateParserModule\"]; });\n\n// semantic version\n\n\n\n// Tokens utilities\n\n// Other Utilities\n\n\n\n// grammar reflection API\n\n// GAST Utilities\n\n\n\n/* istanbul ignore next */\nfunction clearCache() {\n    console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" +\n        \"\\n\\t It performs no action other than printing this message.\" +\n        \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\n\n\n//# sourceMappingURL=api.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/api.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/diagrams/render_public.js":
/*!***********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/diagrams/render_public.js ***!
  \***********************************************************************/
/*! exports provided: createSyntaxDiagramsCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSyntaxDiagramsCode\", function() { return createSyntaxDiagramsCode; });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ \"./node_modules/chevrotain/lib_esm/src/version.js\");\n\nfunction createSyntaxDiagramsCode(grammar, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.resourceBase, resourceBase = _c === void 0 ? \"https://unpkg.com/chevrotain@\" + _version__WEBPACK_IMPORTED_MODULE_0__[\"VERSION\"] + \"/diagrams/\" : _c, _d = _b.css, css = _d === void 0 ? \"https://unpkg.com/chevrotain@\" + _version__WEBPACK_IMPORTED_MODULE_0__[\"VERSION\"] + \"/diagrams/diagrams.css\" : _d;\n    var header = \"\\n<!-- This is a generated file -->\\n<!DOCTYPE html>\\n<meta charset=\\\"utf-8\\\">\\n<style>\\n  body {\\n    background-color: hsl(30, 20%, 95%)\\n  }\\n</style>\\n\\n\";\n    var cssHtml = \"\\n<link rel='stylesheet' href='\" + css + \"'>\\n\";\n    var scripts = \"\\n<script src='\" + resourceBase + \"vendor/railroad-diagrams.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_builder.js'></script>\\n<script src='\" + resourceBase + \"src/diagrams_behavior.js'></script>\\n<script src='\" + resourceBase + \"src/main.js'></script>\\n\";\n    var diagramsDiv = \"\\n<div id=\\\"diagrams\\\" align=\\\"center\\\"></div>    \\n\";\n    var serializedGrammar = \"\\n<script>\\n    window.serializedGrammar = \" + JSON.stringify(grammar, null, \"  \") + \";\\n</script>\\n\";\n    var initLogic = \"\\n<script>\\n    var diagramsDiv = document.getElementById(\\\"diagrams\\\");\\n    main.drawDiagramsFromSerializedGrammar(serializedGrammar, diagramsDiv);\\n</script>\\n\";\n    return (header + cssHtml + scripts + diagramsDiv + serializedGrammar + initLogic);\n}\n//# sourceMappingURL=render_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/diagrams/render_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/generate/generate.js":
/*!******************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/generate/generate.js ***!
  \******************************************************************/
/*! exports provided: genUmdModule, genWrapperFunction, genClass, genAllRules, genRule, genTerminal, genNonTerminal, genAlternation, genSingleAlt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genUmdModule\", function() { return genUmdModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genWrapperFunction\", function() { return genWrapperFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genClass\", function() { return genClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genAllRules\", function() { return genAllRules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genRule\", function() { return genRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genTerminal\", function() { return genTerminal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genNonTerminal\", function() { return genNonTerminal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genAlternation\", function() { return genAlternation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"genSingleAlt\", function() { return genSingleAlt; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parse/grammar/gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n\n\n/**\n * Missing features\n * 1. Rule arguments\n * 2. Gates\n * 3. embedded actions\n */\nvar NL = \"\\n\";\nfunction genUmdModule(options) {\n    return \"\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        // AMD. Register as an anonymous module.\\n        define(['chevrotain'], factory);\\n    } else if (typeof module === 'object' && module.exports) {\\n        // Node. Does not work with strict CommonJS, but\\n        // only CommonJS-like environments that support module.exports,\\n        // like Node.\\n        module.exports = factory(require('chevrotain'));\\n    } else {\\n        // Browser globals (root is window)\\n        root.returnExports = factory(root.b);\\n    }\\n}(typeof self !== 'undefined' ? self : this, function (chevrotain) {\\n\\n\" + genClass(options) + \"\\n    \\nreturn {\\n    \" + options.name + \": \" + options.name + \" \\n}\\n}));\\n\";\n}\nfunction genWrapperFunction(options) {\n    return \"    \\n\" + genClass(options) + \"\\nreturn new \" + options.name + \"(tokenVocabulary, config)    \\n\";\n}\nfunction genClass(options) {\n    // TODO: how to pass the token vocabulary? Constructor? other?\n    var result = \"\\nfunction \" + options.name + \"(tokenVocabulary, config) {\\n    // invoke super constructor\\n    // No support for embedded actions currently, so we can 'hardcode'\\n    // The use of CstParser.\\n    chevrotain.CstParser.call(this, tokenVocabulary, config)\\n\\n    const $ = this\\n\\n    \" + genAllRules(options.rules) + \"\\n\\n    // very important to call this after all the rules have been defined.\\n    // otherwise the parser may not work correctly as it will lack information\\n    // derived during the self analysis phase.\\n    this.performSelfAnalysis(this)\\n}\\n\\n// inheritance as implemented in javascript in the previous decade... :(\\n\" + options.name + \".prototype = Object.create(chevrotain.CstParser.prototype)\\n\" + options.name + \".prototype.constructor = \" + options.name + \"    \\n    \";\n    return result;\n}\nfunction genAllRules(rules) {\n    var rulesText = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(rules, function (currRule) {\n        return genRule(currRule, 1);\n    });\n    return rulesText.join(\"\\n\");\n}\nfunction genRule(prod, n) {\n    var result = indent(n, \"$.RULE(\\\"\" + prod.name + \"\\\", function() {\") + NL;\n    result += genDefinition(prod.definition, n + 1);\n    result += indent(n + 1, \"})\") + NL;\n    return result;\n}\nfunction genTerminal(prod, n) {\n    var name = prod.terminalType.name;\n    // TODO: potential performance optimization, avoid tokenMap Dictionary access\n    return indent(n, \"$.CONSUME\" + prod.idx + \"(this.tokensMap.\" + name + \")\" + NL);\n}\nfunction genNonTerminal(prod, n) {\n    return indent(n, \"$.SUBRULE\" + prod.idx + \"($.\" + prod.nonTerminalName + \")\" + NL);\n}\nfunction genAlternation(prod, n) {\n    var result = indent(n, \"$.OR\" + prod.idx + \"([\") + NL;\n    var alts = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(prod.definition, function (altDef) { return genSingleAlt(altDef, n + 1); });\n    result += alts.join(\",\" + NL);\n    result += NL + indent(n, \"])\" + NL);\n    return result;\n}\nfunction genSingleAlt(prod, n) {\n    var result = indent(n, \"{\") + NL;\n    if (prod.name) {\n        result += indent(n + 1, \"NAME: \\\"\" + prod.name + \"\\\",\") + NL;\n    }\n    result += indent(n + 1, \"ALT: function() {\") + NL;\n    result += genDefinition(prod.definition, n + 1);\n    result += indent(n + 1, \"}\") + NL;\n    result += indent(n, \"}\");\n    return result;\n}\nfunction genProd(prod, n) {\n    /* istanbul ignore else */\n    if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"]) {\n        return genNonTerminal(prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"]) {\n        return genDSLRule(\"OPTION\", prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatory\"]) {\n        return genDSLRule(\"AT_LEAST_ONE\", prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatoryWithSeparator\"]) {\n        return genDSLRule(\"AT_LEAST_ONE_SEP\", prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionWithSeparator\"]) {\n        return genDSLRule(\"MANY_SEP\", prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Repetition\"]) {\n        return genDSLRule(\"MANY\", prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Alternation\"]) {\n        return genAlternation(prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"]) {\n        return genTerminal(prod, n);\n    }\n    else if (prod instanceof _parse_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Flat\"]) {\n        return genDefinition(prod.definition, n);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction genDSLRule(dslName, prod, n) {\n    var result = indent(n, \"$.\" + (dslName + prod.idx) + \"(\");\n    if (prod.name || prod.separator) {\n        result += \"{\" + NL;\n        if (prod.name) {\n            result += indent(n + 1, \"NAME: \\\"\" + prod.name + \"\\\"\") + \",\" + NL;\n        }\n        if (prod.separator) {\n            result +=\n                indent(n + 1, \"SEP: this.tokensMap.\" + prod.separator.name) +\n                    \",\" +\n                    NL;\n        }\n        result += \"DEF: \" + genDefFunction(prod.definition, n + 2) + NL;\n        result += indent(n, \"}\") + NL;\n    }\n    else {\n        result += genDefFunction(prod.definition, n + 1);\n    }\n    result += indent(n, \")\") + NL;\n    return result;\n}\nfunction genDefFunction(definition, n) {\n    var def = \"function() {\" + NL;\n    def += genDefinition(definition, n);\n    def += indent(n, \"}\") + NL;\n    return def;\n}\nfunction genDefinition(def, n) {\n    var result = \"\";\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(def, function (prod) {\n        result += genProd(prod, n + 1);\n    });\n    return result;\n}\nfunction indent(howMuch, text) {\n    var spaces = Array(howMuch * 4 + 1).join(\" \");\n    return spaces + text;\n}\n//# sourceMappingURL=generate.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/generate/generate.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/generate/generate_public.js":
/*!*************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/generate/generate_public.js ***!
  \*************************************************************************/
/*! exports provided: generateParserFactory, generateParserModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateParserFactory\", function() { return generateParserFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generateParserModule\", function() { return generateParserModule; });\n/* harmony import */ var _generate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generate */ \"./node_modules/chevrotain/lib_esm/src/generate/generate.js\");\n\nfunction generateParserFactory(options) {\n    var wrapperText = Object(_generate__WEBPACK_IMPORTED_MODULE_0__[\"genWrapperFunction\"])({\n        name: options.name,\n        rules: options.rules\n    });\n    var constructorWrapper = new Function(\"tokenVocabulary\", \"config\", \"chevrotain\", wrapperText);\n    return function (config) {\n        return constructorWrapper(options.tokenVocabulary, config, \n        // TODO: check how the require is transpiled/webpacked\n        __webpack_require__(/*! ../api */ \"./node_modules/chevrotain/lib_esm/src/api.js\"));\n    };\n}\nfunction generateParserModule(options) {\n    return Object(_generate__WEBPACK_IMPORTED_MODULE_0__[\"genUmdModule\"])({ name: options.name, rules: options.rules });\n}\n//# sourceMappingURL=generate_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/generate/generate_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/lang/lang_extensions.js":
/*!*********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/lang/lang_extensions.js ***!
  \*********************************************************************/
/*! exports provided: classNameFromInstance, functionName, defineNameProp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"classNameFromInstance\", function() { return classNameFromInstance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"functionName\", function() { return functionName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defineNameProp\", function() { return defineNameProp; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n\nfunction classNameFromInstance(instance) {\n    return functionName(instance.constructor);\n}\nvar FUNC_NAME_REGEXP = /^\\s*function\\s*(\\S*)\\s*\\(/;\nvar NAME = \"name\";\n/* istanbul ignore next too many hacks for IE/old versions of node.js here*/\nfunction functionName(func) {\n    // Engines that support Function.prototype.name OR the nth (n>1) time after\n    // the name has been computed in the following else block.\n    var existingNameProp = func.name;\n    if (existingNameProp) {\n        return existingNameProp;\n    }\n    // hack for IE and engines that do not support Object.defineProperty on function.name (Node.js 0.10 && 0.12)\n    var computedName = func.toString().match(FUNC_NAME_REGEXP)[1];\n    return computedName;\n}\n/**\n * @returns {boolean} - has the property been successfully defined\n */\nfunction defineNameProp(obj, nameValue) {\n    var namePropDescriptor = Object.getOwnPropertyDescriptor(obj, NAME);\n    /* istanbul ignore else -> will only run in old versions of node.js */\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(namePropDescriptor) || namePropDescriptor.configurable) {\n        Object.defineProperty(obj, NAME, {\n            enumerable: false,\n            configurable: true,\n            writable: false,\n            value: nameValue\n        });\n        return true;\n    }\n    /* istanbul ignore next -> will only run in old versions of node.js */\n    return false;\n}\n//# sourceMappingURL=lang_extensions.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/lang/lang_extensions.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/constants.js":
/*!****************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/constants.js ***!
  \****************************************************************/
/*! exports provided: IN */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IN\", function() { return IN; });\n// TODO: can this be removed? where is it used?\nvar IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/constants.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/cst/cst.js":
/*!**************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/cst/cst.js ***!
  \**************************************************************/
/*! exports provided: setNodeLocationOnlyOffset, setNodeLocationFull, addTerminalToCst, addNoneTerminalToCst, NamedDSLMethodsCollectorVisitor, expandAllNestedRuleNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setNodeLocationOnlyOffset\", function() { return setNodeLocationOnlyOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setNodeLocationFull\", function() { return setNodeLocationFull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addTerminalToCst\", function() { return addTerminalToCst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addNoneTerminalToCst\", function() { return addNoneTerminalToCst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NamedDSLMethodsCollectorVisitor\", function() { return NamedDSLMethodsCollectorVisitor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"expandAllNestedRuleNames\", function() { return expandAllNestedRuleNames; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _grammar_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../grammar/keys */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js\");\n/* harmony import */ var _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../grammar/gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _grammar_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../grammar/gast/gast_visitor_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nfunction setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nfunction setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nfunction addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nfunction addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\nvar NamedDSLMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(NamedDSLMethodsCollectorVisitor, _super);\n    function NamedDSLMethodsCollectorVisitor(ruleIdx) {\n        var _this = _super.call(this) || this;\n        _this.result = [];\n        _this.ruleIdx = ruleIdx;\n        return _this;\n    }\n    NamedDSLMethodsCollectorVisitor.prototype.collectNamedDSLMethod = function (node, newNodeConstructor, methodIdx) {\n        // TODO: better hack to copy what we need here...\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(node.name)) {\n            // copy without name so this will indeed be processed later.\n            var nameLessNode \n            /* istanbul ignore else */\n            = void 0;\n            /* istanbul ignore else */\n            if (node instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Option\"] ||\n                node instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Repetition\"] ||\n                node instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"RepetitionMandatory\"] ||\n                node instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Alternation\"]) {\n                nameLessNode = new newNodeConstructor({\n                    definition: node.definition,\n                    idx: node.idx\n                });\n            }\n            else if (node instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"RepetitionMandatoryWithSeparator\"] ||\n                node instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"RepetitionWithSeparator\"]) {\n                nameLessNode = new newNodeConstructor({\n                    definition: node.definition,\n                    idx: node.idx,\n                    separator: node.separator\n                });\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n            var def = [nameLessNode];\n            var key = Object(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"getKeyForAutomaticLookahead\"])(this.ruleIdx, methodIdx, node.idx);\n            this.result.push({ def: def, key: key, name: node.name, orgProd: node });\n        }\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitOption = function (node) {\n        this.collectNamedDSLMethod(node, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Option\"], _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OPTION_IDX\"]);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetition = function (node) {\n        this.collectNamedDSLMethod(node, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Repetition\"], _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_IDX\"]);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (node) {\n        this.collectNamedDSLMethod(node, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"RepetitionMandatory\"], _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_IDX\"]);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {\n        this.collectNamedDSLMethod(node, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"RepetitionMandatoryWithSeparator\"], _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_SEP_IDX\"]);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (node) {\n        this.collectNamedDSLMethod(node, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"RepetitionWithSeparator\"], _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_SEP_IDX\"]);\n    };\n    NamedDSLMethodsCollectorVisitor.prototype.visitAlternation = function (node) {\n        var _this = this;\n        this.collectNamedDSLMethod(node, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Alternation\"], _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OR_IDX\"]);\n        var hasMoreThanOneAlternative = node.definition.length > 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(node.definition, function (currFlatAlt, altIdx) {\n            if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(currFlatAlt.name)) {\n                var def = currFlatAlt.definition;\n                if (hasMoreThanOneAlternative) {\n                    def = [new _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Option\"]({ definition: currFlatAlt.definition })];\n                }\n                else {\n                    // mandatory\n                    def = currFlatAlt.definition;\n                }\n                var key = Object(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"getKeyForAltIndex\"])(_this.ruleIdx, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OR_IDX\"], node.idx, altIdx);\n                _this.result.push({\n                    def: def,\n                    key: key,\n                    name: currFlatAlt.name,\n                    orgProd: currFlatAlt\n                });\n            }\n        });\n    };\n    return NamedDSLMethodsCollectorVisitor;\n}(_grammar_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_3__[\"GAstVisitor\"]));\n\nfunction expandAllNestedRuleNames(topRules, fullToShortName) {\n    var result = {\n        allRuleNames: []\n    };\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(topRules, function (currTopRule) {\n        var currTopRuleShortName = fullToShortName[currTopRule.name];\n        result.allRuleNames.push(currTopRule.name);\n        var namedCollectorVisitor = new NamedDSLMethodsCollectorVisitor(currTopRuleShortName);\n        currTopRule.accept(namedCollectorVisitor);\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(namedCollectorVisitor.result, function (_a) {\n            var def = _a.def, key = _a.key, name = _a.name;\n            result.allRuleNames.push(currTopRule.name + name);\n        });\n    });\n    return result;\n}\n//# sourceMappingURL=cst.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/cst/cst.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/cst/cst_visitor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/cst/cst_visitor.js ***!
  \**********************************************************************/
/*! exports provided: defaultVisit, createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, CstVisitorDefinitionError, validateVisitor, validateMissingCstMethods, validateRedundantMethods */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultVisit\", function() { return defaultVisit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBaseSemanticVisitorConstructor\", function() { return createBaseSemanticVisitorConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createBaseVisitorConstructorWithDefaults\", function() { return createBaseVisitorConstructorWithDefaults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CstVisitorDefinitionError\", function() { return CstVisitorDefinitionError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateVisitor\", function() { return validateVisitor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateMissingCstMethods\", function() { return validateMissingCstMethods; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateRedundantMethods\", function() { return validateRedundantMethods; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _lang_lang_extensions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lang/lang_extensions */ \"./node_modules/chevrotain/lib_esm/src/lang/lang_extensions.js\");\n/* harmony import */ var _grammar_checks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../grammar/checks */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js\");\n\n\n\nfunction defaultVisit(ctx, param) {\n    var childrenNames = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"keys\"])(ctx);\n    var childrenNamesLength = childrenNames.length;\n    for (var i = 0; i < childrenNamesLength; i++) {\n        var currChildName = childrenNames[i];\n        var currChildArray = ctx[currChildName];\n        var currChildArrayLength = currChildArray.length;\n        for (var j = 0; j < currChildArrayLength; j++) {\n            var currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                if (currChild.fullName !== undefined) {\n                    this[currChild.fullName](currChild.children, param);\n                }\n                else {\n                    this[currChild.name](currChild.children, param);\n                }\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n    return undefined;\n}\nfunction createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    var derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    Object(_lang_lang_extensions__WEBPACK_IMPORTED_MODULE_1__[\"defineNameProp\"])(derivedConstructor, grammarName + \"BaseSemantics\");\n    var semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(cstNode)) {\n                return undefined;\n            }\n            if (cstNode.fullName !== undefined) {\n                return this[cstNode.fullName](cstNode.children, param);\n            }\n            else {\n                return this[cstNode.name](cstNode.children, param);\n            }\n        },\n        validateVisitor: function () {\n            var semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(semanticDefinitionErrors)) {\n                var errorMessages = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(semanticDefinitionErrors, function (currDefError) { return currDefError.msg; });\n                throw Error(\"Errors Detected in CST Visitor <\" + Object(_lang_lang_extensions__WEBPACK_IMPORTED_MODULE_1__[\"functionName\"])(this.constructor) + \">:\\n\\t\" +\n                    (\"\" + errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")));\n            }\n        }\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nfunction createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    var derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    Object(_lang_lang_extensions__WEBPACK_IMPORTED_MODULE_1__[\"defineNameProp\"])(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    var withDefaultsProto = Object.create(baseConstructor.prototype);\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(ruleNames, function (ruleName) {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nvar CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nfunction validateVisitor(visitorInstance, ruleNames) {\n    var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);\n    return missingErrors.concat(redundantErrors);\n}\nfunction validateMissingCstMethods(visitorInstance, ruleNames) {\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(ruleNames, function (currRuleName) {\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isFunction\"])(visitorInstance[currRuleName])) {\n            return {\n                msg: \"Missing visitor method: <\" + currRuleName + \"> on \" + Object(_lang_lang_extensions__WEBPACK_IMPORTED_MODULE_1__[\"functionName\"])(visitorInstance.constructor) + \" CST Visitor.\",\n                type: CstVisitorDefinitionError.MISSING_METHOD,\n                methodName: currRuleName\n            };\n        }\n    });\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"compact\"])(errors);\n}\nvar VALID_PROP_NAMES = [\"constructor\", \"visit\", \"validateVisitor\"];\nfunction validateRedundantMethods(visitorInstance, ruleNames) {\n    var errors = [];\n    for (var prop in visitorInstance) {\n        if (_grammar_checks__WEBPACK_IMPORTED_MODULE_2__[\"validTermsPattern\"].test(prop) &&\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isFunction\"])(visitorInstance[prop]) &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(VALID_PROP_NAMES, prop) &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(ruleNames, prop)) {\n            errors.push({\n                msg: \"Redundant visitor method: <\" + prop + \"> on \" + Object(_lang_lang_extensions__WEBPACK_IMPORTED_MODULE_1__[\"functionName\"])(visitorInstance.constructor) + \" CST Visitor\\n\" +\n                    \"There is no Grammar Rule corresponding to this method's name.\\n\" +\n                    (\"For utility methods on visitor classes use methods names that do not match /\" + _grammar_checks__WEBPACK_IMPORTED_MODULE_2__[\"validTermsPattern\"].source + \"/.\"),\n                type: CstVisitorDefinitionError.REDUNDANT_METHOD,\n                methodName: prop\n            });\n        }\n    }\n    return errors;\n}\n//# sourceMappingURL=cst_visitor.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/cst/cst_visitor.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/errors_public.js":
/*!********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/errors_public.js ***!
  \********************************************************************/
/*! exports provided: defaultParserErrorProvider, defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultParserErrorProvider\", function() { return defaultParserErrorProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultGrammarResolverErrorProvider\", function() { return defaultGrammarResolverErrorProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultGrammarValidatorErrorProvider\", function() { return defaultGrammarValidatorErrorProvider; });\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./grammar/gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _grammar_gast_gast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./grammar/gast/gast */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js\");\n/* harmony import */ var _grammar_checks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./grammar/checks */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js\");\n\n\n\n\n\n\nvar defaultParserErrorProvider = {\n    buildMismatchTokenMessage: function (_a) {\n        var expected = _a.expected, actual = _a.actual, previous = _a.previous, ruleName = _a.ruleName;\n        var hasLabel = Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"hasTokenLabel\"])(expected);\n        var expectedMsg = hasLabel\n            ? \"--> \" + Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"tokenLabel\"])(expected) + \" <--\"\n            : \"token of type --> \" + expected.name + \" <--\";\n        var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n        return msg;\n    },\n    buildNotAllInputParsedMessage: function (_a) {\n        var firstRedundant = _a.firstRedundant, ruleName = _a.ruleName;\n        return (\"Redundant input, expecting EOF but found: \" + firstRedundant.image);\n    },\n    buildNoViableAltMessage: function (_a) {\n        var expectedPathsPerAlt = _a.expectedPathsPerAlt, actual = _a.actual, previous = _a.previous, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var allLookAheadPaths = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"reduce\"])(expectedPathsPerAlt, function (result, currAltPaths) { return result.concat(currAltPaths); }, []);\n            var nextValidTokenSequences = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(allLookAheadPaths, function (currPath) {\n                return \"[\" + Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(currPath, function (currTokenType) {\n                    return Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"tokenLabel\"])(currTokenType);\n                }).join(\", \") + \"]\";\n            });\n            var nextValidSequenceItems = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(nextValidTokenSequences, function (itemMsg, idx) { return \"  \" + (idx + 1) + \". \" + itemMsg; });\n            var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage: function (_a) {\n        var expectedIterationPaths = _a.expectedIterationPaths, actual = _a.actual, customUserDescription = _a.customUserDescription, ruleName = _a.ruleName;\n        var errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        var actualText = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(actual).image;\n        var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            var nextValidTokenSequences = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(expectedIterationPaths, function (currPath) {\n                return \"[\" + Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(currPath, function (currTokenType) {\n                    return Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"tokenLabel\"])(currTokenType);\n                }).join(\",\") + \"]\";\n            });\n            var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" +\n                (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    }\n};\nObject.freeze(defaultParserErrorProvider);\nvar defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n        var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    }\n};\nvar defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Terminal\"]) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"NonTerminal\"]) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        var topLevelName = topLevelRule.name;\n        var duplicateProd = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(duplicateProds);\n        var index = duplicateProd.idx;\n        var dslName = Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_3__[\"getProductionDslName\"])(duplicateProd);\n        var extraArgument = getExtraProductionArgument(duplicateProd);\n        var hasExplicitIndex = index > 0;\n        var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://sap.github.io/chevrotain/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildInvalidNestedRuleNameError: function (topLevelRule, nestedProd) {\n        var msg = \"Invalid nested rule name: ->\" + nestedProd.name + \"<- inside rule: ->\" + topLevelRule.name + \"<-\\n\" +\n            (\"it must match the pattern: ->\" + _grammar_checks__WEBPACK_IMPORTED_MODULE_4__[\"validNestedRuleName\"].toString() + \"<-.\\n\") +\n            \"Note that this means a nested rule name must start with the '$'(dollar) sign.\";\n        return msg;\n    },\n    buildDuplicateNestedRuleNameError: function (topLevelRule, nestedProd) {\n        var duplicateName = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(nestedProd).name;\n        var errMsg = \"Duplicate nested rule name: ->\" + duplicateName + \"<- inside rule: ->\" + topLevelRule.name + \"<-\\n\" +\n            \"A nested name must be unique in the scope of a top level grammar rule.\";\n        return errMsg;\n    },\n    buildNamespaceConflictError: function (rule) {\n        var errMsg = \"Namespace conflict found in grammar.\\n\" +\n            (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") +\n            \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" +\n            \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" +\n            \"and Non-Terminal names start with a lower case letter.\";\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError: function (options) {\n        var pathMsg = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(options.prefixPath, function (currTok) {\n            return Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"tokenLabel\"])(currTok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" +\n            (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") +\n            \"See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" +\n            \"For Further details.\";\n        return errMsg;\n    },\n    buildAlternationAmbiguityError: function (options) {\n        var pathMsg = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(options.prefixPath, function (currtok) {\n            return Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"tokenLabel\"])(currtok);\n        }).join(\", \");\n        var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" +\n            (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") +\n            (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n        currMessage =\n            currMessage +\n                \"See: https://sap.github.io/chevrotain/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" +\n                \"For Further details.\";\n        return currMessage;\n    },\n    buildEmptyRepetitionError: function (options) {\n        var dslName = Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_3__[\"getProductionDslName\"])(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" +\n            \"This could lead to an infinite loop.\";\n        return errMsg;\n    },\n    buildTokenNameError: function (options) {\n        var tokTypeName = options.tokenType.name;\n        var errMsg = \"Invalid Grammar Token name: ->\" + tokTypeName + \"<- it must match the pattern: ->\" + options.expectedPattern.toString() + \"<-\";\n        return errMsg;\n    },\n    buildEmptyAlternationError: function (options) {\n        var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" +\n            (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") +\n            \"Only the last alternative may be an empty alternative.\";\n        return errMsg;\n    },\n    buildTooManyAlternativesError: function (options) {\n        var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" +\n            (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length +\n                1) + \" alternatives.\");\n        return errMsg;\n    },\n    buildLeftRecursionError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var pathNames = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"](options.leftRecursionPath, function (currRule) { return currRule.name; });\n        var leftRecursivePath = ruleName + \" --> \" + pathNames\n            .concat([ruleName])\n            .join(\" --> \");\n        var errMsg = \"Left Recursion found in grammar.\\n\" +\n            (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") +\n            (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") +\n            \" To fix this refactor your grammar to remove the left recursion.\\n\" +\n            \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n        return errMsg;\n    },\n    buildInvalidRuleNameError: function (options) {\n        var ruleName = options.topLevelRule.name;\n        var expectedPatternString = options.expectedPattern.toString();\n        var errMsg = \"Invalid grammar rule name: ->\" + ruleName + \"<- it must match the pattern: ->\" + expectedPatternString + \"<-\";\n        return errMsg;\n    },\n    buildDuplicateRuleNameError: function (options) {\n        var ruleName;\n        if (options.topLevelRule instanceof _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_2__[\"Rule\"]) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n        return errMsg;\n    }\n};\n//# sourceMappingURL=errors_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/errors_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js":
/*!************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js ***!
  \************************************************************************/
/*! exports provided: isRecognitionException, MismatchedTokenException, NoViableAltException, NotAllInputParsedException, EarlyExitException */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRecognitionException\", function() { return isRecognitionException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MismatchedTokenException\", function() { return MismatchedTokenException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NoViableAltException\", function() { return NoViableAltException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NotAllInputParsedException\", function() { return NotAllInputParsedException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EarlyExitException\", function() { return EarlyExitException; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n\nvar MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nvar NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nvar EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nvar NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nvar RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nfunction isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nfunction MismatchedTokenException(message, token, previousToken) {\n    this.name = MISMATCHED_TOKEN_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\n// must use the \"Error.prototype\" instead of \"new Error\"\n// because the stack trace points to where \"new Error\" was invoked\"\nMismatchedTokenException.prototype = Error.prototype;\nfunction NoViableAltException(message, token, previousToken) {\n    this.name = NO_VIABLE_ALT_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nNoViableAltException.prototype = Error.prototype;\nfunction NotAllInputParsedException(message, token) {\n    this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.resyncedTokens = [];\n}\nNotAllInputParsedException.prototype = Error.prototype;\nfunction EarlyExitException(message, token, previousToken) {\n    this.name = EARLY_EXIT_EXCEPTION;\n    this.message = message;\n    this.token = token;\n    this.previousToken = previousToken;\n    this.resyncedTokens = [];\n}\nEarlyExitException.prototype = Error.prototype;\n//# sourceMappingURL=exceptions_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js":
/*!*********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js ***!
  \*********************************************************************/
/*! exports provided: validateGrammar, identifyProductionForDuplicates, OccurrenceValidationCollector, validTermsPattern, validNestedRuleName, validateRuleName, validateNestedRuleName, validateTokenName, validateRuleDoesNotAlreadyExist, validateRuleIsOverridden, validateNoLeftRecursion, getFirstNoneTerminal, validateEmptyOrAlternative, validateAmbiguousAlternationAlternatives, RepetionCollector, validateTooManyAlts, validateSomeNonEmptyLookaheadPath, checkPrefixAlternativesAmbiguities */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateGrammar\", function() { return validateGrammar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"identifyProductionForDuplicates\", function() { return identifyProductionForDuplicates; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OccurrenceValidationCollector\", function() { return OccurrenceValidationCollector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validTermsPattern\", function() { return validTermsPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validNestedRuleName\", function() { return validNestedRuleName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateRuleName\", function() { return validateRuleName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateNestedRuleName\", function() { return validateNestedRuleName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateTokenName\", function() { return validateTokenName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateRuleDoesNotAlreadyExist\", function() { return validateRuleDoesNotAlreadyExist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateRuleIsOverridden\", function() { return validateRuleIsOverridden; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateNoLeftRecursion\", function() { return validateNoLeftRecursion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFirstNoneTerminal\", function() { return getFirstNoneTerminal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateEmptyOrAlternative\", function() { return validateEmptyOrAlternative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateAmbiguousAlternationAlternatives\", function() { return validateAmbiguousAlternationAlternatives; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RepetionCollector\", function() { return RepetionCollector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateTooManyAlts\", function() { return validateTooManyAlts; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateSomeNonEmptyLookaheadPath\", function() { return validateSomeNonEmptyLookaheadPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkPrefixAlternativesAmbiguities\", function() { return checkPrefixAlternativesAmbiguities; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _parser_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony import */ var _gast_gast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gast/gast */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js\");\n/* harmony import */ var _lookahead__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lookahead */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js\");\n/* harmony import */ var _cst_cst__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cst/cst */ \"./node_modules/chevrotain/lib_esm/src/parse/cst/cst.js\");\n/* harmony import */ var _interpreter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./interpreter */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js\");\n/* harmony import */ var _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gast/gast_visitor_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\nfunction validateGrammar(topLevels, globalMaxLookahead, tokenTypes, ignoredIssues, errMsgProvider, grammarName) {\n    var duplicateErrors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](topLevels, function (currTopLevel) {\n        return validateDuplicateProductions(currTopLevel, errMsgProvider);\n    });\n    var leftRecursionErrors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](topLevels, function (currTopRule) {\n        return validateNoLeftRecursion(currTopRule, currTopRule, errMsgProvider);\n    });\n    var emptyAltErrors = [];\n    var ambiguousAltsErrors = [];\n    var emptyRepetitionErrors = [];\n    // left recursion could cause infinite loops in the following validations.\n    // It is safest to first have the user fix the left recursion errors first and only then examine Further issues.\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(leftRecursionErrors, _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])) {\n        emptyAltErrors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(topLevels, function (currTopRule) {\n            return validateEmptyOrAlternative(currTopRule, errMsgProvider);\n        });\n        ambiguousAltsErrors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(topLevels, function (currTopRule) {\n            return validateAmbiguousAlternationAlternatives(currTopRule, globalMaxLookahead, ignoredIssues, errMsgProvider);\n        });\n        emptyRepetitionErrors = validateSomeNonEmptyLookaheadPath(topLevels, globalMaxLookahead, errMsgProvider);\n    }\n    var termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    var tokenNameErrors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](tokenTypes, function (currTokType) {\n        return validateTokenName(currTokType, errMsgProvider);\n    });\n    var nestedRulesNameErrors = validateNestedRulesNames(topLevels, errMsgProvider);\n    var nestedRulesDuplicateErrors = validateDuplicateNestedRules(topLevels, errMsgProvider);\n    var tooManyAltsErrors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(topLevels, function (curRule) {\n        return validateTooManyAlts(curRule, errMsgProvider);\n    });\n    var ruleNameErrors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(topLevels, function (curRule) {\n        return validateRuleName(curRule, errMsgProvider);\n    });\n    var duplicateRulesError = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(topLevels, function (curRule) {\n        return validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider);\n    });\n    return (_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"](duplicateErrors.concat(tokenNameErrors, nestedRulesNameErrors, nestedRulesDuplicateErrors, emptyRepetitionErrors, leftRecursionErrors, emptyAltErrors, ambiguousAltsErrors, termsNamespaceConflictErrors, tooManyAltsErrors, ruleNameErrors, duplicateRulesError)));\n}\nfunction validateNestedRulesNames(topLevels, errMsgProvider) {\n    var result = [];\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(topLevels, function (curTopLevel) {\n        var namedCollectorVisitor = new _cst_cst__WEBPACK_IMPORTED_MODULE_4__[\"NamedDSLMethodsCollectorVisitor\"](\"\");\n        curTopLevel.accept(namedCollectorVisitor);\n        var nestedProds = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(namedCollectorVisitor.result, function (currItem) { return currItem.orgProd; });\n        result.push(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(nestedProds, function (currNestedProd) {\n            return validateNestedRuleName(curTopLevel, currNestedProd, errMsgProvider);\n        }));\n    });\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(result);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    var collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    var allRuleProductions = collectorVisitor.allProductions;\n    var productionGroups = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"groupBy\"](allRuleProductions, identifyProductionForDuplicates);\n    var duplicates = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"](productionGroups, function (currGroup) {\n        return currGroup.length > 1;\n    });\n    var errors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"](duplicates), function (currDuplicates) {\n        var firstProd = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"first\"](currDuplicates);\n        var msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        var dslName = Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"getProductionDslName\"])(firstProd);\n        var defError = {\n            message: msg,\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx\n        };\n        var param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nfunction identifyProductionForDuplicates(prod) {\n    return Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"getProductionDslName\"])(prod) + \"_#_\" + prod.idx + \"_#_\" + getExtraProductionArgument(prod);\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"Terminal\"]) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"NonTerminal\"]) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nvar OccurrenceValidationCollector = /** @class */ (function (_super) {\n    __extends(OccurrenceValidationCollector, _super);\n    function OccurrenceValidationCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allProductions = [];\n        return _this;\n    }\n    OccurrenceValidationCollector.prototype.visitNonTerminal = function (subrule) {\n        this.allProductions.push(subrule);\n    };\n    OccurrenceValidationCollector.prototype.visitOption = function (option) {\n        this.allProductions.push(option);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.allProductions.push(manySep);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    };\n    OccurrenceValidationCollector.prototype.visitRepetition = function (many) {\n        this.allProductions.push(many);\n    };\n    OccurrenceValidationCollector.prototype.visitAlternation = function (or) {\n        this.allProductions.push(or);\n    };\n    OccurrenceValidationCollector.prototype.visitTerminal = function (terminal) {\n        this.allProductions.push(terminal);\n    };\n    return OccurrenceValidationCollector;\n}(_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_7__[\"GAstVisitor\"]));\n\nvar validTermsPattern = /^[a-zA-Z_]\\w*$/;\nvar validNestedRuleName = new RegExp(validTermsPattern.source.replace(\"^\", \"^\\\\$\"));\n// TODO: remove this limitation now that we use recorders\nfunction validateRuleName(rule, errMsgProvider) {\n    var errors = [];\n    var ruleName = rule.name;\n    if (!ruleName.match(validTermsPattern)) {\n        errors.push({\n            message: errMsgProvider.buildInvalidRuleNameError({\n                topLevelRule: rule,\n                expectedPattern: validTermsPattern\n            }),\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].INVALID_RULE_NAME,\n            ruleName: ruleName\n        });\n    }\n    return errors;\n}\n// TODO: did the nested rule name regExp now change?\nfunction validateNestedRuleName(topLevel, nestedProd, errMsgProvider) {\n    var errors = [];\n    var errMsg;\n    if (!nestedProd.name.match(validNestedRuleName)) {\n        errMsg = errMsgProvider.buildInvalidNestedRuleNameError(topLevel, nestedProd);\n        errors.push({\n            message: errMsg,\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].INVALID_NESTED_RULE_NAME,\n            ruleName: topLevel.name\n        });\n    }\n    return errors;\n}\n// TODO: remove this limitation now that we use recorders\nfunction validateTokenName(tokenType, errMsgProvider) {\n    var errors = [];\n    var tokTypeName = tokenType.name;\n    if (!tokTypeName.match(validTermsPattern)) {\n        errors.push({\n            message: errMsgProvider.buildTokenNameError({\n                tokenType: tokenType,\n                expectedPattern: validTermsPattern\n            }),\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].INVALID_TOKEN_NAME\n        });\n    }\n    return errors;\n}\nfunction validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    var errors = [];\n    var occurrences = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(allRules, function (result, curRule) {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        var errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className\n        });\n        errors.push({\n            message: errMsg,\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].DUPLICATE_RULE_NAME,\n            ruleName: rule.name\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nfunction validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    var errors = [];\n    var errMsg;\n    if (!_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"](definedRulesNames, ruleName)) {\n        errMsg =\n            \"Invalid rule override, rule: ->\" + ruleName + \"<- cannot be overridden in the grammar: ->\" + className + \"<-\" +\n                \"as it is not defined in any of the super grammars \";\n        errors.push({\n            message: errMsg,\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].INVALID_RULE_OVERRIDE,\n            ruleName: ruleName\n        });\n    }\n    return errors;\n}\nfunction validateNoLeftRecursion(topRule, currRule, errMsgProvider, path) {\n    if (path === void 0) { path = []; }\n    var errors = [];\n    var nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"](nextNonTerminals)) {\n        return [];\n    }\n    else {\n        var ruleName = topRule.name;\n        var foundLeftRecursion = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"](nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path\n                }),\n                type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].LEFT_RECURSION,\n                ruleName: ruleName\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        var validNextSteps = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"difference\"](nextNonTerminals, path.concat([topRule]));\n        var errorsFromNextSteps = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](validNextSteps, function (currRefRule) {\n            var newPath = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"cloneArr\"](path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"](errorsFromNextSteps));\n    }\n}\nfunction getFirstNoneTerminal(definition) {\n    var result = [];\n    if (_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"](definition)) {\n        return result;\n    }\n    var firstProd = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"first\"](definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"NonTerminal\"]) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"Flat\"] ||\n        firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"Option\"] ||\n        firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"RepetitionMandatory\"] ||\n        firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"RepetitionMandatoryWithSeparator\"] ||\n        firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"RepetitionWithSeparator\"] ||\n        firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"Repetition\"]) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"Alternation\"]) {\n        // each sub definition in alternation is a FLAT\n        result = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"](_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](firstProd.definition, function (currSubDef) {\n            return getFirstNoneTerminal(currSubDef.definition);\n        }));\n    }\n    else if (firstProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_6__[\"Terminal\"]) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    var isFirstOptional = Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"isOptionalProd\"])(firstProd);\n    var hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        var rest = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"drop\"](definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nvar OrCollector = /** @class */ (function (_super) {\n    __extends(OrCollector, _super);\n    function OrCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.alternations = [];\n        return _this;\n    }\n    OrCollector.prototype.visitAlternation = function (node) {\n        this.alternations.push(node);\n    };\n    return OrCollector;\n}(_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_7__[\"GAstVisitor\"]));\nfunction validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var errors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"](ors, function (errors, currOr) {\n        var exceptLast = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"dropRight\"](currOr.definition);\n        var currErrors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](exceptLast, function (currAlternative, currAltIdx) {\n            var possibleFirstInAlt = Object(_interpreter__WEBPACK_IMPORTED_MODULE_5__[\"nextPossibleTokensAfter\"])([currAlternative], [], null, 1);\n            if (_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"](possibleFirstInAlt)) {\n                return {\n                    message: errMsgProvider.buildEmptyAlternationError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                        emptyChoiceIdx: currAltIdx\n                    }),\n                    type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].NONE_LAST_EMPTY_ALT,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                    alternative: currAltIdx + 1\n                };\n            }\n            else {\n                return null;\n            }\n        });\n        return errors.concat(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"compact\"](currErrors));\n    }, []);\n    return errors;\n}\nfunction validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, ignoredIssues, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    // TODO: this filtering should be deprecated once we remove the ignoredIssues\n    //  IParserConfig property\n    var ignoredIssuesForCurrentRule = ignoredIssues[topLevelRule.name];\n    if (ignoredIssuesForCurrentRule) {\n        ors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reject\"])(ors, function (currOr) {\n            return ignoredIssuesForCurrentRule[Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"getProductionDslName\"])(currOr) +\n                (currOr.idx === 0 ? \"\" : currOr.idx)];\n        });\n    }\n    // New Handling of ignoring ambiguities\n    // - https://github.com/SAP/chevrotain/issues/869\n    ors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reject\"])(ors, function (currOr) { return currOr.ignoreAmbiguities === true; });\n    var errors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"](ors, function (result, currOr) {\n        var currOccurrence = currOr.idx;\n        var actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        var alternatives = Object(_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"getLookaheadPathsForOr\"])(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        var altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        var altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return result.concat(altsAmbiguityErrors, altsPrefixAmbiguityErrors);\n    }, []);\n    return errors;\n}\nvar RepetionCollector = /** @class */ (function (_super) {\n    __extends(RepetionCollector, _super);\n    function RepetionCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allProductions = [];\n        return _this;\n    }\n    RepetionCollector.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.allProductions.push(manySep);\n    };\n    RepetionCollector.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    };\n    RepetionCollector.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    };\n    RepetionCollector.prototype.visitRepetition = function (many) {\n        this.allProductions.push(many);\n    };\n    return RepetionCollector;\n}(_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_7__[\"GAstVisitor\"]));\n\nfunction validateTooManyAlts(topLevelRule, errMsgProvider) {\n    var orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    var ors = orCollector.alternations;\n    var errors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"](ors, function (errors, currOr) {\n        if (currOr.definition.length > 255) {\n            errors.push({\n                message: errMsgProvider.buildTooManyAlternativesError({\n                    topLevelRule: topLevelRule,\n                    alternation: currOr\n                }),\n                type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].TOO_MANY_ALTS,\n                ruleName: topLevelRule.name,\n                occurrence: currOr.idx\n            });\n        }\n        return errors;\n    }, []);\n    return errors;\n}\nfunction validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    var errors = [];\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(topLevelRules, function (currTopRule) {\n        var collectorVisitor = new RepetionCollector();\n        currTopRule.accept(collectorVisitor);\n        var allRuleProductions = collectorVisitor.allProductions;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(allRuleProductions, function (currProd) {\n            var prodType = Object(_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"getProdType\"])(currProd);\n            var actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            var currOccurrence = currProd.idx;\n            var paths = Object(_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"getLookaheadPathsForOptionalProd\"])(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            var pathsInsideProduction = paths[0];\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(pathsInsideProduction))) {\n                var errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd\n                });\n                errors.push({\n                    message: errMsg,\n                    type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    var foundAmbiguousPaths = [];\n    var identicalAmbiguities = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(alternatives, function (result, currAlt, currAltIdx) {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(currAlt, function (currPath) {\n            var altsCurrPathAppearsIn = [currAltIdx];\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(alternatives, function (currOtherAlt, currOtherAltIdx) {\n                if (currAltIdx !== currOtherAltIdx &&\n                    Object(_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"containsPath\"])(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx]\n                        .ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !Object(_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"containsPath\"])(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath\n                });\n            }\n        });\n        return result;\n    }, []);\n    var currErrors = _utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"](identicalAmbiguities, function (currAmbDescriptor) {\n        var ambgIndices = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(currAmbDescriptor.alts, function (currAltIdx) { return currAltIdx + 1; });\n        var currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path\n        });\n        return {\n            message: currMessage,\n            type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: [currAmbDescriptor.alts]\n        };\n    });\n    return currErrors;\n}\nfunction checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    var errors = [];\n    // flatten\n    var pathsAndIndices = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(alternatives, function (result, currAlt, idx) {\n        var currPathsAndIdx = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(currAlt, function (currPath) {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(pathsAndIndices, function (currPathAndIdx) {\n        var alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return;\n        }\n        var targetIdx = currPathAndIdx.idx;\n        var targetPath = currPathAndIdx.path;\n        var prefixAmbiguitiesPathsAndIndices = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"findAll\"])(pathsAndIndices, function (searchPathAndIdx) {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx]\n                .ignoreAmbiguities !== true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                Object(_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"isStrictPrefixOfPath\"])(searchPathAndIdx.path, targetPath));\n        });\n        var currPathPrefixErrors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(prefixAmbiguitiesPathsAndIndices, function (currAmbPathAndIdx) {\n            var ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            var occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            var message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path\n            });\n            return {\n                message: message,\n                type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices\n            };\n        });\n        errors = errors.concat(currPathPrefixErrors);\n    });\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    var errors = [];\n    var tokenNames = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(tokenTypes, function (currToken) { return currToken.name; });\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(topLevels, function (currRule) {\n        var currRuleName = currRule.name;\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(tokenNames, currRuleName)) {\n            var errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName\n            });\n        }\n    });\n    return errors;\n}\nfunction validateDuplicateNestedRules(topLevelRules, errMsgProvider) {\n    var errors = [];\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(topLevelRules, function (currTopRule) {\n        var namedCollectorVisitor = new _cst_cst__WEBPACK_IMPORTED_MODULE_4__[\"NamedDSLMethodsCollectorVisitor\"](\"\");\n        currTopRule.accept(namedCollectorVisitor);\n        var prodsByGroup = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"groupBy\"])(namedCollectorVisitor.result, function (item) { return item.name; });\n        var duplicates = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(prodsByGroup, function (currGroup) {\n            return currGroup.length > 1;\n        });\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(duplicates), function (currDupGroup) {\n            var currDupProds = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(currDupGroup, function (dupGroup) { return dupGroup.orgProd; });\n            var errMsg = errMsgProvider.buildDuplicateNestedRuleNameError(currTopRule, currDupProds);\n            errors.push({\n                message: errMsg,\n                type: _parser_parser__WEBPACK_IMPORTED_MODULE_1__[\"ParserDefinitionErrorType\"].DUPLICATE_NESTED_NAME,\n                ruleName: currTopRule.name\n            });\n        });\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/first.js":
/*!********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/first.js ***!
  \********************************************************************/
/*! exports provided: first, firstForSequence, firstForBranching, firstForTerminal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return first; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstForSequence\", function() { return firstForSequence; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstForBranching\", function() { return firstForBranching; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstForTerminal\", function() { return firstForTerminal; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _gast_gast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gast/gast */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js\");\n\n\n\nfunction first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"]) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"]) {\n        return firstForTerminal(prod);\n    }\n    else if (Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"isSequenceProd\"])(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"isBranchingProd\"])(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction firstForSequence(prod) {\n    var firstSet = [];\n    var seq = prod.definition;\n    var nextSubProdIdx = 0;\n    var hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    var currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    var isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = Object(_gast_gast__WEBPACK_IMPORTED_MODULE_2__[\"isOptionalProd\"])(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"uniq\"])(firstSet);\n}\nfunction firstForBranching(prod) {\n    var allAlternativesFirsts = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(prod.definition, function (innerProd) {\n        return first(innerProd);\n    });\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"uniq\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(allAlternativesFirsts));\n}\nfunction firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/first.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/follow.js":
/*!*********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/follow.js ***!
  \*********************************************************************/
/*! exports provided: ResyncFollowsWalker, computeAllProdsFollows, buildBetweenProdsFollowPrefix, buildInProdFollowPrefix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResyncFollowsWalker\", function() { return ResyncFollowsWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"computeAllProdsFollows\", function() { return computeAllProdsFollows; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildBetweenProdsFollowPrefix\", function() { return buildBetweenProdsFollowPrefix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildInProdFollowPrefix\", function() { return buildInProdFollowPrefix; });\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rest */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/rest.js\");\n/* harmony import */ var _first__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./first */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/first.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants */ \"./node_modules/chevrotain/lib_esm/src/parse/constants.js\");\n/* harmony import */ var _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nvar ResyncFollowsWalker = /** @class */ (function (_super) {\n    __extends(ResyncFollowsWalker, _super);\n    function ResyncFollowsWalker(topProd) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.follows = {};\n        return _this;\n    }\n    ResyncFollowsWalker.prototype.startWalking = function () {\n        this.walk(this.topProd);\n        return this.follows;\n    };\n    ResyncFollowsWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    };\n    ResyncFollowsWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n        var followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        var fullRest = currRest.concat(prevRest);\n        var restProd = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"Flat\"]({ definition: fullRest });\n        var t_in_topProd_follows = Object(_first__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    };\n    return ResyncFollowsWalker;\n}(_rest__WEBPACK_IMPORTED_MODULE_0__[\"RestWalker\"]));\n\nfunction computeAllProdsFollows(topProductions) {\n    var reSyncFollows = {};\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(topProductions, function (topProd) {\n        var currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"assign\"])(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nfunction buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + _constants__WEBPACK_IMPORTED_MODULE_3__[\"IN\"];\n}\nfunction buildInProdFollowPrefix(terminal) {\n    var terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + _constants__WEBPACK_IMPORTED_MODULE_3__[\"IN\"];\n}\n//# sourceMappingURL=follow.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/follow.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js":
/*!************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js ***!
  \************************************************************************/
/*! exports provided: isSequenceProd, isOptionalProd, isBranchingProd, getProductionDslName, DslMethodsCollectorVisitor, collectMethods */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isSequenceProd\", function() { return isSequenceProd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOptionalProd\", function() { return isOptionalProd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBranchingProd\", function() { return isBranchingProd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getProductionDslName\", function() { return getProductionDslName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DslMethodsCollectorVisitor\", function() { return DslMethodsCollectorVisitor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"collectMethods\", function() { return collectMethods; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _gast_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _gast_visitor_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gast_visitor_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nfunction isSequenceProd(prod) {\n    return (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Flat\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Repetition\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatory\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatoryWithSeparator\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionWithSeparator\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Rule\"]);\n}\nfunction isOptionalProd(prod, alreadyVisited) {\n    if (alreadyVisited === void 0) { alreadyVisited = []; }\n    var isDirectlyOptional = prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Repetition\"] ||\n        prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionWithSeparator\"];\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Alternation\"]) {\n        // for OR its enough for just one of the alternatives to be optional\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"some\"])(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"] && Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"AbstractProduction\"]) {\n        if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"]) {\n            alreadyVisited.push(prod);\n        }\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nfunction isBranchingProd(prod) {\n    return prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Alternation\"];\n}\nfunction getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"]) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"]) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Alternation\"]) {\n        return \"OR\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatory\"]) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatoryWithSeparator\"]) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionWithSeparator\"]) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Repetition\"]) {\n        return \"MANY\";\n    }\n    else if (prod instanceof _gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"]) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nvar DslMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(DslMethodsCollectorVisitor, _super);\n    function DslMethodsCollectorVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // A minus is never valid in an identifier name\n        _this.separator = \"-\";\n        _this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n        return _this;\n    }\n    DslMethodsCollectorVisitor.prototype.reset = function () {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n    };\n    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n        var key = terminal.terminalType.name + this.separator + \"Terminal\";\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(terminal);\n    };\n    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n        var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(subrule);\n    };\n    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n        this.dslMethods.option.push(option);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n        this.dslMethods.repetition.push(many);\n    };\n    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n        this.dslMethods.alternation.push(or);\n    };\n    return DslMethodsCollectorVisitor;\n}(_gast_visitor_public__WEBPACK_IMPORTED_MODULE_2__[\"GAstVisitor\"]));\n\nvar collectorVisitor = new DslMethodsCollectorVisitor();\nfunction collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    var dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=gast.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js ***!
  \*******************************************************************************/
/*! exports provided: AbstractProduction, NonTerminal, Rule, Flat, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, Repetition, RepetitionWithSeparator, Alternation, Terminal, serializeGrammar, serializeProduction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractProduction\", function() { return AbstractProduction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NonTerminal\", function() { return NonTerminal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rule\", function() { return Rule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Flat\", function() { return Flat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Option\", function() { return Option; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RepetitionMandatory\", function() { return RepetitionMandatory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RepetitionMandatoryWithSeparator\", function() { return RepetitionMandatoryWithSeparator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Repetition\", function() { return Repetition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RepetitionWithSeparator\", function() { return RepetitionWithSeparator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Alternation\", function() { return Alternation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Terminal\", function() { return Terminal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeGrammar\", function() { return serializeGrammar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"serializeProduction\", function() { return serializeProduction; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar AbstractProduction = /** @class */ (function () {\n    function AbstractProduction(definition) {\n        this.definition = definition;\n    }\n    AbstractProduction.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(this.definition, function (prod) {\n            prod.accept(visitor);\n        });\n    };\n    return AbstractProduction;\n}());\n\nvar NonTerminal = /** @class */ (function (_super) {\n    __extends(NonTerminal, _super);\n    function NonTerminal(options) {\n        var _this = _super.call(this, []) || this;\n        _this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    Object.defineProperty(NonTerminal.prototype, \"definition\", {\n        get: function () {\n            if (this.referencedRule !== undefined) {\n                return this.referencedRule.definition;\n            }\n            return [];\n        },\n        set: function (definition) {\n            // immutable\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NonTerminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    };\n    return NonTerminal;\n}(AbstractProduction));\n\nvar Rule = /** @class */ (function (_super) {\n    __extends(Rule, _super);\n    function Rule(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.orgText = \"\";\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Rule;\n}(AbstractProduction));\n\n// TODO: is this only used in an Alternation?\n//       Perhaps `Flat` should be renamed to `Alternative`?\nvar Flat = /** @class */ (function (_super) {\n    __extends(Flat, _super);\n    // A named Flat production is used to indicate a Nested Rule in an alternation\n    function Flat(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.ignoreAmbiguities = false;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Flat;\n}(AbstractProduction));\n\nvar Option = /** @class */ (function (_super) {\n    __extends(Option, _super);\n    function Option(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Option;\n}(AbstractProduction));\n\nvar RepetitionMandatory = /** @class */ (function (_super) {\n    __extends(RepetitionMandatory, _super);\n    function RepetitionMandatory(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatory;\n}(AbstractProduction));\n\nvar RepetitionMandatoryWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionMandatoryWithSeparator, _super);\n    function RepetitionMandatoryWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionMandatoryWithSeparator;\n}(AbstractProduction));\n\nvar Repetition = /** @class */ (function (_super) {\n    __extends(Repetition, _super);\n    function Repetition(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Repetition;\n}(AbstractProduction));\n\nvar RepetitionWithSeparator = /** @class */ (function (_super) {\n    __extends(RepetitionWithSeparator, _super);\n    function RepetitionWithSeparator(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return RepetitionWithSeparator;\n}(AbstractProduction));\n\nvar Alternation = /** @class */ (function (_super) {\n    __extends(Alternation, _super);\n    function Alternation(options) {\n        var _this = _super.call(this, options.definition) || this;\n        _this.idx = 1;\n        _this.ignoreAmbiguities = false;\n        _this.hasPredicates = false;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(_this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n        return _this;\n    }\n    return Alternation;\n}(AbstractProduction));\n\nvar Terminal = /** @class */ (function () {\n    function Terminal(options) {\n        this.idx = 1;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"assign\"])(this, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"pick\"])(options, function (v) { return v !== undefined; }));\n    }\n    Terminal.prototype.accept = function (visitor) {\n        visitor.visit(this);\n    };\n    return Terminal;\n}());\n\nfunction serializeGrammar(topRules) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(topRules, serializeProduction);\n}\nfunction serializeProduction(node) {\n    function convertDefinition(definition) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        return {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx\n        };\n    }\n    else if (node instanceof Flat) {\n        return {\n            type: \"Flat\",\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            name: node.name,\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            name: node.name,\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            name: node.name,\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            name: node.name,\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            name: node.name,\n            idx: node.idx,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else if (node instanceof Terminal) {\n        var serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_1__[\"tokenLabel\"])(node.terminalType),\n            idx: node.idx\n        };\n        var pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isRegExp\"])(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition)\n        };\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=gast_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_resolver_public.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_resolver_public.js ***!
  \****************************************************************************************/
/*! exports provided: resolveGrammar, validateGrammar, assignOccurrenceIndices */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveGrammar\", function() { return resolveGrammar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateGrammar\", function() { return validateGrammar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignOccurrenceIndices\", function() { return assignOccurrenceIndices; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _resolver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../resolver */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/resolver.js\");\n/* harmony import */ var _checks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../checks */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js\");\n/* harmony import */ var _errors_public__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors_public */ \"./node_modules/chevrotain/lib_esm/src/parse/errors_public.js\");\n/* harmony import */ var _gast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gast */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js\");\n\n\n\n\n\nfunction resolveGrammar(options) {\n    options = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"defaults\"])(options, {\n        errMsgProvider: _errors_public__WEBPACK_IMPORTED_MODULE_3__[\"defaultGrammarResolverErrorProvider\"]\n    });\n    var topRulesTable = {};\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(options.rules, function (rule) {\n        topRulesTable[rule.name] = rule;\n    });\n    return Object(_resolver__WEBPACK_IMPORTED_MODULE_1__[\"resolveGrammar\"])(topRulesTable, options.errMsgProvider);\n}\nfunction validateGrammar(options) {\n    options = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"defaults\"])(options, {\n        errMsgProvider: _errors_public__WEBPACK_IMPORTED_MODULE_3__[\"defaultGrammarValidatorErrorProvider\"],\n        ignoredIssues: {}\n    });\n    return Object(_checks__WEBPACK_IMPORTED_MODULE_2__[\"validateGrammar\"])(options.rules, options.maxLookahead, options.tokenTypes, options.ignoredIssues, options.errMsgProvider, options.grammarName);\n}\nfunction assignOccurrenceIndices(options) {\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(options.rules, function (currRule) {\n        var methodsCollector = new _gast__WEBPACK_IMPORTED_MODULE_4__[\"DslMethodsCollectorVisitor\"]();\n        currRule.accept(methodsCollector);\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(methodsCollector.dslMethods, function (methods) {\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(methods, function (currMethod, arrIdx) {\n                currMethod.idx = arrIdx + 1;\n            });\n        });\n    });\n}\n//# sourceMappingURL=gast_resolver_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_resolver_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js ***!
  \***************************************************************************************/
/*! exports provided: GAstVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GAstVisitor\", function() { return GAstVisitor; });\n/* harmony import */ var _gast_public__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n\nvar GAstVisitor = /** @class */ (function () {\n    function GAstVisitor() {\n    }\n    GAstVisitor.prototype.visit = function (node) {\n        var nodeAny = node;\n        switch (nodeAny.constructor) {\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"NonTerminal\"]:\n                return this.visitNonTerminal(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"Flat\"]:\n                return this.visitFlat(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"Option\"]:\n                return this.visitOption(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"RepetitionMandatory\"]:\n                return this.visitRepetitionMandatory(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"RepetitionMandatoryWithSeparator\"]:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"RepetitionWithSeparator\"]:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"Repetition\"]:\n                return this.visitRepetition(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"Alternation\"]:\n                return this.visitAlternation(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"Terminal\"]:\n                return this.visitTerminal(nodeAny);\n            case _gast_public__WEBPACK_IMPORTED_MODULE_0__[\"Rule\"]:\n                return this.visitRule(nodeAny);\n            /* istanbul ignore next */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    };\n    GAstVisitor.prototype.visitNonTerminal = function (node) { };\n    GAstVisitor.prototype.visitFlat = function (node) { };\n    GAstVisitor.prototype.visitOption = function (node) { };\n    GAstVisitor.prototype.visitRepetition = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitAlternation = function (node) { };\n    GAstVisitor.prototype.visitTerminal = function (node) { };\n    GAstVisitor.prototype.visitRule = function (node) { };\n    return GAstVisitor;\n}());\n\n//# sourceMappingURL=gast_visitor_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js":
/*!**************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js ***!
  \**************************************************************************/
/*! exports provided: AbstractNextPossibleTokensWalker, NextAfterTokenWalker, AbstractNextTerminalAfterProductionWalker, NextTerminalAfterManyWalker, NextTerminalAfterManySepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterAtLeastOneSepWalker, possiblePathsFrom, nextPossibleTokensAfter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractNextPossibleTokensWalker\", function() { return AbstractNextPossibleTokensWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NextAfterTokenWalker\", function() { return NextAfterTokenWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractNextTerminalAfterProductionWalker\", function() { return AbstractNextTerminalAfterProductionWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NextTerminalAfterManyWalker\", function() { return NextTerminalAfterManyWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NextTerminalAfterManySepWalker\", function() { return NextTerminalAfterManySepWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NextTerminalAfterAtLeastOneWalker\", function() { return NextTerminalAfterAtLeastOneWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NextTerminalAfterAtLeastOneSepWalker\", function() { return NextTerminalAfterAtLeastOneSepWalker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"possiblePathsFrom\", function() { return possiblePathsFrom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nextPossibleTokensAfter\", function() { return nextPossibleTokensAfter; });\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rest */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/rest.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _first__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./first */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/first.js\");\n/* harmony import */ var _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar AbstractNextPossibleTokensWalker = /** @class */ (function (_super) {\n    __extends(AbstractNextPossibleTokensWalker, _super);\n    function AbstractNextPossibleTokensWalker(topProd, path) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.path = path;\n        _this.possibleTokTypes = [];\n        _this.nextProductionName = \"\";\n        _this.nextProductionOccurrence = 0;\n        _this.found = false;\n        _this.isAtEndOfPath = false;\n        return _this;\n    }\n    AbstractNextPossibleTokensWalker.prototype.startWalking = function () {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    };\n    AbstractNextPossibleTokensWalker.prototype.walk = function (prod, prevRest) {\n        if (prevRest === void 0) { prevRest = []; }\n        // stop scanning once we found the path\n        if (!this.found) {\n            _super.prototype.walk.call(this, prod, prevRest);\n        }\n    };\n    AbstractNextPossibleTokensWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            var fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    };\n    AbstractNextPossibleTokensWalker.prototype.updateExpectedNext = function () {\n        // need to consume the Terminal\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    };\n    return AbstractNextPossibleTokensWalker;\n}(_rest__WEBPACK_IMPORTED_MODULE_0__[\"RestWalker\"]));\n\nvar NextAfterTokenWalker = /** @class */ (function (_super) {\n    __extends(NextAfterTokenWalker, _super);\n    function NextAfterTokenWalker(topProd, path) {\n        var _this = _super.call(this, topProd, path) || this;\n        _this.path = path;\n        _this.nextTerminalName = \"\";\n        _this.nextTerminalOccurrence = 0;\n        _this.nextTerminalName = _this.path.lastTok.name;\n        _this.nextTerminalOccurrence = _this.path.lastTokOccurrence;\n        return _this;\n    }\n    NextAfterTokenWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            var fullRest = currRest.concat(prevRest);\n            var restProd = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Flat\"]({ definition: fullRest });\n            this.possibleTokTypes = Object(_first__WEBPACK_IMPORTED_MODULE_2__[\"first\"])(restProd);\n            this.found = true;\n        }\n    };\n    return NextAfterTokenWalker;\n}(AbstractNextPossibleTokensWalker));\n\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nvar AbstractNextTerminalAfterProductionWalker = /** @class */ (function (_super) {\n    __extends(AbstractNextTerminalAfterProductionWalker, _super);\n    function AbstractNextTerminalAfterProductionWalker(topRule, occurrence) {\n        var _this = _super.call(this) || this;\n        _this.topRule = topRule;\n        _this.occurrence = occurrence;\n        _this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined\n        };\n        return _this;\n    }\n    AbstractNextTerminalAfterProductionWalker.prototype.startWalking = function () {\n        this.walk(this.topRule);\n        return this.result;\n    };\n    return AbstractNextTerminalAfterProductionWalker;\n}(_rest__WEBPACK_IMPORTED_MODULE_0__[\"RestWalker\"]));\n\nvar NextTerminalAfterManyWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterManyWalker, _super);\n    function NextTerminalAfterManyWalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NextTerminalAfterManyWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            var firstAfterMany = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            _super.prototype.walkMany.call(this, manyProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterManyWalker;\n}(AbstractNextTerminalAfterProductionWalker));\n\nvar NextTerminalAfterManySepWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterManySepWalker, _super);\n    function NextTerminalAfterManySepWalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NextTerminalAfterManySepWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            var firstAfterManySep = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            _super.prototype.walkManySep.call(this, manySepProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterManySepWalker;\n}(AbstractNextTerminalAfterProductionWalker));\n\nvar NextTerminalAfterAtLeastOneWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterAtLeastOneWalker, _super);\n    function NextTerminalAfterAtLeastOneWalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NextTerminalAfterAtLeastOneWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            var firstAfterAtLeastOne = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            _super.prototype.walkAtLeastOne.call(this, atLeastOneProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterAtLeastOneWalker;\n}(AbstractNextTerminalAfterProductionWalker));\n\n// TODO: reduce code duplication in the AfterWalkers\nvar NextTerminalAfterAtLeastOneSepWalker = /** @class */ (function (_super) {\n    __extends(NextTerminalAfterAtLeastOneSepWalker, _super);\n    function NextTerminalAfterAtLeastOneSepWalker() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NextTerminalAfterAtLeastOneSepWalker.prototype.walkAtLeastOneSep = function (atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            var firstAfterfirstAfterAtLeastOneSep = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(currRest.concat(prevRest));\n            this.result.isEndOfRule =\n                firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]) {\n                this.result.token =\n                    firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            _super.prototype.walkAtLeastOneSep.call(this, atleastOneSepProd, currRest, prevRest);\n        }\n    };\n    return NextTerminalAfterAtLeastOneSepWalker;\n}(AbstractNextTerminalAfterProductionWalker));\n\nfunction possiblePathsFrom(targetDef, maxLength, currPath) {\n    if (currPath === void 0) { currPath = []; }\n    // avoid side effects\n    currPath = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(currPath);\n    var result = [];\n    var i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        var alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        var prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Flat\"]) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"NonTerminal\"]) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Option\"]) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"RepetitionMandatory\"]) {\n            var newDef = prod.definition.concat([\n                new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                    definition: prod.definition\n                })\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"RepetitionMandatoryWithSeparator\"]) {\n            var newDef = [\n                new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Flat\"]({ definition: prod.definition }),\n                new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                    definition: [\n                        new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]({ terminalType: prod.separator })\n                    ].concat(prod.definition)\n                })\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"RepetitionWithSeparator\"]) {\n            var newDef = prod.definition.concat([\n                new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                    definition: [\n                        new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]({ terminalType: prod.separator })\n                    ].concat(prod.definition)\n                })\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]) {\n            var newDef = prod.definition.concat([\n                new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                    definition: prod.definition\n                })\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Alternation\"]) {\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(prod.definition, function (currAlt) {\n                result = getAlternativesForProd(currAlt.definition);\n            });\n            return result;\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(targetDef, i)\n    });\n    return result;\n}\nfunction nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    var EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    var EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    var EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    var foundCompletePath = false;\n    var tokenVectorLength = tokenVector.length;\n    var minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    var result = [];\n    var possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: []\n    });\n    while (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(possiblePaths)) {\n        var currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"last\"])(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        var currDef = currPath.def;\n        var currIdx = currPath.idx;\n        var currRuleStack = currPath.ruleStack;\n        var currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(currDef)) {\n            continue;\n        }\n        var prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            var nextPath = {\n                idx: currIdx,\n                def: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef),\n                ruleStack: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"dropRight\"])(currRuleStack),\n                occurrenceStack: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"dropRight\"])(currOccurrenceStack)\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                var nextIdx = currIdx + 1;\n                var actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    var nextPath = {\n                        idx: nextIdx,\n                        def: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"NonTerminal\"]) {\n            var newRuleStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            var newOccurrenceStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            var nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Option\"]) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            var nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"RepetitionMandatory\"]) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            var secondIteration = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                definition: prod.definition,\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([secondIteration], Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef));\n            var nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"RepetitionMandatoryWithSeparator\"]) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            var separatorGast = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]({\n                terminalType: prod.separator\n            });\n            var secondIteration = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([secondIteration], Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef));\n            var nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"RepetitionWithSeparator\"]) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            var separatorGast = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Terminal\"]({\n                terminalType: prod.separator\n            });\n            var nthRepetition = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([nthRepetition], Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef));\n            var nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            var nextPathWithout = {\n                idx: currIdx,\n                def: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            var nthRepetition = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Repetition\"]({\n                definition: prod.definition,\n                idx: prod.idx\n            });\n            var nextDef = prod.definition.concat([nthRepetition], Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef));\n            var nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Alternation\"]) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (var i = prod.definition.length - 1; i >= 0; i--) {\n                var currAlt = prod.definition[i];\n                var currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Flat\"]) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"drop\"])(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack\n            });\n        }\n        else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_3__[\"Rule\"]) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    var newRuleStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(currRuleStack);\n    newRuleStack.push(topRule.name);\n    var newCurrOccurrenceStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack\n    };\n}\n//# sourceMappingURL=interpreter.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js":
/*!*******************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js ***!
  \*******************************************************************/
/*! exports provided: BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, BITS_FOR_RULE_IDX, BITS_FOR_ALT_IDX, OR_IDX, OPTION_IDX, MANY_IDX, AT_LEAST_ONE_IDX, MANY_SEP_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, getKeyForAltIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BITS_FOR_METHOD_TYPE\", function() { return BITS_FOR_METHOD_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BITS_FOR_OCCURRENCE_IDX\", function() { return BITS_FOR_OCCURRENCE_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BITS_FOR_RULE_IDX\", function() { return BITS_FOR_RULE_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BITS_FOR_ALT_IDX\", function() { return BITS_FOR_ALT_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OR_IDX\", function() { return OR_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OPTION_IDX\", function() { return OPTION_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MANY_IDX\", function() { return MANY_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AT_LEAST_ONE_IDX\", function() { return AT_LEAST_ONE_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MANY_SEP_IDX\", function() { return MANY_SEP_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AT_LEAST_ONE_SEP_IDX\", function() { return AT_LEAST_ONE_SEP_IDX; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getKeyForAutomaticLookahead\", function() { return getKeyForAutomaticLookahead; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getKeyForAltIndex\", function() { return getKeyForAltIndex; });\n// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nvar BITS_FOR_METHOD_TYPE = 4;\nvar BITS_FOR_OCCURRENCE_IDX = 8;\nvar BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nvar BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\n/* tslint:disable */\nvar OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nvar OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nvar MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nvar AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nvar MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nvar AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n/* tslint:enable */\n// this actually returns a number, but it is always used as a string (object prop key)\nfunction getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    /* tslint:disable */\n    return occurrence | dslMethodIdx | ruleIdx;\n    /* tslint:enable */\n}\nvar BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\nfunction getKeyForAltIndex(ruleIdx, dslMethodIdx, occurrence, altIdx) {\n    /* tslint:disable */\n    // alternative indices are zero based, thus must always add one (turn on one bit) to guarantee uniqueness.\n    var altIdxBitMap = (altIdx + 1) << BITS_START_FOR_ALT_IDX;\n    return (getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) |\n        altIdxBitMap);\n    /* tslint:enable */\n}\n//# sourceMappingURL=keys.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js":
/*!************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js ***!
  \************************************************************************/
/*! exports provided: PROD_TYPE, getProdType, buildLookaheadFuncForOr, buildLookaheadFuncForOptionalProd, buildAlternativesLookAheadFunc, buildSingleAlternativeLookaheadFunction, lookAheadSequenceFromAlternatives, getLookaheadPathsForOr, getLookaheadPathsForOptionalProd, containsPath, isStrictPrefixOfPath, areTokenCategoriesNotUsed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PROD_TYPE\", function() { return PROD_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getProdType\", function() { return getProdType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildLookaheadFuncForOr\", function() { return buildLookaheadFuncForOr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildLookaheadFuncForOptionalProd\", function() { return buildLookaheadFuncForOptionalProd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildAlternativesLookAheadFunc\", function() { return buildAlternativesLookAheadFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildSingleAlternativeLookaheadFunction\", function() { return buildSingleAlternativeLookaheadFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lookAheadSequenceFromAlternatives\", function() { return lookAheadSequenceFromAlternatives; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLookaheadPathsForOr\", function() { return getLookaheadPathsForOr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLookaheadPathsForOptionalProd\", function() { return getLookaheadPathsForOptionalProd; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsPath\", function() { return containsPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isStrictPrefixOfPath\", function() { return isStrictPrefixOfPath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"areTokenCategoriesNotUsed\", function() { return areTokenCategoriesNotUsed; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _interpreter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpreter */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js\");\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rest */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/rest.js\");\n/* harmony import */ var _scan_tokens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scan/tokens */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens.js\");\n/* harmony import */ var _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./gast/gast_visitor_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\nvar PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nfunction getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"Option\"]) {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"Repetition\"]) {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"RepetitionMandatory\"]) {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"RepetitionMandatoryWithSeparator\"]) {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"RepetitionWithSeparator\"]) {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"Alternation\"]) {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    var lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? _scan_tokens__WEBPACK_IMPORTED_MODULE_3__[\"tokenStructuredMatcherNoCategories\"]\n        : _scan_tokens__WEBPACK_IMPORTED_MODULE_3__[\"tokenStructuredMatcher\"];\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nfunction buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    var lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    var tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? _scan_tokens__WEBPACK_IMPORTED_MODULE_3__[\"tokenStructuredMatcherNoCategories\"]\n        : _scan_tokens__WEBPACK_IMPORTED_MODULE_3__[\"tokenStructuredMatcher\"];\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nfunction buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    var numOfAlts = alts.length;\n    var areAllOneTokenLookahead = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(alts, function (currAlt) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(currAlt, function (currPath) {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            var predicates = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(orAlts, function (currAlt) { return currAlt.GATE; });\n            for (var t = 0; t < numOfAlts; t++) {\n                var currAlt = alts[t];\n                var currNumOfPaths = currAlt.length;\n                var currPredicate = predicates[t];\n                if (currPredicate !== undefined &&\n                    currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (var j = 0; j < currNumOfPaths; j++) {\n                    var currPath = currAlt[j];\n                    var currPathLength = currPath.length;\n                    for (var i = 0; i < currPathLength; i++) {\n                        var nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        var singleTokenAlts = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(alts, function (currAlt) {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(currAlt);\n        });\n        var choiceToAlt_1 = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(singleTokenAlts, function (result, currAlt, idx) {\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(currAlt, function (currTokType) {\n                if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(currTokType.categoryMatches, function (currExtendingType) {\n                    if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, []);\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            var nextToken = this.LA(1);\n            return choiceToAlt_1[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (var t = 0; t < numOfAlts; t++) {\n                var currAlt = alts[t];\n                var currNumOfPaths = currAlt.length;\n                nextPath: for (var j = 0; j < currNumOfPaths; j++) {\n                    var currPath = currAlt[j];\n                    var currPathLength = currPath.length;\n                    for (var i = 0; i < currPathLength; i++) {\n                        var nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nfunction buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    var areAllOneTokenLookahead = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(alt, function (currPath) {\n        return currPath.length === 1;\n    });\n    var numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        var singleTokensTypes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(alt);\n        if (singleTokensTypes.length === 1 &&\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(singleTokensTypes[0].categoryMatches)) {\n            var expectedTokenType = singleTokensTypes[0];\n            var expectedTokenUniqueKey_1 = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey_1;\n            };\n        }\n        else {\n            var choiceToAlt_2 = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(singleTokensTypes, function (result, currTokType, idx) {\n                result[currTokType.tokenTypeIdx] = true;\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(currTokType.categoryMatches, function (currExtendingType) {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                var nextToken = this.LA(1);\n                return choiceToAlt_2[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (var j = 0; j < numOfPaths; j++) {\n                var currPath = alt[j];\n                var currPathLength = currPath.length;\n                for (var i = 0; i < currPathLength; i++) {\n                    var nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nvar RestDefinitionFinderWalker = /** @class */ (function (_super) {\n    __extends(RestDefinitionFinderWalker, _super);\n    function RestDefinitionFinderWalker(topProd, targetOccurrence, targetProdType) {\n        var _this = _super.call(this) || this;\n        _this.topProd = topProd;\n        _this.targetOccurrence = targetOccurrence;\n        _this.targetProdType = targetProdType;\n        return _this;\n    }\n    RestDefinitionFinderWalker.prototype.startWalking = function () {\n        this.walk(this.topProd);\n        return this.restDef;\n    };\n    RestDefinitionFinderWalker.prototype.checkIsTarget = function (node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    };\n    RestDefinitionFinderWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, optionProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, atLeastOneProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, atLeastOneSepProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, manyProd, currRest, prevRest);\n        }\n    };\n    RestDefinitionFinderWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            _super.prototype.walkOption.call(this, manySepProd, currRest, prevRest);\n        }\n    };\n    return RestDefinitionFinderWalker;\n}(_rest__WEBPACK_IMPORTED_MODULE_2__[\"RestWalker\"]));\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nvar InsideDefinitionFinderVisitor = /** @class */ (function (_super) {\n    __extends(InsideDefinitionFinderVisitor, _super);\n    function InsideDefinitionFinderVisitor(targetOccurrence, targetProdType, targetRef) {\n        var _this = _super.call(this) || this;\n        _this.targetOccurrence = targetOccurrence;\n        _this.targetProdType = targetProdType;\n        _this.targetRef = targetRef;\n        _this.result = [];\n        return _this;\n    }\n    InsideDefinitionFinderVisitor.prototype.checkIsTarget = function (node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    };\n    InsideDefinitionFinderVisitor.prototype.visitOption = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetition = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatory = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitRepetitionWithSeparator = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    };\n    InsideDefinitionFinderVisitor.prototype.visitAlternation = function (node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    };\n    return InsideDefinitionFinderVisitor;\n}(_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_5__[\"GAstVisitor\"]));\nfunction initializeArrayOfArrays(size) {\n    var result = new Array(size);\n    for (var i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    var keys = [\"\"];\n    for (var i = 0; i < path.length; i++) {\n        var tokType = path[i];\n        var longerKeys = [];\n        for (var j = 0; j < keys.length; j++) {\n            var currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (var t = 0; t < tokType.categoryMatches.length; t++) {\n                var categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (var currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        var otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (var searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            var searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nfunction lookAheadSequenceFromAlternatives(altsDefs, k) {\n    var partialAlts = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(altsDefs, function (currAlt) { return Object(_interpreter__WEBPACK_IMPORTED_MODULE_1__[\"possiblePathsFrom\"])([currAlt], 1); });\n    var finalResult = initializeArrayOfArrays(partialAlts.length);\n    var altsHashes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(partialAlts, function (currAltPaths) {\n        var dict = {};\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(currAltPaths, function (item) {\n            var keys = pathToHashKeys(item.partialPath);\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(keys, function (currKey) {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    var newData = partialAlts;\n    // maxLookahead loop\n    for (var pathLength = 1; pathLength <= k; pathLength++) {\n        var currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        var _loop_1 = function (altIdx) {\n            var currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (var currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                var currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                var suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                var prefixKeys = pathToHashKeys(currPathPrefix);\n                var isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique ||\n                    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(suffixDef) ||\n                    currPathPrefix.length === k) {\n                    var currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (var j = 0; j < prefixKeys.length; j++) {\n                            var currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    var newPartialPathsAndSuffixes = Object(_interpreter__WEBPACK_IMPORTED_MODULE_1__[\"possiblePathsFrom\"])(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(newPartialPathsAndSuffixes, function (item) {\n                        var prefixKeys = pathToHashKeys(item.partialPath);\n                        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(prefixKeys, function (key) {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        };\n        // alternatives loop\n        for (var altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            _loop_1(altIdx);\n        }\n    }\n    return finalResult;\n}\nfunction getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    var visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nfunction getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    var insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    var insideDef = insideDefVisitor.result;\n    var afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    var afterDef = afterDefWalker.startWalking();\n    var insideFlat = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"Flat\"]({ definition: insideDef });\n    var afterFlat = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_4__[\"Flat\"]({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nfunction containsPath(alternative, searchPath) {\n    compareOtherPath: for (var i = 0; i < alternative.length; i++) {\n        var otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (var j = 0; j < otherPath.length; j++) {\n            var searchTok = searchPath[j];\n            var otherTok = otherPath[j];\n            var matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !==\n                    undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(prefix, function (tokType, idx) {\n            var otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nfunction areTokenCategoriesNotUsed(lookAheadPaths) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(lookAheadPaths, function (singleAltPaths) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(singleAltPaths, function (singlePath) {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(singlePath, function (token) { return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(token.categoryMatches); });\n        });\n    });\n}\n//# sourceMappingURL=lookahead.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/resolver.js":
/*!***********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/resolver.js ***!
  \***********************************************************************/
/*! exports provided: resolveGrammar, GastRefResolverVisitor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveGrammar\", function() { return resolveGrammar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GastRefResolverVisitor\", function() { return GastRefResolverVisitor; });\n/* harmony import */ var _parser_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./gast/gast_visitor_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_visitor_public.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nfunction resolveGrammar(topLevels, errMsgProvider) {\n    var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nvar GastRefResolverVisitor = /** @class */ (function (_super) {\n    __extends(GastRefResolverVisitor, _super);\n    function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n        var _this = _super.call(this) || this;\n        _this.nameToTopRule = nameToTopRule;\n        _this.errMsgProvider = errMsgProvider;\n        _this.errors = [];\n        return _this;\n    }\n    GastRefResolverVisitor.prototype.resolveRefs = function () {\n        var _this = this;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"values\"])(this.nameToTopRule), function (prod) {\n            _this.currTopLevel = prod;\n            prod.accept(_this);\n        });\n    };\n    GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n        var ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: _parser_parser__WEBPACK_IMPORTED_MODULE_0__[\"ParserDefinitionErrorType\"].UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    };\n    return GastRefResolverVisitor;\n}(_gast_gast_visitor_public__WEBPACK_IMPORTED_MODULE_2__[\"GAstVisitor\"]));\n\n//# sourceMappingURL=resolver.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/resolver.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/grammar/rest.js":
/*!*******************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/grammar/rest.js ***!
  \*******************************************************************/
/*! exports provided: RestWalker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RestWalker\", function() { return RestWalker; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n\n\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nvar RestWalker = /** @class */ (function () {\n    function RestWalker() {\n    }\n    RestWalker.prototype.walk = function (prod, prevRest) {\n        var _this = this;\n        if (prevRest === void 0) { prevRest = []; }\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(prod.definition, function (subProd, index) {\n            var currRest = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"drop\"])(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"]) {\n                _this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"]) {\n                _this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Flat\"]) {\n                _this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"]) {\n                _this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatory\"]) {\n                _this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatoryWithSeparator\"]) {\n                _this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionWithSeparator\"]) {\n                _this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Repetition\"]) {\n                _this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Alternation\"]) {\n                _this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    };\n    RestWalker.prototype.walkTerminal = function (terminal, currRest, prevRest) { };\n    RestWalker.prototype.walkProdRef = function (refProd, currRest, prevRest) { };\n    RestWalker.prototype.walkFlat = function (flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    };\n    RestWalker.prototype.walkOption = function (optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        var fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    };\n    RestWalker.prototype.walkAtLeastOne = function (atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        var fullAtLeastOneRest = [\n            new _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"]({ definition: atLeastOneProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    };\n    RestWalker.prototype.walkAtLeastOneSep = function (atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        var fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    };\n    RestWalker.prototype.walkMany = function (manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        var fullManyRest = [\n            new _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"]({ definition: manyProd.definition })\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    };\n    RestWalker.prototype.walkManySep = function (manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        var fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    };\n    RestWalker.prototype.walkOr = function (orProd, currRest, prevRest) {\n        var _this = this;\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        var fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(orProd.definition, function (alt) {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            var prodWrapper = new _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Flat\"]({ definition: [alt] });\n            _this.walk(prodWrapper, fullOrRest);\n        });\n    };\n    return RestWalker;\n}());\n\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    var repSepRest = [\n        new _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"]({\n            definition: [\n                new _gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"]({ terminalType: repSepProd.separator })\n            ].concat(repSepProd.definition)\n        })\n    ];\n    var fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/grammar/rest.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js ***!
  \********************************************************************/
/*! exports provided: END_OF_FILE, DEFAULT_PARSER_CONFIG, DEFAULT_RULE_CONFIG, ParserDefinitionErrorType, EMPTY_ALT, Parser, CstParser, EmbeddedActionsParser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"END_OF_FILE\", function() { return END_OF_FILE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_PARSER_CONFIG\", function() { return DEFAULT_PARSER_CONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_RULE_CONFIG\", function() { return DEFAULT_RULE_CONFIG; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParserDefinitionErrorType\", function() { return ParserDefinitionErrorType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EMPTY_ALT\", function() { return EMPTY_ALT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CstParser\", function() { return CstParser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EmbeddedActionsParser\", function() { return EmbeddedActionsParser; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _grammar_follow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../grammar/follow */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/follow.js\");\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\n/* harmony import */ var _cst_cst__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cst/cst */ \"./node_modules/chevrotain/lib_esm/src/parse/cst/cst.js\");\n/* harmony import */ var _errors_public__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors_public */ \"./node_modules/chevrotain/lib_esm/src/parse/errors_public.js\");\n/* harmony import */ var _grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../grammar/gast/gast_resolver_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_resolver_public.js\");\n/* harmony import */ var _traits_recoverable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./traits/recoverable */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recoverable.js\");\n/* harmony import */ var _traits_looksahead__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./traits/looksahead */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/looksahead.js\");\n/* harmony import */ var _traits_tree_builder__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./traits/tree_builder */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/tree_builder.js\");\n/* harmony import */ var _traits_lexer_adapter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./traits/lexer_adapter */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/lexer_adapter.js\");\n/* harmony import */ var _traits_recognizer_api__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./traits/recognizer_api */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_api.js\");\n/* harmony import */ var _traits_recognizer_engine__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./traits/recognizer_engine */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_engine.js\");\n/* harmony import */ var _traits_error_handler__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./traits/error_handler */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/error_handler.js\");\n/* harmony import */ var _traits_context_assist__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./traits/context_assist */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/context_assist.js\");\n/* harmony import */ var _traits_gast_recorder__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./traits/gast_recorder */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/gast_recorder.js\");\n/* harmony import */ var _traits_perf_tracer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./traits/perf_tracer */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/perf_tracer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar END_OF_FILE = Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_2__[\"createTokenInstance\"])(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_2__[\"EOF\"], \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nvar DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 4,\n    ignoredIssues: {},\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: _errors_public__WEBPACK_IMPORTED_MODULE_4__[\"defaultParserErrorProvider\"],\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false\n});\nvar DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: function () { return undefined; },\n    resyncEnabled: true\n});\nvar ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_NESTED_RULE_NAME\"] = 10] = \"INVALID_NESTED_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_NESTED_NAME\"] = 11] = \"DUPLICATE_NESTED_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 12] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 13] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 14] = \"TOO_MANY_ALTS\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nfunction EMPTY_ALT(value) {\n    if (value === void 0) { value = undefined; }\n    return function () {\n        return value;\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(tokenVocabulary, config) {\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\n        this.ignoredIssues = DEFAULT_PARSER_CONFIG.ignoredIssues;\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        var that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        /* istanbul ignore if - complete over-kill to test this, we should only add a test when we actually hard deprecate it and throw an error... */\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"ignoredIssues\") &&\n            config.ignoredIssues !== DEFAULT_PARSER_CONFIG.ignoredIssues) {\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"PRINT_WARNING\"])(\"The <ignoredIssues> IParserConfig property is soft-deprecated and will be removed in future versions.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\");\n        }\n        this.ignoredIssues = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"ignoredIssues\")\n            ? config.ignoredIssues\n            : DEFAULT_PARSER_CONFIG.ignoredIssues;\n        this.skipValidations = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"skipValidations\")\n            ? config.skipValidations\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    Parser.performSelfAnalysis = function (parserInstance) {\n        ;\n        parserInstance.performSelfAnalysis();\n    };\n    Parser.prototype.performSelfAnalysis = function () {\n        var _this = this;\n        this.TRACE_INIT(\"performSelfAnalysis\", function () {\n            var defErrorsMsgs;\n            _this.selfAnalysisDone = true;\n            var className = _this.className;\n            _this.TRACE_INIT(\"toFastProps\", function () {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"toFastProperties\"])(_this);\n            });\n            _this.TRACE_INIT(\"Grammar Recording\", function () {\n                try {\n                    _this.enableRecording();\n                    // Building the GAST\n                    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(_this.definedRulesNames, function (currRuleName) {\n                        var wrappedRule = _this[currRuleName];\n                        var originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        var recordedRuleGast = undefined;\n                        _this.TRACE_INIT(currRuleName + \" Rule\", function () {\n                            recordedRuleGast = _this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        _this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    _this.disableRecording();\n                }\n            });\n            var resolverErrors = [];\n            _this.TRACE_INIT(\"Grammar Resolving\", function () {\n                resolverErrors = Object(_grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_5__[\"resolveGrammar\"])({\n                    rules: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(_this.gastProductionsCache)\n                });\n                _this.definitionErrors.push.apply(_this.definitionErrors, resolverErrors); // mutability for the win?\n            });\n            _this.TRACE_INIT(\"Grammar Validations\", function () {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(resolverErrors) && _this.skipValidations === false) {\n                    var validationErrors = Object(_grammar_gast_gast_resolver_public__WEBPACK_IMPORTED_MODULE_5__[\"validateGrammar\"])({\n                        rules: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(_this.gastProductionsCache),\n                        maxLookahead: _this.maxLookahead,\n                        tokenTypes: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(_this.tokensMap),\n                        ignoredIssues: _this.ignoredIssues,\n                        errMsgProvider: _errors_public__WEBPACK_IMPORTED_MODULE_4__[\"defaultGrammarValidatorErrorProvider\"],\n                        grammarName: className\n                    });\n                    _this.definitionErrors.push.apply(_this.definitionErrors, validationErrors); // mutability for the win?\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(_this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (_this.recoveryEnabled) {\n                    _this.TRACE_INIT(\"computeAllProdsFollows\", function () {\n                        var allFollows = Object(_grammar_follow__WEBPACK_IMPORTED_MODULE_1__[\"computeAllProdsFollows\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(_this.gastProductionsCache));\n                        _this.resyncFollows = allFollows;\n                    });\n                }\n                _this.TRACE_INIT(\"ComputeLookaheadFunctions\", function () {\n                    _this.preComputeLookaheadFunctions(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(_this.gastProductionsCache));\n                });\n            }\n            _this.TRACE_INIT(\"expandAllNestedRuleNames\", function () {\n                // TODO: is this needed for EmbeddedActionsParser?\n                var cstAnalysisResult = Object(_cst_cst__WEBPACK_IMPORTED_MODULE_3__[\"expandAllNestedRuleNames\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(_this.gastProductionsCache), _this.fullRuleNameToShort);\n                _this.allRuleNames = cstAnalysisResult.allRuleNames;\n            });\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(_this.definitionErrors)) {\n                defErrorsMsgs = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(_this.definitionErrors, function (defError) { return defError.message; });\n                throw new Error(\"Parser Definition Errors detected:\\n \" + defErrorsMsgs.join(\"\\n-------------------------------\\n\"));\n            }\n        });\n    };\n    // Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n    // (normally during the parser's constructor).\n    // This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n    // for example: duplicate rule names, referencing an unresolved subrule, ect...\n    // This flag should not be enabled during normal usage, it is used in special situations, for example when\n    // needing to display the parser definition errors in some GUI(online playground).\n    Parser.DEFER_DEFINITION_ERRORS_HANDLING = false;\n    return Parser;\n}());\n\nObject(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"applyMixins\"])(Parser, [\n    _traits_recoverable__WEBPACK_IMPORTED_MODULE_6__[\"Recoverable\"],\n    _traits_looksahead__WEBPACK_IMPORTED_MODULE_7__[\"LooksAhead\"],\n    _traits_tree_builder__WEBPACK_IMPORTED_MODULE_8__[\"TreeBuilder\"],\n    _traits_lexer_adapter__WEBPACK_IMPORTED_MODULE_9__[\"LexerAdapter\"],\n    _traits_recognizer_engine__WEBPACK_IMPORTED_MODULE_11__[\"RecognizerEngine\"],\n    _traits_recognizer_api__WEBPACK_IMPORTED_MODULE_10__[\"RecognizerApi\"],\n    _traits_error_handler__WEBPACK_IMPORTED_MODULE_12__[\"ErrorHandler\"],\n    _traits_context_assist__WEBPACK_IMPORTED_MODULE_13__[\"ContentAssist\"],\n    _traits_gast_recorder__WEBPACK_IMPORTED_MODULE_14__[\"GastRecorder\"],\n    _traits_perf_tracer__WEBPACK_IMPORTED_MODULE_15__[\"PerformanceTracer\"]\n]);\nvar CstParser = /** @class */ (function (_super) {\n    __extends(CstParser, _super);\n    function CstParser(tokenVocabulary, config) {\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(config);\n        configClone.outputCst = true;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return CstParser;\n}(Parser));\n\nvar EmbeddedActionsParser = /** @class */ (function (_super) {\n    __extends(EmbeddedActionsParser, _super);\n    function EmbeddedActionsParser(tokenVocabulary, config) {\n        if (config === void 0) { config = DEFAULT_PARSER_CONFIG; }\n        var _this = this;\n        var configClone = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(config);\n        configClone.outputCst = false;\n        _this = _super.call(this, tokenVocabulary, configClone) || this;\n        return _this;\n    }\n    return EmbeddedActionsParser;\n}(Parser));\n\n//# sourceMappingURL=parser.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/context_assist.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/context_assist.js ***!
  \***********************************************************************************/
/*! exports provided: ContentAssist */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentAssist\", function() { return ContentAssist; });\n/* harmony import */ var _grammar_interpreter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../grammar/interpreter */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n\n\nvar ContentAssist = /** @class */ (function () {\n    function ContentAssist() {\n    }\n    ContentAssist.prototype.initContentAssist = function () { };\n    ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n        var startRuleGast = this.gastProductionsCache[startRuleName];\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isUndefined\"])(startRuleGast)) {\n            throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n        }\n        return Object(_grammar_interpreter__WEBPACK_IMPORTED_MODULE_0__[\"nextPossibleTokensAfter\"])([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    };\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n        var topRuleName = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"first\"])(grammarPath.ruleStack);\n        var gastProductions = this.getGAstProductions();\n        var topProduction = gastProductions[topRuleName];\n        var nextPossibleTokenTypes = new _grammar_interpreter__WEBPACK_IMPORTED_MODULE_0__[\"NextAfterTokenWalker\"](topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    };\n    return ContentAssist;\n}());\n\n//# sourceMappingURL=context_assist.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/context_assist.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/error_handler.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/error_handler.js ***!
  \**********************************************************************************/
/*! exports provided: ErrorHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrorHandler\", function() { return ErrorHandler; });\n/* harmony import */ var _exceptions_public__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../exceptions_public */ \"./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _grammar_lookahead__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../grammar/lookahead */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n\n\n\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n    }\n    ErrorHandler.prototype.initErrorHandler = function (config) {\n        this._errors = [];\n        this.errorMessageProvider = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"defaults\"])(config.errorMessageProvider, _parser__WEBPACK_IMPORTED_MODULE_3__[\"DEFAULT_PARSER_CONFIG\"].errorMessageProvider);\n    };\n    ErrorHandler.prototype.SAVE_ERROR = function (error) {\n        if (Object(_exceptions_public__WEBPACK_IMPORTED_MODULE_0__[\"isRecognitionException\"])(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(this.RULE_OCCURRENCE_STACK)\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    };\n    Object.defineProperty(ErrorHandler.prototype, \"errors\", {\n        // TODO: extract these methods to ErrorHandler Trait?\n        get: function () {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(this._errors);\n        },\n        set: function (newErrors) {\n            this._errors = newErrors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // TODO: consider caching the error message computed information\n    ErrorHandler.prototype.raiseEarlyExitException = function (occurrence, prodType, userDefinedErrMsg) {\n        var ruleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions()[ruleName];\n        var lookAheadPathsPerAlternative = Object(_grammar_lookahead__WEBPACK_IMPORTED_MODULE_2__[\"getLookaheadPathsForOptionalProd\"])(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        var insideProdPaths = lookAheadPathsPerAlternative[0];\n        var actualTokens = [];\n        for (var i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        var msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName\n        });\n        throw this.SAVE_ERROR(new _exceptions_public__WEBPACK_IMPORTED_MODULE_0__[\"EarlyExitException\"](msg, this.LA(1), this.LA(0)));\n    };\n    // TODO: consider caching the error message computed information\n    ErrorHandler.prototype.raiseNoAltException = function (occurrence, errMsgTypes) {\n        var ruleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        var lookAheadPathsPerAlternative = Object(_grammar_lookahead__WEBPACK_IMPORTED_MODULE_2__[\"getLookaheadPathsForOr\"])(occurrence, ruleGrammar, this.maxLookahead);\n        var actualTokens = [];\n        for (var i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        var previousToken = this.LA(0);\n        var errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName()\n        });\n        throw this.SAVE_ERROR(new _exceptions_public__WEBPACK_IMPORTED_MODULE_0__[\"NoViableAltException\"](errMsg, this.LA(1), previousToken));\n    };\n    return ErrorHandler;\n}());\n\n//# sourceMappingURL=error_handler.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/error_handler.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/gast_recorder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/gast_recorder.js ***!
  \**********************************************************************************/
/*! exports provided: GastRecorder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GastRecorder\", function() { return GastRecorder; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../grammar/gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n/* harmony import */ var _scan_lexer_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../scan/lexer_public */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js\");\n/* harmony import */ var _scan_tokens__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../scan/tokens */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens.js\");\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony import */ var _grammar_keys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../grammar/keys */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js\");\n\n\n\n\n\n\n\nvar RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\"\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nvar HANDLE_SEPARATOR = true;\nvar MAX_METHOD_IDX = Math.pow(2, _grammar_keys__WEBPACK_IMPORTED_MODULE_6__[\"BITS_FOR_OCCURRENCE_IDX\"]) - 1;\nvar RFT = Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_4__[\"createToken\"])({ name: \"RECORDING_PHASE_TOKEN\", pattern: _scan_lexer_public__WEBPACK_IMPORTED_MODULE_2__[\"Lexer\"].NA });\nObject(_scan_tokens__WEBPACK_IMPORTED_MODULE_3__[\"augmentTokenTypes\"])([RFT]);\nvar RECORDING_PHASE_TOKEN = Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_4__[\"createTokenInstance\"])(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nvar RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording for details\",\n    children: {}\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nvar GastRecorder = /** @class */ (function () {\n    function GastRecorder() {\n    }\n    GastRecorder.prototype.initGastRecorder = function (config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    };\n    GastRecorder.prototype.enableRecording = function () {\n        var _this = this;\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", function () {\n            var _loop_1 = function (i) {\n                var idx = i > 0 ? i : \"\";\n                _this[\"CONSUME\" + idx] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                _this[\"SUBRULE\" + idx] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                _this[\"OPTION\" + idx] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                _this[\"OR\" + idx] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                _this[\"MANY\" + idx] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                _this[\"MANY_SEP\" + idx] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                _this[\"AT_LEAST_ONE\" + idx] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                _this[\"AT_LEAST_ONE_SEP\" + idx] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            };\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (var i = 0; i < 10; i++) {\n                _loop_1(i);\n            }\n            // DSL methods with the idx(suffix) as an argument\n            _this[\"consume\"] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            _this[\"subrule\"] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            _this[\"option\"] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            _this[\"or\"] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            _this[\"many\"] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            _this[\"atLeastOne\"] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            _this.ACTION = _this.ACTION_RECORD;\n            _this.BACKTRACK = _this.BACKTRACK_RECORD;\n            _this.LA = _this.LA_RECORD;\n        });\n    };\n    GastRecorder.prototype.disableRecording = function () {\n        var _this = this;\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", function () {\n            for (var i = 0; i < 10; i++) {\n                var idx = i > 0 ? i : \"\";\n                delete _this[\"CONSUME\" + idx];\n                delete _this[\"SUBRULE\" + idx];\n                delete _this[\"OPTION\" + idx];\n                delete _this[\"OR\" + idx];\n                delete _this[\"MANY\" + idx];\n                delete _this[\"MANY_SEP\" + idx];\n                delete _this[\"AT_LEAST_ONE\" + idx];\n                delete _this[\"AT_LEAST_ONE_SEP\" + idx];\n            }\n            delete _this[\"consume\"];\n            delete _this[\"subrule\"];\n            delete _this[\"option\"];\n            delete _this[\"or\"];\n            delete _this[\"many\"];\n            delete _this[\"atLeastOne\"];\n            delete _this.ACTION;\n            delete _this.BACKTRACK;\n            delete _this.LA;\n        });\n    };\n    // TODO: is there any way to use this method to check no\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    GastRecorder.prototype.ACTION_RECORD = function (impl) {\n        // NO-OP during recording\n        return;\n    };\n    // Executing backtracking logic will break our recording logic assumptions\n    GastRecorder.prototype.BACKTRACK_RECORD = function (grammarRule, args) {\n        return function () { return true; };\n    };\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    GastRecorder.prototype.LA_RECORD = function (howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return _parser__WEBPACK_IMPORTED_MODULE_5__[\"END_OF_FILE\"];\n    };\n    GastRecorder.prototype.topLevelRuleRecord = function (name, def) {\n        try {\n            var newTopLevelRule = new _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Rule\"]({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://sap.github.io/chevrotain/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    };\n    // Implementation of parsing DSL\n    GastRecorder.prototype.optionInternalRecord = function (actionORMethodDef, occurrence) {\n        return recordProd.call(this, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Option\"], actionORMethodDef, occurrence);\n    };\n    GastRecorder.prototype.atLeastOneInternalRecord = function (occurrence, actionORMethodDef) {\n        recordProd.call(this, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatory\"], actionORMethodDef, occurrence);\n    };\n    GastRecorder.prototype.atLeastOneSepFirstInternalRecord = function (occurrence, options) {\n        recordProd.call(this, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionMandatoryWithSeparator\"], options, occurrence, HANDLE_SEPARATOR);\n    };\n    GastRecorder.prototype.manyInternalRecord = function (occurrence, actionORMethodDef) {\n        recordProd.call(this, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Repetition\"], actionORMethodDef, occurrence);\n    };\n    GastRecorder.prototype.manySepFirstInternalRecord = function (occurrence, options) {\n        recordProd.call(this, _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"RepetitionWithSeparator\"], options, occurrence, HANDLE_SEPARATOR);\n    };\n    GastRecorder.prototype.orInternalRecord = function (altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    };\n    GastRecorder.prototype.subruleInternalRecord = function (ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(ruleToCall, \"ruleName\") === false) {\n            var error = new Error(\"<SUBRULE\" + getIdxSuffix(occurrence) + \"> argument is invalid\" +\n                (\" expecting a Parser method reference but got: <\" + JSON.stringify(ruleToCall) + \">\") +\n                (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        var prevProd = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"peek\"])(this.recordingProdStack);\n        var ruleName = ruleToCall[\"ruleName\"];\n        var newNoneTerminal = new _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"NonTerminal\"]({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    };\n    GastRecorder.prototype.consumeInternalRecord = function (tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!Object(_scan_tokens__WEBPACK_IMPORTED_MODULE_3__[\"hasShortKeyProperty\"])(tokType)) {\n            var error = new Error(\"<CONSUME\" + getIdxSuffix(occurrence) + \"> argument is invalid\" +\n                (\" expecting a TokenType reference but got: <\" + JSON.stringify(tokType) + \">\") +\n                (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        var prevProd = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"peek\"])(this.recordingProdStack);\n        var newNoneTerminal = new _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Terminal\"]({\n            idx: occurrence,\n            terminalType: tokType\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    };\n    return GastRecorder;\n}());\n\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep) {\n    if (handleSep === void 0) { handleSep = false; }\n    assertMethodIdxIsValid(occurrence);\n    var prevProd = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"peek\"])(this.recordingProdStack);\n    var grammarAction = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isFunction\"])(mainProdArg)\n        ? mainProdArg\n        : mainProdArg.DEF;\n    var newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(mainProdArg, \"NAME\")) {\n        newProd.name = mainProdArg.NAME;\n    }\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    var _this = this;\n    assertMethodIdxIsValid(occurrence);\n    var prevProd = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"peek\"])(this.recordingProdStack);\n    // Only an array of alternatives\n    var hasOptions = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(mainProdArg) === false;\n    var alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    var newOrProd = new _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Alternation\"]({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n    });\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(mainProdArg, \"NAME\")) {\n        newOrProd.name = mainProdArg.NAME;\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    var hasPredicates = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"some\"])(alts, function (currAlt) { return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isFunction\"])(currAlt.GATE); });\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(alts, function (currAlt) {\n        var currAltFlat = new _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_1__[\"Flat\"]({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(currAlt, \"NAME\")) {\n            currAltFlat.name = currAlt.NAME;\n        }\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES;\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        _this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(_this);\n        _this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : \"\" + idx;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        var error = new Error(\n        // The stack trace will contain all the needed details\n        \"Invalid DSL Method idx value: <\" + idx + \">\\n\\t\" +\n            (\"Idx value must be a none negative value smaller than \" + (MAX_METHOD_IDX +\n                1)));\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/gast_recorder.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/lexer_adapter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/lexer_adapter.js ***!
  \**********************************************************************************/
/*! exports provided: LexerAdapter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LexerAdapter\", function() { return LexerAdapter; });\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nvar LexerAdapter = /** @class */ (function () {\n    function LexerAdapter() {\n    }\n    LexerAdapter.prototype.initLexerAdapter = function () {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    };\n    Object.defineProperty(LexerAdapter.prototype, \"input\", {\n        get: function () {\n            return this.tokVector;\n        },\n        set: function (newInput) {\n            if (this.selfAnalysisDone !== true) {\n                throw Error(\"Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.\");\n            }\n            this.reset();\n            this.tokVector = newInput;\n            this.tokVectorLength = newInput.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // skips a token and returns the next token\n    LexerAdapter.prototype.SKIP_TOKEN = function () {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return _parser__WEBPACK_IMPORTED_MODULE_0__[\"END_OF_FILE\"];\n        }\n    };\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LexerAdapter.prototype.LA = function (howMuch) {\n        var soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return _parser__WEBPACK_IMPORTED_MODULE_0__[\"END_OF_FILE\"];\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    };\n    LexerAdapter.prototype.consumeToken = function () {\n        this.currIdx++;\n    };\n    LexerAdapter.prototype.exportLexerState = function () {\n        return this.currIdx;\n    };\n    LexerAdapter.prototype.importLexerState = function (newState) {\n        this.currIdx = newState;\n    };\n    LexerAdapter.prototype.resetLexerState = function () {\n        this.currIdx = -1;\n    };\n    LexerAdapter.prototype.moveToTerminatedState = function () {\n        this.currIdx = this.tokVector.length - 1;\n    };\n    LexerAdapter.prototype.getLexerPosition = function () {\n        return this.exportLexerState();\n    };\n    return LexerAdapter;\n}());\n\n//# sourceMappingURL=lexer_adapter.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/lexer_adapter.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/looksahead.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/looksahead.js ***!
  \*******************************************************************************/
/*! exports provided: LooksAhead */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LooksAhead\", function() { return LooksAhead; });\n/* harmony import */ var _grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../grammar/lookahead */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony import */ var _grammar_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../grammar/keys */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js\");\n/* harmony import */ var _grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../grammar/gast/gast */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast.js\");\n\n\n\n\n\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"has\"])(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : _parser__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_PARSER_CONFIG\"].dynamicTokensEnabled;\n        this.maxLookahead = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"has\"])(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : _parser__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_PARSER_CONFIG\"].maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isES2015MapSupported\"])() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isES2015MapSupported\"])()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n        var _this = this;\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(rules, function (currRule) {\n            _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n                var _a = Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"collectMethods\"])(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(alternation, function (currProd) {\n                    var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    _this.TRACE_INIT(\"\" + Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"getProductionDslName\"])(currProd) + prodIdx, function () {\n                        var laFunc = Object(_grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"buildLookaheadFuncForOr\"])(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n                        var key = Object(_grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"getKeyForAutomaticLookahead\"])(_this.fullRuleNameToShort[currRule.name], _grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"OR_IDX\"], currProd.idx);\n                        _this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(repetition, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, _grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"MANY_IDX\"], _grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"PROD_TYPE\"].REPETITION, currProd.maxLookahead, Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"getProductionDslName\"])(currProd));\n                });\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(option, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, _grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"OPTION_IDX\"], _grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"PROD_TYPE\"].OPTION, currProd.maxLookahead, Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"getProductionDslName\"])(currProd));\n                });\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(repetitionMandatory, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, _grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"AT_LEAST_ONE_IDX\"], _grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"PROD_TYPE\"].REPETITION_MANDATORY, currProd.maxLookahead, Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"getProductionDslName\"])(currProd));\n                });\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(repetitionMandatoryWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, _grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"AT_LEAST_ONE_SEP_IDX\"], _grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"PROD_TYPE\"].REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"getProductionDslName\"])(currProd));\n                });\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(repetitionWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, _grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"MANY_SEP_IDX\"], _grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"PROD_TYPE\"].REPETITION_WITH_SEPARATOR, currProd.maxLookahead, Object(_grammar_gast_gast__WEBPACK_IMPORTED_MODULE_4__[\"getProductionDslName\"])(currProd));\n                });\n            });\n        });\n    };\n    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        var _this = this;\n        this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n            var laFunc = Object(_grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"buildLookaheadFuncForOptionalProd\"])(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n            var key = Object(_grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"getKeyForAutomaticLookahead\"])(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            _this.setLaFuncCache(key, laFunc);\n        });\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return Object(_grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"buildSingleAlternativeLookaheadFunction\"])(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return Object(_grammar_lookahead__WEBPACK_IMPORTED_MODULE_0__[\"buildAlternativesLookAheadFunc\"])(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return Object(_grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"getKeyForAutomaticLookahead\"])(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\n\n//# sourceMappingURL=looksahead.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/looksahead.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/perf_tracer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/perf_tracer.js ***!
  \********************************************************************************/
/*! exports provided: PerformanceTracer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PerformanceTracer\", function() { return PerformanceTracer; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n\n\n/**\n * Trait responsible for runtime parsing errors.\n */\nvar PerformanceTracer = /** @class */ (function () {\n    function PerformanceTracer() {\n    }\n    PerformanceTracer.prototype.initPerformanceTracer = function (config) {\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"traceInitPerf\")) {\n            var userTraceInitPerf = config.traceInitPerf;\n            var traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf;\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = _parser__WEBPACK_IMPORTED_MODULE_1__[\"DEFAULT_PARSER_CONFIG\"].traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    };\n    PerformanceTracer.prototype.TRACE_INIT = function (phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            var indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(indent + \"--> <\" + phaseDesc + \">\");\n            }\n            var _a = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"timer\"])(phaseImpl), time = _a.time, value = _a.value;\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            var traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(indent + \"<-- <\" + phaseDesc + \"> time: \" + time + \"ms\");\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    };\n    return PerformanceTracer;\n}());\n\n//# sourceMappingURL=perf_tracer.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/perf_tracer.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_api.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_api.js ***!
  \***********************************************************************************/
/*! exports provided: RecognizerApi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RecognizerApi\", function() { return RecognizerApi; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _exceptions_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../exceptions_public */ \"./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony import */ var _errors_public__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../errors_public */ \"./node_modules/chevrotain/lib_esm/src/parse/errors_public.js\");\n/* harmony import */ var _grammar_checks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../grammar/checks */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/checks.js\");\n/* harmony import */ var _grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../grammar/gast/gast_public */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/gast/gast_public.js\");\n\n\n\n\n\n\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nvar RecognizerApi = /** @class */ (function () {\n    function RecognizerApi() {\n    }\n    RecognizerApi.prototype.ACTION = function (impl) {\n        return impl.call(this);\n    };\n    RecognizerApi.prototype.consume = function (idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    };\n    RecognizerApi.prototype.subrule = function (idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    };\n    RecognizerApi.prototype.option = function (idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    };\n    RecognizerApi.prototype.or = function (idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    };\n    RecognizerApi.prototype.many = function (idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    };\n    RecognizerApi.prototype.atLeastOne = function (idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    };\n    RecognizerApi.prototype.CONSUME = function (tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    };\n    RecognizerApi.prototype.CONSUME1 = function (tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    };\n    RecognizerApi.prototype.CONSUME2 = function (tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    };\n    RecognizerApi.prototype.CONSUME3 = function (tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    };\n    RecognizerApi.prototype.CONSUME4 = function (tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    };\n    RecognizerApi.prototype.CONSUME5 = function (tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    };\n    RecognizerApi.prototype.CONSUME6 = function (tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    };\n    RecognizerApi.prototype.CONSUME7 = function (tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    };\n    RecognizerApi.prototype.CONSUME8 = function (tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    };\n    RecognizerApi.prototype.CONSUME9 = function (tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    };\n    RecognizerApi.prototype.SUBRULE = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    };\n    RecognizerApi.prototype.SUBRULE1 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    };\n    RecognizerApi.prototype.SUBRULE2 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    };\n    RecognizerApi.prototype.SUBRULE3 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    };\n    RecognizerApi.prototype.SUBRULE4 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    };\n    RecognizerApi.prototype.SUBRULE5 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    };\n    RecognizerApi.prototype.SUBRULE6 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    };\n    RecognizerApi.prototype.SUBRULE7 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    };\n    RecognizerApi.prototype.SUBRULE8 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    };\n    RecognizerApi.prototype.SUBRULE9 = function (ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    };\n    RecognizerApi.prototype.OPTION = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    };\n    RecognizerApi.prototype.OPTION1 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    };\n    RecognizerApi.prototype.OPTION2 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    };\n    RecognizerApi.prototype.OPTION3 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    };\n    RecognizerApi.prototype.OPTION4 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    };\n    RecognizerApi.prototype.OPTION5 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    };\n    RecognizerApi.prototype.OPTION6 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    };\n    RecognizerApi.prototype.OPTION7 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    };\n    RecognizerApi.prototype.OPTION8 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    };\n    RecognizerApi.prototype.OPTION9 = function (actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    };\n    RecognizerApi.prototype.OR = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    };\n    RecognizerApi.prototype.OR1 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    };\n    RecognizerApi.prototype.OR2 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    };\n    RecognizerApi.prototype.OR3 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    };\n    RecognizerApi.prototype.OR4 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    };\n    RecognizerApi.prototype.OR5 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    };\n    RecognizerApi.prototype.OR6 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    };\n    RecognizerApi.prototype.OR7 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    };\n    RecognizerApi.prototype.OR8 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    };\n    RecognizerApi.prototype.OR9 = function (altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    };\n    RecognizerApi.prototype.MANY = function (actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY1 = function (actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY2 = function (actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY3 = function (actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY4 = function (actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY5 = function (actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY6 = function (actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY7 = function (actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY8 = function (actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY9 = function (actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    };\n    RecognizerApi.prototype.MANY_SEP = function (options) {\n        this.manySepFirstInternal(0, options);\n    };\n    RecognizerApi.prototype.MANY_SEP1 = function (options) {\n        this.manySepFirstInternal(1, options);\n    };\n    RecognizerApi.prototype.MANY_SEP2 = function (options) {\n        this.manySepFirstInternal(2, options);\n    };\n    RecognizerApi.prototype.MANY_SEP3 = function (options) {\n        this.manySepFirstInternal(3, options);\n    };\n    RecognizerApi.prototype.MANY_SEP4 = function (options) {\n        this.manySepFirstInternal(4, options);\n    };\n    RecognizerApi.prototype.MANY_SEP5 = function (options) {\n        this.manySepFirstInternal(5, options);\n    };\n    RecognizerApi.prototype.MANY_SEP6 = function (options) {\n        this.manySepFirstInternal(6, options);\n    };\n    RecognizerApi.prototype.MANY_SEP7 = function (options) {\n        this.manySepFirstInternal(7, options);\n    };\n    RecognizerApi.prototype.MANY_SEP8 = function (options) {\n        this.manySepFirstInternal(8, options);\n    };\n    RecognizerApi.prototype.MANY_SEP9 = function (options) {\n        this.manySepFirstInternal(9, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE = function (actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE1 = function (actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE2 = function (actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE3 = function (actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE4 = function (actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE5 = function (actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE6 = function (actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE7 = function (actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE8 = function (actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE9 = function (actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP = function (options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP1 = function (options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP2 = function (options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP3 = function (options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP4 = function (options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP5 = function (options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP6 = function (options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP7 = function (options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP8 = function (options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    };\n    RecognizerApi.prototype.AT_LEAST_ONE_SEP9 = function (options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    };\n    RecognizerApi.prototype.RULE = function (name, implementation, config) {\n        if (config === void 0) { config = _parser__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_RULE_CONFIG\"]; }\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(this.definedRulesNames, name)) {\n            var errMsg = _errors_public__WEBPACK_IMPORTED_MODULE_3__[\"defaultGrammarValidatorErrorProvider\"].buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className\n            });\n            var error = {\n                message: errMsg,\n                type: _parser__WEBPACK_IMPORTED_MODULE_2__[\"ParserDefinitionErrorType\"].DUPLICATE_RULE_NAME,\n                ruleName: name\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        var ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    };\n    RecognizerApi.prototype.OVERRIDE_RULE = function (name, impl, config) {\n        if (config === void 0) { config = _parser__WEBPACK_IMPORTED_MODULE_2__[\"DEFAULT_RULE_CONFIG\"]; }\n        var ruleErrors = [];\n        ruleErrors = ruleErrors.concat(Object(_grammar_checks__WEBPACK_IMPORTED_MODULE_4__[\"validateRuleIsOverridden\"])(name, this.definedRulesNames, this.className));\n        this.definitionErrors.push.apply(this.definitionErrors, ruleErrors); // mutability for the win\n        var ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    };\n    RecognizerApi.prototype.BACKTRACK = function (grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            var orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (Object(_exceptions_public__WEBPACK_IMPORTED_MODULE_1__[\"isRecognitionException\"])(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    };\n    // GAST export APIs\n    RecognizerApi.prototype.getGAstProductions = function () {\n        return this.gastProductionsCache;\n    };\n    RecognizerApi.prototype.getSerializedGastProductions = function () {\n        return Object(_grammar_gast_gast_public__WEBPACK_IMPORTED_MODULE_5__[\"serializeGrammar\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(this.gastProductionsCache));\n    };\n    return RecognizerApi;\n}());\n\n//# sourceMappingURL=recognizer_api.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_api.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_engine.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_engine.js ***!
  \**************************************************************************************/
/*! exports provided: RecognizerEngine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RecognizerEngine\", function() { return RecognizerEngine; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _grammar_keys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../grammar/keys */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js\");\n/* harmony import */ var _exceptions_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../exceptions_public */ \"./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js\");\n/* harmony import */ var _grammar_lookahead__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../grammar/lookahead */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/lookahead.js\");\n/* harmony import */ var _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../grammar/interpreter */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/interpreter.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n/* harmony import */ var _recoverable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./recoverable */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recoverable.js\");\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\n/* harmony import */ var _scan_tokens__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../scan/tokens */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens.js\");\n/* harmony import */ var _lang_lang_extensions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../lang/lang_extensions */ \"./node_modules/chevrotain/lib_esm/src/lang/lang_extensions.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nvar RecognizerEngine = /** @class */ (function () {\n    function RecognizerEngine() {\n    }\n    RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n        this.className = Object(_lang_lang_extensions__WEBPACK_IMPORTED_MODULE_9__[\"classNameFromInstance\"])(this);\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = _scan_tokens__WEBPACK_IMPORTED_MODULE_8__[\"tokenStructuredMatcherNoCategories\"];\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.allRuleNames = [];\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://sap.github.io/chevrotain/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(tokenVocabulary)) {\n            this.tokensMap = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(tokenVocabulary, function (acc, tokType) {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(tokenVocabulary, \"modes\") &&\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(tokenVocabulary.modes)), _scan_tokens__WEBPACK_IMPORTED_MODULE_8__[\"isTokenType\"])) {\n            var allTokenTypes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(tokenVocabulary.modes));\n            var uniqueTokens = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"uniq\"])(allTokenTypes);\n            this.tokensMap = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"reduce\"])(uniqueTokens, function (acc, tokType) {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isObject\"])(tokenVocabulary)) {\n            this.tokensMap = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"cloneObj\"])(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        /* tslint:disable */\n        this.tokensMap[\"EOF\"] = _scan_tokens_public__WEBPACK_IMPORTED_MODULE_7__[\"EOF\"];\n        // TODO: This check may not be accurate for multi mode lexers\n        var noTokenCategoriesUsed = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"every\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(tokenVocabulary), function (tokenConstructor) { return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(tokenConstructor.categoryMatches); });\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? _scan_tokens__WEBPACK_IMPORTED_MODULE_8__[\"tokenStructuredMatcherNoCategories\"]\n            : _scan_tokens__WEBPACK_IMPORTED_MODULE_8__[\"tokenStructuredMatcher\"];\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        Object(_scan_tokens__WEBPACK_IMPORTED_MODULE_8__[\"augmentTokenTypes\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"values\"])(this.tokensMap));\n    };\n    RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(\"Grammar rule <\" + ruleName + \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\" +\n                \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n        }\n        var resyncEnabled = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"resyncEnabled\")\n            ? config.resyncEnabled\n            : _parser__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_RULE_CONFIG\"].resyncEnabled;\n        var recoveryValueFunc = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc\n            : _parser__WEBPACK_IMPORTED_MODULE_5__[\"DEFAULT_RULE_CONFIG\"].recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        /* tslint:disable */\n        var shortName = this.ruleShortNameIdx <<\n            (_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"BITS_FOR_METHOD_TYPE\"] + _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"BITS_FOR_OCCURRENCE_IDX\"]);\n        /* tslint:enable */\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        function invokeRuleWithTry(args) {\n            try {\n                if (this.outputCst === true) {\n                    impl.apply(this, args);\n                    var cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                else {\n                    return impl.apply(this, args);\n                }\n            }\n            catch (e) {\n                return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n            }\n            finally {\n                this.ruleFinallyStateUpdate();\n            }\n        }\n        var wrappedGrammarRule;\n        wrappedGrammarRule = function (idxInCallingRule, args) {\n            if (idxInCallingRule === void 0) { idxInCallingRule = 0; }\n            this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);\n            return invokeRuleWithTry.call(this, args);\n        };\n        var ruleNamePropName = \"ruleName\";\n        wrappedGrammarRule[ruleNamePropName] = ruleName;\n        wrappedGrammarRule[\"originalGrammarAction\"] = impl;\n        return wrappedGrammarRule;\n    };\n    RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {\n        var isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        var reSyncEnabled = resyncEnabledConfig &&\n            !this.isBackTracking() &&\n            this.recoveryEnabled;\n        if (Object(_exceptions_public__WEBPACK_IMPORTED_MODULE_2__[\"isRecognitionException\"])(e)) {\n            var recogError = e;\n            if (reSyncEnabled) {\n                var reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc();\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc();\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    };\n    // Implementation of parsing DSL\n    RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n        var key = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OPTION_IDX\"], occurrence);\n        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, key);\n        try {\n            return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(key, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.optionInternalNoCst = function (actionORMethodDef, occurrence) {\n        var key = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OPTION_IDX\"], occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    };\n    RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n        var _this = this;\n        var lookAheadFunc = this.getLaFuncFromCache(key);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_1 = lookAheadFunc;\n                lookAheadFunc = function () {\n                    return (predicate.call(_this) && orgLookaheadFunction_1.call(_this));\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    };\n    RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_IDX\"], prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, laKey);\n        try {\n            return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.atLeastOneInternalNoCst = function (prodOccurrence, actionORMethodDef) {\n        var key = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_IDX\"], prodOccurrence);\n        this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key);\n    };\n    RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n        var _this = this;\n        var lookAheadFunc = this.getLaFuncFromCache(key);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_2 = lookAheadFunc;\n                lookAheadFunc = function () {\n                    return (predicate.call(_this) && orgLookaheadFunction_2.call(_this));\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            var notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, _grammar_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"PROD_TYPE\"].REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_IDX\"], prodOccurrence, _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__[\"NextTerminalAfterAtLeastOneWalker\"]);\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_SEP_IDX\"], prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(options, laKey);\n        try {\n            this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternalNoCst = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_SEP_IDX\"], prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    };\n    RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n        var _this = this;\n        var action = options.DEF;\n        var separator = options.SEP;\n        var firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            ;\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            var separatorLookAheadFunc = function () {\n                return _this.tokenMatcher(_this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__[\"NextTerminalAfterAtLeastOneSepWalker\"]\n            ], separatorLookAheadFunc, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_SEP_IDX\"], prodOccurrence, _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__[\"NextTerminalAfterAtLeastOneSepWalker\"]);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, _grammar_lookahead__WEBPACK_IMPORTED_MODULE_3__[\"PROD_TYPE\"].REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    };\n    RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_IDX\"], prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(actionORMethodDef, laKey);\n        try {\n            return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.manyInternalNoCst = function (prodOccurrence, actionORMethodDef) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_IDX\"], prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    };\n    RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n        var _this = this;\n        var lookaheadFunction = this.getLaFuncFromCache(key);\n        var action;\n        var predicate;\n        if (actionORMethodDef.DEF !== undefined) {\n            action = actionORMethodDef.DEF;\n            predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                var orgLookaheadFunction_3 = lookaheadFunction;\n                lookaheadFunction = function () {\n                    return (predicate.call(_this) && orgLookaheadFunction_3.call(_this));\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        var notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_IDX\"], prodOccurrence, _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__[\"NextTerminalAfterManyWalker\"], \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    };\n    RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_SEP_IDX\"], prodOccurrence);\n        var nestedName = this.nestedRuleBeforeClause(options, laKey);\n        try {\n            this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.manySepFirstInternalNoCst = function (prodOccurrence, options) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_SEP_IDX\"], prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    };\n    RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n        var _this = this;\n        var action = options.DEF;\n        var separator = options.SEP;\n        var firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            var separatorLookAheadFunc = function () {\n                return _this.tokenMatcher(_this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__[\"NextTerminalAfterManySepWalker\"]\n            ], separatorLookAheadFunc, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"MANY_SEP_IDX\"], prodOccurrence, _grammar_interpreter__WEBPACK_IMPORTED_MODULE_4__[\"NextTerminalAfterManySepWalker\"]);\n        }\n    };\n    RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker\n        ], separatorLookAheadFunc, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"AT_LEAST_ONE_SEP_IDX\"], prodOccurrence, nextTerminalAfterWalker);\n    };\n    RecognizerEngine.prototype.doSingleRepetition = function (action) {\n        var beforeIteration = this.getLexerPosition();\n        action.call(this);\n        var afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    };\n    RecognizerEngine.prototype.orInternalNoCst = function (altsOrOpts, occurrence) {\n        var alts = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(altsOrOpts)\n            ? altsOrOpts\n            : altsOrOpts.DEF;\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OR_IDX\"], occurrence);\n        var laFunc = this.getLaFuncFromCache(laKey);\n        var altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            var chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    };\n    RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n        var laKey = this.getKeyForAutomaticLookahead(_grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OR_IDX\"], occurrence);\n        var nestedName = this.nestedRuleBeforeClause(altsOrOpts, laKey);\n        try {\n            var alts = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(altsOrOpts)\n                ? altsOrOpts\n                : altsOrOpts.DEF;\n            var laFunc = this.getLaFuncFromCache(laKey);\n            var altIdxToTake = laFunc.call(this, alts);\n            if (altIdxToTake !== undefined) {\n                var chosenAlternative = alts[altIdxToTake];\n                var nestedAltBeforeClauseResult = this.nestedAltBeforeClause(chosenAlternative, occurrence, _grammar_keys__WEBPACK_IMPORTED_MODULE_1__[\"OR_IDX\"], altIdxToTake);\n                try {\n                    return chosenAlternative.ALT.call(this);\n                }\n                finally {\n                    if (nestedAltBeforeClauseResult !== undefined) {\n                        this.nestedRuleFinallyClause(nestedAltBeforeClauseResult.shortName, nestedAltBeforeClauseResult.nestedName);\n                    }\n                }\n            }\n            this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n        }\n        finally {\n            if (nestedName !== undefined) {\n                this.nestedRuleFinallyClause(laKey, nestedName);\n            }\n        }\n    };\n    RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            var firstRedundantTok = this.LA(1);\n            var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName()\n            });\n            this.SAVE_ERROR(new _exceptions_public__WEBPACK_IMPORTED_MODULE_2__[\"NotAllInputParsedException\"](errMsg, firstRedundantTok));\n        }\n    };\n    RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n        var ruleResult;\n        try {\n            var args = options !== undefined ? options.ARGS : undefined;\n            ruleResult = ruleToCall.call(this, idx, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    };\n    RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {\n        if (Object(_exceptions_public__WEBPACK_IMPORTED_MODULE_2__[\"isRecognitionException\"])(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    };\n    RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n        var consumedToken;\n        try {\n            var nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    };\n    RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {\n        var msg;\n        var previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName()\n            });\n        }\n        throw this.SAVE_ERROR(new _exceptions_public__WEBPACK_IMPORTED_MODULE_2__[\"MismatchedTokenException\"](msg, nextToken, previousToken));\n    };\n    RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === _recoverable__WEBPACK_IMPORTED_MODULE_6__[\"IN_RULE_RECOVERY_EXCEPTION\"]) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    };\n    RecognizerEngine.prototype.saveRecogState = function () {\n        // errors is a getter which will clone the errors array\n        var savedErrors = this.errors;\n        var savedRuleStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"cloneArr\"])(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n            LAST_EXPLICIT_RULE_STACK: this.LAST_EXPLICIT_RULE_STACK\n        };\n    };\n    RecognizerEngine.prototype.reloadRecogState = function (newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    };\n    RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName, shortName);\n    };\n    RecognizerEngine.prototype.isBackTracking = function () {\n        return this.isBackTrackingStack.length !== 0;\n    };\n    RecognizerEngine.prototype.getCurrRuleFullName = function () {\n        var shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    };\n    RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n        return this.shortRuleNameToFull[shortName];\n    };\n    RecognizerEngine.prototype.isAtEndOfInput = function () {\n        return this.tokenMatcher(this.LA(1), _scan_tokens_public__WEBPACK_IMPORTED_MODULE_7__[\"EOF\"]);\n    };\n    RecognizerEngine.prototype.reset = function () {\n        this.resetLexerState();\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        this.LAST_EXPLICIT_RULE_STACK = [];\n        // TODO: extract a specific rest for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    };\n    return RecognizerEngine;\n}());\n\n//# sourceMappingURL=recognizer_engine.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recognizer_engine.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recoverable.js":
/*!********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recoverable.js ***!
  \********************************************************************************/
/*! exports provided: EOF_FOLLOW_KEY, IN_RULE_RECOVERY_EXCEPTION, InRuleRecoveryException, Recoverable, attemptInRepetitionRecovery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EOF_FOLLOW_KEY\", function() { return EOF_FOLLOW_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IN_RULE_RECOVERY_EXCEPTION\", function() { return IN_RULE_RECOVERY_EXCEPTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InRuleRecoveryException\", function() { return InRuleRecoveryException; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Recoverable\", function() { return Recoverable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"attemptInRepetitionRecovery\", function() { return attemptInRepetitionRecovery; });\n/* harmony import */ var _scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../scan/tokens_public */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _exceptions_public__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../exceptions_public */ \"./node_modules/chevrotain/lib_esm/src/parse/exceptions_public.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../constants */ \"./node_modules/chevrotain/lib_esm/src/parse/constants.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n\n\n\n\n\nvar EOF_FOLLOW_KEY = {};\nvar IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nfunction InRuleRecoveryException(message) {\n    this.name = IN_RULE_RECOVERY_EXCEPTION;\n    this.message = message;\n}\nInRuleRecoveryException.prototype = Error.prototype;\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nvar Recoverable = /** @class */ (function () {\n    function Recoverable() {\n    }\n    Recoverable.prototype.initRecoverable = function (config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"has\"])(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled\n            : _parser__WEBPACK_IMPORTED_MODULE_4__[\"DEFAULT_PARSER_CONFIG\"].recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    };\n    Recoverable.prototype.getTokenToInsert = function (tokType) {\n        var tokToInsert = Object(_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"createTokenInstance\"])(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    };\n    Recoverable.prototype.canTokenTypeBeInsertedInRecovery = function (tokType) {\n        return true;\n    };\n    Recoverable.prototype.tryInRepetitionRecovery = function (grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        var _this = this;\n        // TODO: can the resyncTokenType be cached?\n        var reSyncTokType = this.findReSyncTokenType();\n        var savedLexerState = this.exportLexerState();\n        var resyncedTokens = [];\n        var passedResyncPoint = false;\n        var nextTokenWithoutResync = this.LA(1);\n        var currToken = this.LA(1);\n        var generateErrorMessage = function () {\n            var previousToken = _this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            var msg = _this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: _this.getCurrRuleFullName()\n            });\n            var error = new _exceptions_public__WEBPACK_IMPORTED_MODULE_2__[\"MismatchedTokenException\"](msg, nextTokenWithoutResync, _this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"dropRight\"])(resyncedTokens);\n            _this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    };\n    Recoverable.prototype.shouldInRepetitionRecoveryBeTried = function (expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // arguments to try and perform resync into the next iteration of the many are missing\n        if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    };\n    // Error Recovery functionality\n    Recoverable.prototype.getFollowsForInRuleRecovery = function (tokType, tokIdxInRule) {\n        var grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        var follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    };\n    Recoverable.prototype.tryInRuleRecovery = function (expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            var tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            var nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    };\n    Recoverable.prototype.canPerformInRuleRecovery = function (expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    };\n    Recoverable.prototype.canRecoverWithSingleTokenInsertion = function (expectedTokType, follows) {\n        var _this = this;\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(follows)) {\n            return false;\n        }\n        var mismatchedTok = this.LA(1);\n        var isMisMatchedTokInFollows = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"find\"])(follows, function (possibleFollowsTokType) {\n            return _this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    };\n    Recoverable.prototype.canRecoverWithSingleTokenDeletion = function (expectedTokType) {\n        var isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    };\n    Recoverable.prototype.isInCurrentRuleReSyncSet = function (tokenTypeIdx) {\n        var followKey = this.getCurrFollowKey();\n        var currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])(currentRuleReSyncSet, tokenTypeIdx);\n    };\n    Recoverable.prototype.findReSyncTokenType = function () {\n        var allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        var nextToken = this.LA(1);\n        var k = 2;\n        while (true) {\n            var nextTokenType = nextToken.tokenType;\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])(allPossibleReSyncTokTypes, nextTokenType)) {\n                return nextTokenType;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    };\n    Recoverable.prototype.getCurrFollowKey = function () {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        var currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        var prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName)\n        };\n    };\n    Recoverable.prototype.buildFullFollowKeyStack = function () {\n        var _this = this;\n        var explicitRuleStack = this.RULE_STACK;\n        var explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(this.LAST_EXPLICIT_RULE_STACK)) {\n            explicitRuleStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.LAST_EXPLICIT_RULE_STACK, function (idx) { return _this.RULE_STACK[idx]; });\n            explicitOccurrenceStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.LAST_EXPLICIT_RULE_STACK, function (idx) { return _this.RULE_OCCURRENCE_STACK[idx]; });\n        }\n        // TODO: only iterate over explicit rules here\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(explicitRuleStack, function (ruleName, idx) {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: _this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: _this.shortRuleNameToFullName(explicitRuleStack[idx - 1])\n            };\n        });\n    };\n    Recoverable.prototype.flattenFollowSet = function () {\n        var _this = this;\n        var followStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.buildFullFollowKeyStack(), function (currKey) {\n            return _this.getFollowSetFromFollowKey(currKey);\n        });\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"flatten\"])(followStack);\n    };\n    Recoverable.prototype.getFollowSetFromFollowKey = function (followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [_scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"EOF\"]];\n        }\n        var followName = followKey.ruleName +\n            followKey.idxInCallingRule +\n            _constants__WEBPACK_IMPORTED_MODULE_3__[\"IN\"] +\n            followKey.inRule;\n        return this.resyncFollows[followName];\n    };\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    Recoverable.prototype.addToResyncTokens = function (token, resyncTokens) {\n        if (!this.tokenMatcher(token, _scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"EOF\"])) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    };\n    Recoverable.prototype.reSyncTo = function (tokType) {\n        var resyncedTokens = [];\n        var nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"dropRight\"])(resyncedTokens);\n    };\n    Recoverable.prototype.attemptInRepetitionRecovery = function (prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    };\n    Recoverable.prototype.getCurrentGrammarPath = function (tokType, tokIdxInRule) {\n        var pathRuleStack = this.getHumanReadableRuleStack();\n        var pathOccurrenceStack = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])(this.RULE_OCCURRENCE_STACK);\n        var grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule\n        };\n        return grammarPath;\n    };\n    Recoverable.prototype.getHumanReadableRuleStack = function () {\n        var _this = this;\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(this.LAST_EXPLICIT_RULE_STACK)) {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.LAST_EXPLICIT_RULE_STACK, function (currIdx) {\n                return _this.shortRuleNameToFullName(_this.RULE_STACK[currIdx]);\n            });\n        }\n        else {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.RULE_STACK, function (currShortName) {\n                return _this.shortRuleNameToFullName(currShortName);\n            });\n        }\n    };\n    return Recoverable;\n}());\n\nfunction attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    var key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    var firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        var currRuleName = this.getCurrRuleFullName();\n        var ruleGrammar = this.getGAstProductions()[currRuleName];\n        var walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    var expectTokAfterLastMatch = firstAfterRepInfo.token;\n    var nextTokIdx = firstAfterRepInfo.occurrence;\n    var isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = _scan_tokens_public__WEBPACK_IMPORTED_MODULE_0__[\"EOF\"];\n        nextTokIdx = 1;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/recoverable.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/parse/parser/traits/tree_builder.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/parse/parser/traits/tree_builder.js ***!
  \*********************************************************************************/
/*! exports provided: TreeBuilder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TreeBuilder\", function() { return TreeBuilder; });\n/* harmony import */ var _cst_cst__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cst/cst */ \"./node_modules/chevrotain/lib_esm/src/parse/cst/cst.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _cst_cst_visitor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../cst/cst_visitor */ \"./node_modules/chevrotain/lib_esm/src/parse/cst/cst_visitor.js\");\n/* harmony import */ var _grammar_keys__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../grammar/keys */ \"./node_modules/chevrotain/lib_esm/src/parse/grammar/keys.js\");\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser */ \"./node_modules/chevrotain/lib_esm/src/parse/parser/parser.js\");\n\n\n\n\n\n/**\n * This trait is responsible for the CST building logic.\n */\nvar TreeBuilder = /** @class */ (function () {\n    function TreeBuilder() {\n    }\n    TreeBuilder.prototype.initTreeBuilder = function (config) {\n        this.LAST_EXPLICIT_RULE_STACK = [];\n        this.CST_STACK = [];\n        this.outputCst = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"has\"])(config, \"outputCst\")\n            ? config.outputCst\n            : _parser__WEBPACK_IMPORTED_MODULE_4__[\"DEFAULT_PARSER_CONFIG\"].outputCst;\n        this.nodeLocationTracking = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"has\"])(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking\n            : _parser__WEBPACK_IMPORTED_MODULE_4__[\"DEFAULT_PARSER_CONFIG\"].nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            this.cstFinallyStateUpdate = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            this.cstPostTerminal = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            this.cstPostNonTerminal = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            this.cstPostRule = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            this.getLastExplicitRuleShortName = this.getLastExplicitRuleShortNameNoCst;\n            this.getPreviousExplicitRuleShortName = this.getPreviousExplicitRuleShortNameNoCst;\n            this.getLastExplicitRuleOccurrenceIndex = this.getLastExplicitRuleOccurrenceIndexNoCst;\n            this.manyInternal = this.manyInternalNoCst;\n            this.orInternal = this.orInternalNoCst;\n            this.optionInternal = this.optionInternalNoCst;\n            this.atLeastOneInternal = this.atLeastOneInternalNoCst;\n            this.manySepFirstInternal = this.manySepFirstInternalNoCst;\n            this.atLeastOneSepFirstInternal = this.atLeastOneSepFirstInternalNoCst;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = _cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"setNodeLocationFull\"];\n                    this.setNodeLocationFromNode = _cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"setNodeLocationFull\"];\n                    this.cstPostRule = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                    this.setNodeLocationFromNode = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = (_cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"setNodeLocationOnlyOffset\"]);\n                    this.setNodeLocationFromNode = (_cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"setNodeLocationOnlyOffset\"]);\n                    this.cstPostRule = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                    this.setNodeLocationFromNode = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                this.setNodeLocationFromNode = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                this.cstPostRule = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n                this.setInitialNodeLocation = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            }\n            else {\n                throw Error(\"Invalid <nodeLocationTracking> config option: \\\"\" + config.nodeLocationTracking + \"\\\"\");\n            }\n        }\n    };\n    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRecovery = function (cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN\n        };\n    };\n    TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRegular = function (cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN\n        };\n    };\n    TreeBuilder.prototype.setInitialNodeLocationFullRecovery = function (cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN\n        };\n    };\n    /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n\n     * @param cstNode\n     */\n    TreeBuilder.prototype.setInitialNodeLocationFullRegular = function (cstNode) {\n        var nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN\n        };\n    };\n    // CST\n    TreeBuilder.prototype.cstNestedInvocationStateUpdate = function (nestedName, shortName) {\n        var cstNode = {\n            name: nestedName,\n            fullName: this.shortRuleNameToFull[this.getLastExplicitRuleShortName()] +\n                nestedName,\n            children: {}\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    };\n    TreeBuilder.prototype.cstInvocationStateUpdate = function (fullRuleName, shortName) {\n        this.LAST_EXPLICIT_RULE_STACK.push(this.RULE_STACK.length - 1);\n        var cstNode = {\n            name: fullRuleName,\n            children: {}\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    };\n    TreeBuilder.prototype.cstFinallyStateUpdate = function () {\n        this.LAST_EXPLICIT_RULE_STACK.pop();\n        this.CST_STACK.pop();\n    };\n    TreeBuilder.prototype.cstNestedFinallyStateUpdate = function () {\n        var lastCstNode = this.CST_STACK.pop();\n        // TODO: the naming is bad, this should go directly to the\n        //       (correct) cstLocation update method\n        //       e.g if we put other logic in postRule...\n        this.cstPostRule(lastCstNode);\n    };\n    TreeBuilder.prototype.cstPostRuleFull = function (ruleCstNode) {\n        var prevToken = this.LA(0);\n        var loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode or its nested children.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    };\n    TreeBuilder.prototype.cstPostRuleOnlyOffset = function (ruleCstNode) {\n        var prevToken = this.LA(0);\n        var loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode or its nested children.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    };\n    TreeBuilder.prototype.cstPostTerminal = function (key, consumedToken) {\n        var rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        Object(_cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"addTerminalToCst\"])(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    };\n    TreeBuilder.prototype.cstPostNonTerminal = function (ruleCstResult, ruleName) {\n        // Avoid side effects due to back tracking\n        // TODO: This costs a 2-3% in performance, A flag on IParserConfig\n        //   could be used to get rid of this conditional, but not sure its worth the effort\n        //   and API complexity.\n        if (this.isBackTracking() !== true) {\n            var preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n            Object(_cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"addNoneTerminalToCst\"])(preCstNode, ruleName, ruleCstResult);\n            // This is only used when **both** error recovery and CST Output are enabled.\n            this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n        }\n    };\n    TreeBuilder.prototype.getBaseCstVisitorConstructor = function () {\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isUndefined\"])(this.baseCstVisitorConstructor)) {\n            var newBaseCstVisitorConstructor = Object(_cst_cst_visitor__WEBPACK_IMPORTED_MODULE_2__[\"createBaseSemanticVisitorConstructor\"])(this.className, this.allRuleNames);\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    };\n    TreeBuilder.prototype.getBaseCstVisitorConstructorWithDefaults = function () {\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isUndefined\"])(this.baseCstVisitorWithDefaultsConstructor)) {\n            var newConstructor = Object(_cst_cst_visitor__WEBPACK_IMPORTED_MODULE_2__[\"createBaseVisitorConstructorWithDefaults\"])(this.className, this.allRuleNames, this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    };\n    TreeBuilder.prototype.nestedRuleBeforeClause = function (methodOpts, laKey) {\n        var nestedName;\n        if (methodOpts.NAME !== undefined) {\n            nestedName = methodOpts.NAME;\n            this.nestedRuleInvocationStateUpdate(nestedName, laKey);\n            return nestedName;\n        }\n        else {\n            return undefined;\n        }\n    };\n    TreeBuilder.prototype.nestedAltBeforeClause = function (methodOpts, occurrence, methodKeyIdx, altIdx) {\n        var ruleIdx = this.getLastExplicitRuleShortName();\n        var shortName = Object(_grammar_keys__WEBPACK_IMPORTED_MODULE_3__[\"getKeyForAltIndex\"])(ruleIdx, methodKeyIdx, occurrence, altIdx);\n        var nestedName;\n        if (methodOpts.NAME !== undefined) {\n            nestedName = methodOpts.NAME;\n            this.nestedRuleInvocationStateUpdate(nestedName, shortName);\n            return {\n                shortName: shortName,\n                nestedName: nestedName\n            };\n        }\n        else {\n            return undefined;\n        }\n    };\n    TreeBuilder.prototype.nestedRuleFinallyClause = function (laKey, nestedName) {\n        var cstStack = this.CST_STACK;\n        var nestedRuleCst = cstStack[cstStack.length - 1];\n        this.nestedRuleFinallyStateUpdate();\n        // this return a different result than the previous invocation because \"nestedRuleFinallyStateUpdate\" pops the cst stack\n        var parentCstNode = cstStack[cstStack.length - 1];\n        Object(_cst_cst__WEBPACK_IMPORTED_MODULE_0__[\"addNoneTerminalToCst\"])(parentCstNode, nestedName, nestedRuleCst);\n        this.setNodeLocationFromNode(parentCstNode.location, nestedRuleCst.location);\n    };\n    TreeBuilder.prototype.getLastExplicitRuleShortName = function () {\n        var lastExplictIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 1];\n        return this.RULE_STACK[lastExplictIndex];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleShortNameNoCst = function () {\n        var ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    };\n    TreeBuilder.prototype.getPreviousExplicitRuleShortName = function () {\n        var lastExplicitIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 2];\n        return this.RULE_STACK[lastExplicitIndex];\n    };\n    TreeBuilder.prototype.getPreviousExplicitRuleShortNameNoCst = function () {\n        var ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndex = function () {\n        var lastExplicitIndex = this.LAST_EXPLICIT_RULE_STACK[this.LAST_EXPLICIT_RULE_STACK.length - 1];\n        return this.RULE_OCCURRENCE_STACK[lastExplicitIndex];\n    };\n    TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndexNoCst = function () {\n        var occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    };\n    TreeBuilder.prototype.nestedRuleInvocationStateUpdate = function (nestedRuleName, shortNameKey) {\n        this.RULE_OCCURRENCE_STACK.push(1);\n        this.RULE_STACK.push(shortNameKey);\n        this.cstNestedInvocationStateUpdate(nestedRuleName, shortNameKey);\n    };\n    TreeBuilder.prototype.nestedRuleFinallyStateUpdate = function () {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstNestedFinallyStateUpdate();\n    };\n    return TreeBuilder;\n}());\n\n//# sourceMappingURL=tree_builder.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/parse/parser/traits/tree_builder.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/lexer.js":
/*!***********************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/lexer.js ***!
  \***********************************************************/
/*! exports provided: DEFAULT_MODE, MODES, SUPPORT_STICKY, disableSticky, enableSticky, analyzeTokenTypes, validatePatterns, findMissingPatterns, findInvalidPatterns, findEndOfInputAnchor, findEmptyMatchRegExps, findStartOfInputAnchor, findUnsupportedFlags, findDuplicatePatterns, findInvalidGroupType, findModesThatDoNotExist, findUnreachablePatterns, addStartOfInput, addStickyFlag, performRuntimeChecks, performWarningRuntimeChecks, cloneEmptyGroups, isCustomPattern, isShortPattern, LineTerminatorOptimizedTester, buildLineBreakIssueMessage, charCodeToOptimizedIndex */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_MODE\", function() { return DEFAULT_MODE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODES\", function() { return MODES; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SUPPORT_STICKY\", function() { return SUPPORT_STICKY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"disableSticky\", function() { return disableSticky; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"enableSticky\", function() { return enableSticky; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"analyzeTokenTypes\", function() { return analyzeTokenTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validatePatterns\", function() { return validatePatterns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findMissingPatterns\", function() { return findMissingPatterns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findInvalidPatterns\", function() { return findInvalidPatterns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findEndOfInputAnchor\", function() { return findEndOfInputAnchor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findEmptyMatchRegExps\", function() { return findEmptyMatchRegExps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findStartOfInputAnchor\", function() { return findStartOfInputAnchor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findUnsupportedFlags\", function() { return findUnsupportedFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findDuplicatePatterns\", function() { return findDuplicatePatterns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findInvalidGroupType\", function() { return findInvalidGroupType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findModesThatDoNotExist\", function() { return findModesThatDoNotExist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findUnreachablePatterns\", function() { return findUnreachablePatterns; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addStartOfInput\", function() { return addStartOfInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addStickyFlag\", function() { return addStickyFlag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"performRuntimeChecks\", function() { return performRuntimeChecks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"performWarningRuntimeChecks\", function() { return performWarningRuntimeChecks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneEmptyGroups\", function() { return cloneEmptyGroups; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCustomPattern\", function() { return isCustomPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isShortPattern\", function() { return isShortPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LineTerminatorOptimizedTester\", function() { return LineTerminatorOptimizedTester; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"buildLineBreakIssueMessage\", function() { return buildLineBreakIssueMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"charCodeToOptimizedIndex\", function() { return charCodeToOptimizedIndex; });\n/* harmony import */ var regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regexp-to-ast */ \"./node_modules/regexp-to-ast/lib/regexp-to-ast.js\");\n/* harmony import */ var regexp_to_ast__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lexer_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lexer_public */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _reg_exp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reg_exp */ \"./node_modules/chevrotain/lib_esm/src/scan/reg_exp.js\");\n/* harmony import */ var _reg_exp_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reg_exp_parser */ \"./node_modules/chevrotain/lib_esm/src/scan/reg_exp_parser.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\nvar PATTERN = \"PATTERN\";\nvar DEFAULT_MODE = \"defaultMode\";\nvar MODES = \"modes\";\nvar SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nfunction disableSticky() {\n    SUPPORT_STICKY = false;\n}\nfunction enableSticky() {\n    SUPPORT_STICKY = true;\n}\nfunction analyzeTokenTypes(tokenTypes, options) {\n    options = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"defaults\"])(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"]\n    });\n    initCharCodeToOptimizedIndexMap();\n    var onlyRelevantTypes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"reject\"])(tokenTypes, function (currType) {\n        return currType[PATTERN] === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].NA;\n    });\n    var hasCustom = false;\n    var allTransformedPatterns = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (currType) {\n        var currPattern = currType[PATTERN];\n        /* istanbul ignore else */\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(currPattern)) {\n            var regExpSource = currPattern.source;\n            if (regExpSource.length === 1 &&\n                // only these regExp meta characters which can appear in a length one regExp\n                regExpSource !== \"^\" &&\n                regExpSource !== \"$\" &&\n                regExpSource !== \".\") {\n                return regExpSource;\n            }\n            else if (regExpSource.length === 2 &&\n                regExpSource[0] === \"\\\\\" &&\n                // not a meta character\n                !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"contains\"])([\n                    \"d\",\n                    \"D\",\n                    \"s\",\n                    \"S\",\n                    \"t\",\n                    \"r\",\n                    \"n\",\n                    \"t\",\n                    \"0\",\n                    \"c\",\n                    \"b\",\n                    \"B\",\n                    \"f\",\n                    \"v\",\n                    \"w\",\n                    \"W\"\n                ], regExpSource[1])) {\n                // escaped meta Characters: /\\+/ /\\[/\n                // or redundant escaping: /\\a/\n                // without the escaping \"\\\"\n                return regExpSource[1];\n            }\n            else {\n                return options.useSticky\n                    ? addStickyFlag(currPattern)\n                    : addStartOfInput(currPattern);\n            }\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(currPattern)) {\n            hasCustom = true;\n            // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n            return { exec: currPattern };\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(currPattern, \"exec\")) {\n            hasCustom = true;\n            // ICustomPattern\n            return currPattern;\n        }\n        else if (typeof currPattern === \"string\") {\n            if (currPattern.length === 1) {\n                return currPattern;\n            }\n            else {\n                var escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                var wrappedRegExp = new RegExp(escapedRegExpString);\n                return options.useSticky\n                    ? addStickyFlag(wrappedRegExp)\n                    : addStartOfInput(wrappedRegExp);\n            }\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    var patternIdxToType = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (currType) { return currType.tokenTypeIdx; });\n    var patternIdxToGroup = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (clazz) {\n        var groupName = clazz.GROUP;\n        /* istanbul ignore next */\n        if (groupName === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].SKIPPED) {\n            return undefined;\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(groupName)) {\n            return groupName;\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isUndefined\"])(groupName)) {\n            return false;\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    var patternIdxToLongerAltIdx = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (clazz) {\n        var longerAltType = clazz.LONGER_ALT;\n        if (longerAltType) {\n            var longerAltIdx = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"indexOf\"])(onlyRelevantTypes, longerAltType);\n            return longerAltIdx;\n        }\n    });\n    var patternIdxToPushMode = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (clazz) { return clazz.PUSH_MODE; });\n    var patternIdxToPopMode = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (clazz) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(clazz, \"POP_MODE\");\n    });\n    var lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n    var patternIdxToCanLineTerminator = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (tokType) { return false; });\n    if (options.positionTracking !== \"onlyOffset\") {\n        patternIdxToCanLineTerminator = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, function (tokType) {\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(tokType, \"LINE_BREAKS\")) {\n                return tokType.LINE_BREAKS;\n            }\n            else {\n                if (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) ===\n                    false) {\n                    return Object(_reg_exp__WEBPACK_IMPORTED_MODULE_3__[\"canMatchCharCode\"])(lineTerminatorCharCodes, tokType.PATTERN);\n                }\n            }\n        });\n    }\n    var patternIdxToIsCustom = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(onlyRelevantTypes, isCustomPattern);\n    var patternIdxToShort = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(allTransformedPatterns, isShortPattern);\n    var emptyGroups = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"reduce\"])(onlyRelevantTypes, function (acc, clazz) {\n        var groupName = clazz.GROUP;\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(groupName) && !(groupName === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].SKIPPED)) {\n            acc[groupName] = [];\n        }\n        return acc;\n    }, {});\n    var patternIdxToConfig = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(allTransformedPatterns, function (x, idx) {\n        return {\n            pattern: allTransformedPatterns[idx],\n            longerAlt: patternIdxToLongerAltIdx[idx],\n            canLineTerminator: patternIdxToCanLineTerminator[idx],\n            isCustom: patternIdxToIsCustom[idx],\n            short: patternIdxToShort[idx],\n            group: patternIdxToGroup[idx],\n            push: patternIdxToPushMode[idx],\n            pop: patternIdxToPopMode[idx],\n            tokenTypeIdx: patternIdxToType[idx],\n            tokenType: onlyRelevantTypes[idx]\n        };\n    });\n    var canBeOptimized = true;\n    var charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        charCodeToPatternIdxToConfig = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"reduce\"])(onlyRelevantTypes, function (result, currTokType, idx) {\n            if (typeof currTokType.PATTERN === \"string\") {\n                var charCode = currTokType.PATTERN.charCodeAt(0);\n                var optimizedIdx = charCodeToOptimizedIndex(charCode);\n                addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n            }\n            else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isArray\"])(currTokType.START_CHARS_HINT)) {\n                var lastOptimizedIdx_1;\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(currTokType.START_CHARS_HINT, function (charOrInt) {\n                    var charCode = typeof charOrInt === \"string\"\n                        ? charOrInt.charCodeAt(0)\n                        : charOrInt;\n                    var currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                    // Avoid adding the config multiple times\n                    if (lastOptimizedIdx_1 !== currOptimizedIdx) {\n                        lastOptimizedIdx_1 = currOptimizedIdx;\n                        addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                    }\n                });\n            }\n            else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(currTokType.PATTERN)) {\n                if (currTokType.PATTERN.unicode) {\n                    canBeOptimized = false;\n                    if (options.ensureOptimizations) {\n                        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"PRINT_ERROR\"])(\"\" + _reg_exp__WEBPACK_IMPORTED_MODULE_3__[\"failedOptimizationPrefixMsg\"] +\n                            (\"\\tUnable to analyze < \" + currTokType.PATTERN.toString() + \" > pattern.\\n\") +\n                            \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                    }\n                }\n                else {\n                    var optimizedCodes = Object(_reg_exp__WEBPACK_IMPORTED_MODULE_3__[\"getOptimizedStartCodesIndices\"])(currTokType.PATTERN, options.ensureOptimizations);\n                    /* istanbul ignore if */\n                    // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                    // the first should be a different validation and the second cannot be tested.\n                    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(optimizedCodes)) {\n                        // we cannot understand what codes may start possible matches\n                        // The optimization correctness requires knowing start codes for ALL patterns.\n                        // Not actually sure this is an error, no debug message\n                        canBeOptimized = false;\n                    }\n                    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(optimizedCodes, function (code) {\n                        addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        // }\n                    });\n                }\n            }\n            else {\n                if (options.ensureOptimizations) {\n                    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"PRINT_ERROR\"])(\"\" + _reg_exp__WEBPACK_IMPORTED_MODULE_3__[\"failedOptimizationPrefixMsg\"] +\n                        (\"\\tTokenType: <\" + currTokType.name + \"> is using a custom token pattern without providing <start_chars_hint> parameter.\\n\") +\n                        \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                }\n                canBeOptimized = false;\n            }\n            return result;\n        }, []);\n    }\n    charCodeToPatternIdxToConfig = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"packArray\"])(charCodeToPatternIdxToConfig);\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized\n    };\n}\nfunction validatePatterns(tokenTypes, validModesNames) {\n    var errors = [];\n    var missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    var invalidResult = findInvalidPatterns(missingResult.valid);\n    var validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    var errors = [];\n    var withRegExpPatterns = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currTokType) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(currTokType[PATTERN]);\n    });\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nfunction findMissingPatterns(tokenTypes) {\n    var tokenTypesWithMissingPattern = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currType) {\n        return !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(currType, PATTERN);\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(tokenTypesWithMissingPattern, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].MISSING_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    var valid = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"difference\"])(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors: errors, valid: valid };\n}\nfunction findInvalidPatterns(tokenTypes) {\n    var tokenTypesWithInvalidPattern = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(pattern) &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(pattern) &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(pattern, \"exec\") &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(pattern));\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(tokenTypesWithInvalidPattern, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].INVALID_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    var valid = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"difference\"])(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors: errors, valid: valid };\n}\nvar end_of_input = /[^\\\\][\\$]/;\nfunction findEndOfInputAnchor(tokenTypes) {\n    var EndAnchorFinder = /** @class */ (function (_super) {\n        __extends(EndAnchorFinder, _super);\n        function EndAnchorFinder() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.found = false;\n            return _this;\n        }\n        EndAnchorFinder.prototype.visitEndAnchor = function (node) {\n            this.found = true;\n        };\n        return EndAnchorFinder;\n    }(regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__[\"BaseRegExpVisitor\"]));\n    var invalidRegex = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        try {\n            var regexpAst = Object(_reg_exp_parser__WEBPACK_IMPORTED_MODULE_4__[\"getRegExpAst\"])(pattern);\n            var endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(invalidRegex, function (currType) {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].EOI_ANCHOR_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nfunction findEmptyMatchRegExps(tokenTypes) {\n    var matchesEmptyString = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return pattern.test(\"\");\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(matchesEmptyString, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nvar start_of_input = /[^\\\\[][\\^]|^\\^/;\nfunction findStartOfInputAnchor(tokenTypes) {\n    var StartAnchorFinder = /** @class */ (function (_super) {\n        __extends(StartAnchorFinder, _super);\n        function StartAnchorFinder() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.found = false;\n            return _this;\n        }\n        StartAnchorFinder.prototype.visitStartAnchor = function (node) {\n            this.found = true;\n        };\n        return StartAnchorFinder;\n    }(regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__[\"BaseRegExpVisitor\"]));\n    var invalidRegex = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        try {\n            var regexpAst = Object(_reg_exp_parser__WEBPACK_IMPORTED_MODULE_4__[\"getRegExpAst\"])(pattern);\n            var startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(invalidRegex, function (currType) {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].SOI_ANCHOR_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nfunction findUnsupportedFlags(tokenTypes) {\n    var invalidFlags = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (currType) {\n        var pattern = currType[PATTERN];\n        return (pattern instanceof RegExp && (pattern.multiline || pattern.global));\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(invalidFlags, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nfunction findDuplicatePatterns(tokenTypes) {\n    var found = [];\n    var identicalPatterns = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(tokenTypes, function (outerType) {\n        return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"reduce\"])(tokenTypes, function (result, innerType) {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"contains\"])(found, innerType) &&\n                innerType.PATTERN !== _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"compact\"])(identicalPatterns);\n    var duplicatePatterns = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(identicalPatterns, function (currIdenticalSet) {\n        return currIdenticalSet.length > 1;\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(duplicatePatterns, function (setOfIdentical) {\n        var tokenTypeNames = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(setOfIdentical, function (currType) {\n            return currType.name;\n        });\n        var dupPatternSrc = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"first\"])(setOfIdentical).PATTERN;\n        return {\n            message: \"The same RegExp pattern ->\" + dupPatternSrc + \"<-\" +\n                (\"has been used in all of the following Token Types: \" + tokenTypeNames.join(\", \") + \" <-\"),\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical\n        };\n    });\n    return errors;\n}\nfunction findInvalidGroupType(tokenTypes) {\n    var invalidTypes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (clazz) {\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(clazz, \"GROUP\")) {\n            return false;\n        }\n        var group = clazz.GROUP;\n        return group !== _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].SKIPPED && group !== _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].NA && !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(group);\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(invalidTypes, function (currType) {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType]\n        };\n    });\n    return errors;\n}\nfunction findModesThatDoNotExist(tokenTypes, validModes) {\n    var invalidModes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"filter\"])(tokenTypes, function (clazz) {\n        return (clazz.PUSH_MODE !== undefined &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"contains\"])(validModes, clazz.PUSH_MODE));\n    });\n    var errors = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(invalidModes, function (tokType) {\n        var msg = \"Token Type: ->\" + tokType.name + \"<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->\" + tokType.PUSH_MODE + \"<-\" +\n            \"which does not exist\";\n        return {\n            message: msg,\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType]\n        };\n    });\n    return errors;\n}\nfunction findUnreachablePatterns(tokenTypes) {\n    var errors = [];\n    var canBeTested = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"reduce\"])(tokenTypes, function (result, tokType, idx) {\n        var pattern = tokType.PATTERN;\n        if (pattern === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(pattern)) {\n            result.push({ str: pattern, idx: idx, tokenType: tokType });\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx: idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(tokenTypes, function (tokType, testIdx) {\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(canBeTested, function (_a) {\n            var str = _a.str, idx = _a.idx, tokenType = _a.tokenType;\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                var msg = \"Token: ->\" + tokenType.name + \"<- can never be matched.\\n\" +\n                    (\"Because it appears AFTER the Token Type ->\" + tokType.name + \"<-\") +\n                    \"in the lexer's definition.\\n\" +\n                    \"See https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#UNREACHABLE\";\n                errors.push({\n                    message: msg,\n                    type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType]\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(pattern)) {\n        var regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    var metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\"\n    ];\n    return (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"find\"])(metaChars, function (char) { return regExp.source.indexOf(char) !== -1; }) ===\n        undefined);\n}\nfunction addStartOfInput(pattern) {\n    var flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(\"^(?:\" + pattern.source + \")\", flags);\n}\nfunction addStickyFlag(pattern) {\n    var flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(\"\" + pattern.source, flags);\n}\nfunction performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    var errors = [];\n    // some run time checks to help the end users.\n    if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\n        });\n    }\n    if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\n        });\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(lexerDefinition, MODES) &&\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(lexerDefinition, DEFAULT_MODE) &&\n        !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized with a \" + DEFAULT_MODE + \": <\" + lexerDefinition.defaultMode + \">\" +\n                \"which does not exist\\n\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\n        });\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(lexerDefinition, MODES)) {\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(lexerDefinition.modes, function (currModeValue, currModeName) {\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(currModeValue, function (currTokType, currIdx) {\n                if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isUndefined\"])(currTokType)) {\n                    errors.push({\n                        message: \"A Lexer cannot be initialized using an undefined Token Type. Mode:\" +\n                            (\"<\" + currModeName + \"> at index: <\" + currIdx + \">\\n\"),\n                        type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nfunction performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    var warnings = [];\n    var hasAnyLineBreak = false;\n    var allTokenTypes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"compact\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"flatten\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"mapValues\"])(lexerDefinition.modes, function (tokTypes) { return tokTypes; })));\n    var concreteTokenTypes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"reject\"])(allTokenTypes, function (currType) { return currType[PATTERN] === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].NA; });\n    var terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(concreteTokenTypes, function (tokType) {\n            var currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                var message = buildLineBreakIssueMessage(tokType, currIssue);\n                var warningDescriptor = {\n                    message: message,\n                    type: currIssue.issue,\n                    tokenType: tokType\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (Object(_reg_exp__WEBPACK_IMPORTED_MODULE_3__[\"canMatchCharCode\"])(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].NO_LINE_BREAKS_FLAGS\n        });\n    }\n    return warnings;\n}\nfunction cloneEmptyGroups(emptyGroups) {\n    var clonedResult = {};\n    var groupKeys = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"keys\"])(emptyGroups);\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"forEach\"])(groupKeys, function (currKey) {\n        var currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isArray\"])(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nfunction isCustomPattern(tokenType) {\n    var pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(pattern)) {\n        return false;\n    }\n    else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction isShortPattern(pattern) {\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nvar LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        var len = text.length;\n        for (var i = this.lastIndex; i < len; i++) {\n            var c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"has\"])(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isRegExp\"])(tokType.PATTERN)) {\n            try {\n                Object(_reg_exp__WEBPACK_IMPORTED_MODULE_3__[\"canMatchCharCode\"])(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].IDENTIFY_TERMINATOR,\n                    errMsg: e.message\n                };\n            }\n            return false;\n        }\n        else if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nfunction buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            (\"\\tThe problem is in the <\" + tokType.name + \"> Token Type\\n\") +\n            (\"\\t Root cause: \" + details.errMsg + \".\\n\") +\n            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"LexerDefinitionErrorType\"].CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            (\"\\tThe problem is in the <\" + tokType.name + \"> Token Type\\n\") +\n            \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    var charCodes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"map\"])(charsOrCodes, function (numOrString) {\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isString\"])(numOrString) && numOrString.length > 0) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\n/**\n * We ae mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nfunction charCodeToOptimizedIndex(charCode) {\n    return charCode < 256 ? charCode : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nvar charCodeToOptimizedIdxMap = [];\nfunction initCharCodeToOptimizedIndexMap() {\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (var i = 0; i < 65536; i++) {\n            /* tslint:disable */\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n            /* tslint:enable */\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/lexer.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/lexer_errors_public.js":
/*!*************************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/lexer_errors_public.js ***!
  \*************************************************************************/
/*! exports provided: defaultLexerErrorProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultLexerErrorProvider\", function() { return defaultLexerErrorProvider; });\nvar defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage: function (token) {\n        return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n    },\n    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n        return (\"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\"));\n    }\n};\n//# sourceMappingURL=lexer_errors_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/lexer_errors_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js":
/*!******************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js ***!
  \******************************************************************/
/*! exports provided: LexerDefinitionErrorType, Lexer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LexerDefinitionErrorType\", function() { return LexerDefinitionErrorType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Lexer\", function() { return Lexer; });\n/* harmony import */ var _lexer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lexer */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _tokens__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tokens */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens.js\");\n/* harmony import */ var _scan_lexer_errors_public__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scan/lexer_errors_public */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer_errors_public.js\");\n/* harmony import */ var _reg_exp_parser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reg_exp_parser */ \"./node_modules/chevrotain/lib_esm/src/scan/reg_exp_parser.js\");\n\n\n\n\n\nvar LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nvar DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: _scan_lexer_errors_public__WEBPACK_IMPORTED_MODULE_3__[\"defaultLexerErrorProvider\"]\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nvar Lexer = /** @class */ (function () {\n    function Lexer(lexerDefinition, config) {\n        var _this = this;\n        if (config === void 0) { config = DEFAULT_LEXER_CONFIG; }\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.config = undefined;\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"merge\"])(DEFAULT_LEXER_CONFIG, config);\n        if (this.config.lineTerminatorsPattern ===\n            DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n            // optimized built-in implementation for the defaults definition of lineTerminators\n            this.config.lineTerminatorsPattern = _lexer__WEBPACK_IMPORTED_MODULE_0__[\"LineTerminatorOptimizedTester\"];\n        }\n        else {\n            if (this.config.lineTerminatorCharacters ===\n                DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                    \"\\tFor details See: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n            }\n        }\n        if (config.safeMode && config.ensureOptimizations) {\n            throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n        }\n        this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n        this.trackEndLines = /full/i.test(this.config.positionTracking);\n        var hasOnlySingleMode = true;\n        var actualDefinition;\n        // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(lexerDefinition)) {\n            actualDefinition = { modes: {} };\n            actualDefinition.modes[_lexer__WEBPACK_IMPORTED_MODULE_0__[\"DEFAULT_MODE\"]] = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneArr\"])((lexerDefinition));\n            actualDefinition[_lexer__WEBPACK_IMPORTED_MODULE_0__[\"DEFAULT_MODE\"]] = _lexer__WEBPACK_IMPORTED_MODULE_0__[\"DEFAULT_MODE\"];\n        }\n        else {\n            // no conversion needed, input should already be a IMultiModeLexerDefinition\n            hasOnlySingleMode = false;\n            actualDefinition = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"cloneObj\"])((lexerDefinition));\n        }\n        this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(Object(_lexer__WEBPACK_IMPORTED_MODULE_0__[\"performRuntimeChecks\"])(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n        this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(Object(_lexer__WEBPACK_IMPORTED_MODULE_0__[\"performWarningRuntimeChecks\"])(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n        // for extra robustness to avoid throwing an none informative error message\n        actualDefinition.modes = actualDefinition.modes\n            ? actualDefinition.modes\n            : {};\n        // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n        // this transformation is to increase robustness in the case of partially invalid lexer definition.\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(actualDefinition.modes, function (currModeValue, currModeName) {\n            actualDefinition.modes[currModeName] = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"reject\"])(currModeValue, function (currTokType) { return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isUndefined\"])(currTokType); });\n        });\n        var allModeNames = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"keys\"])(actualDefinition.modes);\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(actualDefinition.modes, function (currModDef, currModName) {\n            _this.modes.push(currModName);\n            _this.lexerDefinitionErrors = _this.lexerDefinitionErrors.concat(Object(_lexer__WEBPACK_IMPORTED_MODULE_0__[\"validatePatterns\"])(currModDef, allModeNames));\n            // If definition errors were encountered, the analysis phase may fail unexpectedly/\n            // Considering a lexer with definition errors may never be used, there is no point\n            // to performing the analysis anyhow...\n            if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(_this.lexerDefinitionErrors)) {\n                Object(_tokens__WEBPACK_IMPORTED_MODULE_2__[\"augmentTokenTypes\"])(currModDef);\n                var currAnalyzeResult = Object(_lexer__WEBPACK_IMPORTED_MODULE_0__[\"analyzeTokenTypes\"])(currModDef, {\n                    lineTerminatorCharacters: _this.config\n                        .lineTerminatorCharacters,\n                    positionTracking: config.positionTracking,\n                    ensureOptimizations: config.ensureOptimizations,\n                    safeMode: config.safeMode\n                });\n                _this.patternIdxToConfig[currModName] =\n                    currAnalyzeResult.patternIdxToConfig;\n                _this.charCodeToPatternIdxToConfig[currModName] =\n                    currAnalyzeResult.charCodeToPatternIdxToConfig;\n                _this.emptyGroups = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"merge\"])(_this.emptyGroups, currAnalyzeResult.emptyGroups);\n                _this.hasCustom =\n                    currAnalyzeResult.hasCustom || _this.hasCustom;\n                _this.canModeBeOptimized[currModName] =\n                    currAnalyzeResult.canBeOptimized;\n            }\n        });\n        this.defaultMode = actualDefinition.defaultMode;\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(this.lexerDefinitionErrors) &&\n            !this.config.deferDefinitionErrorsHandling) {\n            var allErrMessages = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.lexerDefinitionErrors, function (error) {\n                return error.message;\n            });\n            var allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        // Only print warning if there are no errors, This will avoid pl\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(this.lexerDefinitionWarning, function (warningDescriptor) {\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"PRINT_WARNING\"])(warningDescriptor.message);\n        });\n        // Choose the relevant internal implementations for this specific parser.\n        // These implementations should be in-lined by the JavaScript engine\n        // to provide optimal performance in each scenario.\n        if (_lexer__WEBPACK_IMPORTED_MODULE_0__[\"SUPPORT_STICKY\"]) {\n            this.chopInput = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"IDENTITY\"];\n            this.match = this.matchWithTest;\n        }\n        else {\n            this.updateLastIndex = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n            this.match = this.matchWithExec;\n        }\n        if (hasOnlySingleMode) {\n            this.handleModes = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n        }\n        if (this.trackStartLines === false) {\n            this.computeNewColumn = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"IDENTITY\"];\n        }\n        if (this.trackEndLines === false) {\n            this.updateTokenEndLineColumnLocation = _utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"NOOP\"];\n        }\n        if (/full/i.test(this.config.positionTracking)) {\n            this.createTokenInstance = this.createFullToken;\n        }\n        else if (/onlyStart/i.test(this.config.positionTracking)) {\n            this.createTokenInstance = this.createStartOnlyToken;\n        }\n        else if (/onlyOffset/i.test(this.config.positionTracking)) {\n            this.createTokenInstance = this.createOffsetOnlyToken;\n        }\n        else {\n            throw Error(\"Invalid <positionTracking> config option: \\\"\" + this.config.positionTracking + \"\\\"\");\n        }\n        if (this.hasCustom) {\n            this.addToken = this.addTokenUsingPush;\n            this.handlePayload = this.handlePayloadWithCustom;\n        }\n        else {\n            this.addToken = this.addTokenUsingMemberAccess;\n            this.handlePayload = this.handlePayloadNoCustom;\n        }\n        var unOptimizedModes = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"reduce\"])(this.canModeBeOptimized, function (cannotBeOptimized, canBeOptimized, modeName) {\n            if (canBeOptimized === false) {\n                cannotBeOptimized.push(modeName);\n            }\n            return cannotBeOptimized;\n        }, []);\n        if (config.ensureOptimizations && !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(unOptimizedModes)) {\n            throw Error(\"Lexer Modes: < \" + unOptimizedModes.join(\", \") + \" > cannot be optimized.\\n\" +\n                '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                \"\\t Or inspect the console log for details on how to resolve these issues.\");\n        }\n        Object(_reg_exp_parser__WEBPACK_IMPORTED_MODULE_4__[\"clearRegExpParserCache\"])();\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"toFastProperties\"])(this);\n    }\n    Lexer.prototype.tokenize = function (text, initialMode) {\n        if (initialMode === void 0) { initialMode = this.defaultMode; }\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(this.lexerDefinitionErrors)) {\n            var allErrMessages = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"map\"])(this.lexerDefinitionErrors, function (error) {\n                return error.message;\n            });\n            var allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        var lexResult = this.tokenizeInternal(text, initialMode);\n        return lexResult;\n    };\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    Lexer.prototype.tokenizeInternal = function (text, initialMode) {\n        var _this = this;\n        var i, j, matchAltImage, longerAltIdx, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        var orgText = text;\n        var orgLength = orgText.length;\n        var offset = 0;\n        var matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        var guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        var matchedTokens = new Array(guessedNumberOfTokens);\n        var errors = [];\n        var line = this.trackStartLines ? 1 : undefined;\n        var column = this.trackStartLines ? 1 : undefined;\n        var groups = Object(_lexer__WEBPACK_IMPORTED_MODULE_0__[\"cloneEmptyGroups\"])(this.emptyGroups);\n        var trackLines = this.trackStartLines;\n        var lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        var currModePatternsLength = 0;\n        var patternIdxToConfig = [];\n        var currCharCodeToPatternIdxToConfig = [];\n        var modeStack = [];\n        var emptyArray = [];\n        Object.freeze(emptyArray);\n        var getPossiblePatterns = undefined;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            var optimizedCharIdx = Object(_lexer__WEBPACK_IMPORTED_MODULE_0__[\"charCodeToOptimizedIndex\"])(charCode);\n            var possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        var pop_mode = function (popToken) {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                var msg_1 = _this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine !== undefined\n                        ? popToken.startLine\n                        : undefined,\n                    column: popToken.startColumn !== undefined\n                        ? popToken.startColumn\n                        : undefined,\n                    length: popToken.image.length,\n                    message: msg_1\n                });\n            }\n            else {\n                modeStack.pop();\n                var newMode = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"last\"])(modeStack);\n                patternIdxToConfig = _this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig = _this\n                    .charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                var modeCanBeOptimized = _this.canModeBeOptimized[newMode] &&\n                    _this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig = this\n                .charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            var modeCanBeOptimized = this.canModeBeOptimized[newMode] &&\n                this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        var currConfig;\n        while (offset < orgLength) {\n            matchedImage = null;\n            var nextCharCode = orgText.charCodeAt(offset);\n            var chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            var chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                var currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                var singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAltIdx = currConfig.longerAlt;\n                    if (longerAltIdx !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        var longerAltConfig = patternIdxToConfig[longerAltIdx];\n                        var longerAltPattern = longerAltConfig.pattern;\n                        altPayload = null;\n                        // single Char can never be a longer alt so no need to test it.\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        if (longerAltConfig.isCustom === true) {\n                            match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                            if (match !== null) {\n                                matchAltImage = match[0];\n                                if (match.payload !== undefined) {\n                                    altPayload = match.payload;\n                                }\n                            }\n                            else {\n                                matchAltImage = null;\n                            }\n                        }\n                        else {\n                            this.updateLastIndex(longerAltPattern, offset);\n                            matchAltImage = this.match(longerAltPattern, text, offset);\n                        }\n                        if (matchAltImage &&\n                            matchAltImage.length > matchedImage.length) {\n                            matchedImage = matchAltImage;\n                            payload = altPayload;\n                            currConfig = longerAltConfig;\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true &&\n                    currConfig.canLineTerminator === true) {\n                    var numOfLTsInMatch = 0;\n                    var foundTerminator = void 0;\n                    var lastLTEndOffset = void 0;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset =\n                                lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                var errorStartOffset = offset;\n                var errorLine = line;\n                var errorColumn = column;\n                var foundResyncPoint = false;\n                while (!foundResyncPoint && offset < orgLength) {\n                    // drop chars until we succeed in matching something\n                    droppedChar = orgText.charCodeAt(offset);\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        var currConfig_1 = patternIdxToConfig[j];\n                        var currPattern = currConfig_1.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        var singleCharCode = currConfig_1.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig_1.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg\n                });\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors\n        };\n    };\n    Lexer.prototype.handleModes = function (config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            var pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    };\n    Lexer.prototype.chopInput = function (text, length) {\n        return text.substring(length);\n    };\n    Lexer.prototype.updateLastIndex = function (regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    };\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    Lexer.prototype.updateTokenEndLineColumnLocation = function (newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        var lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    };\n    Lexer.prototype.computeNewColumn = function (oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    };\n    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.createTokenInstance = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return null;\n    };\n    Lexer.prototype.createOffsetOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    Lexer.prototype.createStartOnlyToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            startLine: startLine,\n            startColumn: startColumn,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    Lexer.prototype.createFullToken = function (image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image: image,\n            startOffset: startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine: startLine,\n            endLine: startLine,\n            startColumn: startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx: tokenTypeIdx,\n            tokenType: tokenType\n        };\n    };\n    // Place holder, will be replaced by the correct variant according to the locationTracking option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.addToken = function (tokenVector, index, tokenToAdd) {\n        return 666;\n    };\n    Lexer.prototype.addTokenUsingPush = function (tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    };\n    Lexer.prototype.addTokenUsingMemberAccess = function (tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    };\n    // Place holder, will be replaced by the correct variant according to the hasCustom flag option at runtime.\n    /* istanbul ignore next - place holder */\n    Lexer.prototype.handlePayload = function (token, payload) { };\n    Lexer.prototype.handlePayloadNoCustom = function (token, payload) { };\n    Lexer.prototype.handlePayloadWithCustom = function (token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    };\n    /* istanbul ignore next - place holder to be replaced with chosen alternative at runtime */\n    Lexer.prototype.match = function (pattern, text, offset) {\n        return null;\n    };\n    Lexer.prototype.matchWithTest = function (pattern, text, offset) {\n        var found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    };\n    Lexer.prototype.matchWithExec = function (pattern, text) {\n        var regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : regExpArray;\n    };\n    Lexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n        \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\n    Lexer.NA = /NOT_APPLICABLE/;\n    return Lexer;\n}());\n\n//# sourceMappingURL=lexer_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/reg_exp.js":
/*!*************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/reg_exp.js ***!
  \*************************************************************/
/*! exports provided: failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, firstCharOptimizedIndices, canMatchCharCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"failedOptimizationPrefixMsg\", function() { return failedOptimizationPrefixMsg; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOptimizedStartCodesIndices\", function() { return getOptimizedStartCodesIndices; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstCharOptimizedIndices\", function() { return firstCharOptimizedIndices; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canMatchCharCode\", function() { return canMatchCharCode; });\n/* harmony import */ var regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regexp-to-ast */ \"./node_modules/regexp-to-ast/lib/regexp-to-ast.js\");\n/* harmony import */ var regexp_to_ast__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _reg_exp_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reg_exp_parser */ \"./node_modules/chevrotain/lib_esm/src/scan/reg_exp_parser.js\");\n/* harmony import */ var _lexer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lexer */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nvar failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nfunction getOptimizedStartCodesIndices(regExp, ensureOptimizations) {\n    if (ensureOptimizations === void 0) { ensureOptimizations = false; }\n    try {\n        var ast = Object(_reg_exp_parser__WEBPACK_IMPORTED_MODULE_2__[\"getRegExpAst\"])(regExp);\n        var firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"PRINT_WARNING\"])(\"\" + failedOptimizationPrefixMsg +\n                    (\"\\tUnable to optimize: < \" + regExp.toString() + \" >\\n\") +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            var msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://sap.github.io/chevrotain/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"PRINT_ERROR\"])(failedOptimizationPrefixMsg + \"\\n\" +\n                (\"\\tFailed parsing: < \" + regExp.toString() + \" >\\n\") +\n                (\"\\tUsing the regexp-to-ast library version: \" + regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__[\"VERSION\"] + \"\\n\") +\n                \"\\tPlease open an issue at: https://github.com/bd82/regexp-to-ast/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nfunction firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(ast.value, function (subAst) {\n                return firstCharOptimizedIndices(subAst, result, ignoreCase);\n            });\n            break;\n        case \"Alternative\":\n            var terms = ast.value;\n            for (var i = 0; i < terms.length; i++) {\n                var term = terms[i];\n                if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])([\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    \"GroupBackReference\",\n                    // assertions do not affect potential starting codes\n                    \"Lookahead\",\n                    \"NegativeLookahead\",\n                    \"StartAnchor\",\n                    \"EndAnchor\",\n                    \"WordBoundary\",\n                    \"NonWordBoundary\"\n                ], term.type)) {\n                    continue;\n                }\n                var atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"forEach\"])(atom.value, function (code) {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                var range = code;\n                                for (var rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                    // TODO: this could potentially be optimized\n                                    //       to traverse the range in jumps the size of the optimizedIndices buckets\n                                    //       However there are too many edge cases for such an optimization...\n                                    //       and it needs a grammar to have **many** different tokens\n                                    //       starting with **very wide** range of charCodes\n                                    //       in order to gain a **small** benefit during initialization...\n                                    //       Also the init time boost could also be accomplished directly by the end user\n                                    //       By providing the startCharHints, so handling it is not worth it.\n                                    addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                var isOptionalQuantifier = atom.quantifier !== undefined &&\n                    atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" &&\n                    isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"values\"])(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    var optimizedCharIdx = Object(_lexer__WEBPACK_IMPORTED_MODULE_3__[\"charCodeToOptimizedIndex\"])(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    var char = String.fromCharCode(code);\n    var upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        var optimizedCharIdx = Object(_lexer__WEBPACK_IMPORTED_MODULE_3__[\"charCodeToOptimizedIndex\"])(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        var lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            var optimizedCharIdx = Object(_lexer__WEBPACK_IMPORTED_MODULE_3__[\"charCodeToOptimizedIndex\"])(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"find\"])(setNode.value, function (codeOrRange) {\n        if (typeof codeOrRange === \"number\") {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            var range_1 = codeOrRange;\n            return (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"find\"])(targetCharCodes, function (targetCode) {\n                return range_1.from <= targetCode && targetCode <= range_1.to;\n            }) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    if (ast.quantifier && ast.quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(ast.value)\n        ? Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"every\"])(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nvar CharCodeFinder = /** @class */ (function (_super) {\n    __extends(CharCodeFinder, _super);\n    function CharCodeFinder(targetCharCodes) {\n        var _this = _super.call(this) || this;\n        _this.targetCharCodes = targetCharCodes;\n        _this.found = false;\n        return _this;\n    }\n    CharCodeFinder.prototype.visitChildren = function (node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        _super.prototype.visitChildren.call(this, node);\n    };\n    CharCodeFinder.prototype.visitCharacter = function (node) {\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    };\n    CharCodeFinder.prototype.visitSet = function (node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    };\n    return CharCodeFinder;\n}(regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__[\"BaseRegExpVisitor\"]));\nfunction canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        var ast = Object(_reg_exp_parser__WEBPACK_IMPORTED_MODULE_2__[\"getRegExpAst\"])(pattern);\n        var charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"find\"])(pattern, function (char) {\n            return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_1__[\"contains\"])(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/reg_exp.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/reg_exp_parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/reg_exp_parser.js ***!
  \********************************************************************/
/*! exports provided: getRegExpAst, clearRegExpParserCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getRegExpAst\", function() { return getRegExpAst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearRegExpParserCache\", function() { return clearRegExpParserCache; });\n/* harmony import */ var regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regexp-to-ast */ \"./node_modules/regexp-to-ast/lib/regexp-to-ast.js\");\n/* harmony import */ var regexp_to_ast__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__);\n\nvar regExpAstCache = {};\nvar regExpParser = new regexp_to_ast__WEBPACK_IMPORTED_MODULE_0__[\"RegExpParser\"]();\nfunction getRegExpAst(regExp) {\n    var regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        var regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nfunction clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/reg_exp_parser.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/tokens.js":
/*!************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/tokens.js ***!
  \************************************************************/
/*! exports provided: tokenStructuredMatcher, tokenStructuredMatcherNoCategories, tokenShortNameIdx, tokenIdxToClass, augmentTokenTypes, expandCategories, assignTokenDefaultProps, assignCategoriesTokensProp, assignCategoriesMapProp, singleAssignCategoriesToksMap, hasShortKeyProperty, hasCategoriesProperty, hasExtendingTokensTypesProperty, hasExtendingTokensTypesMapProperty, isTokenType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenStructuredMatcher\", function() { return tokenStructuredMatcher; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenStructuredMatcherNoCategories\", function() { return tokenStructuredMatcherNoCategories; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenShortNameIdx\", function() { return tokenShortNameIdx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenIdxToClass\", function() { return tokenIdxToClass; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"augmentTokenTypes\", function() { return augmentTokenTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"expandCategories\", function() { return expandCategories; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignTokenDefaultProps\", function() { return assignTokenDefaultProps; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignCategoriesTokensProp\", function() { return assignCategoriesTokensProp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignCategoriesMapProp\", function() { return assignCategoriesMapProp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"singleAssignCategoriesToksMap\", function() { return singleAssignCategoriesToksMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasShortKeyProperty\", function() { return hasShortKeyProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasCategoriesProperty\", function() { return hasCategoriesProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasExtendingTokensTypesProperty\", function() { return hasExtendingTokensTypesProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasExtendingTokensTypesMapProperty\", function() { return hasExtendingTokensTypesMapProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isTokenType\", function() { return isTokenType; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n\nfunction tokenStructuredMatcher(tokInstance, tokConstructor) {\n    var instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nfunction tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nvar tokenShortNameIdx = 1;\nvar tokenIdxToClass = {};\nfunction augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    var tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(tokenTypesAndParents, function (tokType) {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nfunction expandCategories(tokenTypes) {\n    var result = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"cloneArr\"])(tokenTypes);\n    var categories = tokenTypes;\n    var searching = true;\n    while (searching) {\n        categories = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"compact\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"flatten\"])(Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"map\"])(categories, function (currTokType) { return currTokType.CATEGORIES; })));\n        var newCategories = Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"difference\"])(categories, result);\n        result = result.concat(newCategories);\n        if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isEmpty\"])(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nfunction assignTokenDefaultProps(tokenTypes) {\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(tokenTypes, function (currTokType) {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isArray\"])(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nfunction assignCategoriesTokensProp(tokenTypes) {\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(tokenTypes, function (currTokType) {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(currTokType.categoryMatchesMap, function (val, key) {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nfunction assignCategoriesMapProp(tokenTypes) {\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(tokenTypes, function (currTokType) {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nfunction singleAssignCategoriesToksMap(path, nextNode) {\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(path, function (pathNode) {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"forEach\"])(nextNode.CATEGORIES, function (nextCategory) {\n        var newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"contains\"])(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nfunction hasShortKeyProperty(tokType) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(tokType, \"tokenTypeIdx\");\n}\nfunction hasCategoriesProperty(tokType) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(tokType, \"CATEGORIES\");\n}\nfunction hasExtendingTokensTypesProperty(tokType) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(tokType, \"categoryMatches\");\n}\nfunction hasExtendingTokensTypesMapProperty(tokType) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(tokType, \"categoryMatchesMap\");\n}\nfunction isTokenType(tokType) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/tokens.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js":
/*!*******************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js ***!
  \*******************************************************************/
/*! exports provided: tokenLabel, tokenName, hasTokenLabel, createToken, EOF, createTokenInstance, tokenMatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenLabel\", function() { return tokenLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenName\", function() { return tokenName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasTokenLabel\", function() { return hasTokenLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createToken\", function() { return createToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EOF\", function() { return EOF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createTokenInstance\", function() { return createTokenInstance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tokenMatcher\", function() { return tokenMatcher; });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/utils */ \"./node_modules/chevrotain/lib_esm/src/utils/utils.js\");\n/* harmony import */ var _lexer_public__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lexer_public */ \"./node_modules/chevrotain/lib_esm/src/scan/lexer_public.js\");\n/* harmony import */ var _tokens__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tokens */ \"./node_modules/chevrotain/lib_esm/src/scan/tokens.js\");\n\n\n\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nfunction tokenName(tokType) {\n    return tokType.name;\n}\nfunction hasTokenLabel(obj) {\n    return Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isString\"])(obj.LABEL) && obj.LABEL !== \"\";\n}\nvar PARENT = \"parent\";\nvar CATEGORIES = \"categories\";\nvar LABEL = \"label\";\nvar GROUP = \"group\";\nvar PUSH_MODE = \"push_mode\";\nvar POP_MODE = \"pop_mode\";\nvar LONGER_ALT = \"longer_alt\";\nvar LINE_BREAKS = \"line_breaks\";\nvar START_CHARS_HINT = \"start_chars_hint\";\nfunction createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    var pattern = config.pattern;\n    var tokenType = {};\n    tokenType.name = config.name;\n    if (!Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"isUndefined\"])(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, PARENT)) {\n        throw \"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/SAP/chevrotain/issues/564#issuecomment-349062346 for details.\";\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    Object(_tokens__WEBPACK_IMPORTED_MODULE_2__[\"augmentTokenTypes\"])([tokenType]);\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (Object(_utils_utils__WEBPACK_IMPORTED_MODULE_0__[\"has\"])(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nvar EOF = createToken({ name: \"EOF\", pattern: _lexer_public__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"].NA });\nObject(_tokens__WEBPACK_IMPORTED_MODULE_2__[\"augmentTokenTypes\"])([EOF]);\nfunction createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image: image,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        startLine: startLine,\n        endLine: endLine,\n        startColumn: startColumn,\n        endColumn: endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType\n    };\n}\nfunction tokenMatcher(token, tokType) {\n    return Object(_tokens__WEBPACK_IMPORTED_MODULE_2__[\"tokenStructuredMatcher\"])(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/scan/tokens_public.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/utils/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/utils/utils.js ***!
  \************************************************************/
/*! exports provided: isEmpty, keys, values, mapValues, map, flatten, first, last, forEach, isString, isUndefined, isFunction, drop, dropRight, filter, reject, pick, has, contains, cloneArr, cloneObj, find, findAll, reduce, compact, uniq, partial, isArray, isRegExp, isObject, every, difference, some, indexOf, sortBy, zipObject, assign, assignNoOverwrite, defaults, groupBy, merge, NOOP, IDENTITY, packArray, PRINT_ERROR, PRINT_WARNING, isES2015MapSupported, applyMixins, toFastProperties, peek, timer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"keys\", function() { return keys; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapValues\", function() { return mapValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"map\", function() { return map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return first; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"last\", function() { return last; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"forEach\", function() { return forEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"drop\", function() { return drop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dropRight\", function() { return dropRight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filter\", function() { return filter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reject\", function() { return reject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pick\", function() { return pick; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return has; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contains\", function() { return contains; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneArr\", function() { return cloneArr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cloneObj\", function() { return cloneObj; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find\", function() { return find; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findAll\", function() { return findAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reduce\", function() { return reduce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compact\", function() { return compact; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uniq\", function() { return uniq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"partial\", function() { return partial; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isRegExp\", function() { return isRegExp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"every\", function() { return every; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"difference\", function() { return difference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"some\", function() { return some; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"indexOf\", function() { return indexOf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sortBy\", function() { return sortBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zipObject\", function() { return zipObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assign\", function() { return assign; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assignNoOverwrite\", function() { return assignNoOverwrite; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaults\", function() { return defaults; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"groupBy\", function() { return groupBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return merge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NOOP\", function() { return NOOP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IDENTITY\", function() { return IDENTITY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"packArray\", function() { return packArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRINT_ERROR\", function() { return PRINT_ERROR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PRINT_WARNING\", function() { return PRINT_WARNING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isES2015MapSupported\", function() { return isES2015MapSupported; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"applyMixins\", function() { return applyMixins; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toFastProperties\", function() { return toFastProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"peek\", function() { return peek; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"timer\", function() { return timer; });\n/*\n Utils using lodash style API. (not necessarily 100% compliant) for functional and other utils.\n These utils should replace usage of lodash in the production code base. not because they are any better...\n but for the purpose of being a dependency free library.\n\n The hotspots in the code are already written in imperative style for performance reasons.\n so writing several dozen utils which may be slower than the original lodash, does not matter as much\n considering they will not be invoked in hotspots...\n */\nfunction isEmpty(arr) {\n    return arr && arr.length === 0;\n}\nfunction keys(obj) {\n    if (obj === undefined || obj === null) {\n        return [];\n    }\n    return Object.keys(obj);\n}\nfunction values(obj) {\n    var vals = [];\n    var keys = Object.keys(obj);\n    for (var i = 0; i < keys.length; i++) {\n        vals.push(obj[keys[i]]);\n    }\n    return vals;\n}\nfunction mapValues(obj, callback) {\n    var result = [];\n    var objKeys = keys(obj);\n    for (var idx = 0; idx < objKeys.length; idx++) {\n        var currKey = objKeys[idx];\n        result.push(callback.call(null, obj[currKey], currKey));\n    }\n    return result;\n}\nfunction map(arr, callback) {\n    var result = [];\n    for (var idx = 0; idx < arr.length; idx++) {\n        result.push(callback.call(null, arr[idx], idx));\n    }\n    return result;\n}\nfunction flatten(arr) {\n    var result = [];\n    for (var idx = 0; idx < arr.length; idx++) {\n        var currItem = arr[idx];\n        if (Array.isArray(currItem)) {\n            result = result.concat(flatten(currItem));\n        }\n        else {\n            result.push(currItem);\n        }\n    }\n    return result;\n}\nfunction first(arr) {\n    return isEmpty(arr) ? undefined : arr[0];\n}\nfunction last(arr) {\n    var len = arr && arr.length;\n    return len ? arr[len - 1] : undefined;\n}\nfunction forEach(collection, iteratorCallback) {\n    /* istanbul ignore else */\n    if (Array.isArray(collection)) {\n        for (var i = 0; i < collection.length; i++) {\n            iteratorCallback.call(null, collection[i], i);\n        }\n    }\n    else if (isObject(collection)) {\n        var colKeys = keys(collection);\n        for (var i = 0; i < colKeys.length; i++) {\n            var key = colKeys[i];\n            var value = collection[key];\n            iteratorCallback.call(null, value, key);\n        }\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction isString(item) {\n    return typeof item === \"string\";\n}\nfunction isUndefined(item) {\n    return item === undefined;\n}\nfunction isFunction(item) {\n    return item instanceof Function;\n}\nfunction drop(arr, howMuch) {\n    if (howMuch === void 0) { howMuch = 1; }\n    return arr.slice(howMuch, arr.length);\n}\nfunction dropRight(arr, howMuch) {\n    if (howMuch === void 0) { howMuch = 1; }\n    return arr.slice(0, arr.length - howMuch);\n}\nfunction filter(arr, predicate) {\n    var result = [];\n    if (Array.isArray(arr)) {\n        for (var i = 0; i < arr.length; i++) {\n            var item = arr[i];\n            if (predicate.call(null, item)) {\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\nfunction reject(arr, predicate) {\n    return filter(arr, function (item) { return !predicate(item); });\n}\nfunction pick(obj, predicate) {\n    var keys = Object.keys(obj);\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        var currKey = keys[i];\n        var currItem = obj[currKey];\n        if (predicate(currItem)) {\n            result[currKey] = currItem;\n        }\n    }\n    return result;\n}\nfunction has(obj, prop) {\n    if (isObject(obj)) {\n        return obj.hasOwnProperty(prop);\n    }\n    return false;\n}\nfunction contains(arr, item) {\n    return find(arr, function (currItem) { return currItem === item; }) !== undefined ? true : false;\n}\n/**\n * shallow clone\n */\nfunction cloneArr(arr) {\n    var newArr = [];\n    for (var i = 0; i < arr.length; i++) {\n        newArr.push(arr[i]);\n    }\n    return newArr;\n}\n/**\n * shallow clone\n */\nfunction cloneObj(obj) {\n    var clonedObj = {};\n    for (var key in obj) {\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            clonedObj[key] = obj[key];\n        }\n    }\n    return clonedObj;\n}\nfunction find(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        if (predicate.call(null, item)) {\n            return item;\n        }\n    }\n    return undefined;\n}\nfunction findAll(arr, predicate) {\n    var found = [];\n    for (var i = 0; i < arr.length; i++) {\n        var item = arr[i];\n        if (predicate.call(null, item)) {\n            found.push(item);\n        }\n    }\n    return found;\n}\nfunction reduce(arrOrObj, iterator, initial) {\n    var isArr = Array.isArray(arrOrObj);\n    var vals = isArr ? arrOrObj : values(arrOrObj);\n    var objKeys = isArr ? [] : keys(arrOrObj);\n    var accumulator = initial;\n    for (var i = 0; i < vals.length; i++) {\n        accumulator = iterator.call(null, accumulator, vals[i], isArr ? i : objKeys[i]);\n    }\n    return accumulator;\n}\nfunction compact(arr) {\n    return reject(arr, function (item) { return item === null || item === undefined; });\n}\nfunction uniq(arr, identity) {\n    if (identity === void 0) { identity = function (item) { return item; }; }\n    var identities = [];\n    return reduce(arr, function (result, currItem) {\n        var currIdentity = identity(currItem);\n        if (contains(identities, currIdentity)) {\n            return result;\n        }\n        else {\n            identities.push(currIdentity);\n            return result.concat(currItem);\n        }\n    }, []);\n}\nfunction partial(func) {\n    var restArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        restArgs[_i - 1] = arguments[_i];\n    }\n    var firstArg = [null];\n    var allArgs = firstArg.concat(restArgs);\n    return Function.bind.apply(func, allArgs);\n}\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nfunction isRegExp(obj) {\n    return obj instanceof RegExp;\n}\nfunction isObject(obj) {\n    return obj instanceof Object;\n}\nfunction every(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        if (!predicate(arr[i], i)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction difference(arr, values) {\n    return reject(arr, function (item) { return contains(values, item); });\n}\nfunction some(arr, predicate) {\n    for (var i = 0; i < arr.length; i++) {\n        if (predicate(arr[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction indexOf(arr, value) {\n    for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction sortBy(arr, orderFunc) {\n    var result = cloneArr(arr);\n    result.sort(function (a, b) { return orderFunc(a) - orderFunc(b); });\n    return result;\n}\nfunction zipObject(keys, values) {\n    if (keys.length !== values.length) {\n        throw Error(\"can't zipObject with different number of keys and values!\");\n    }\n    var result = {};\n    for (var i = 0; i < keys.length; i++) {\n        result[keys[i]] = values[i];\n    }\n    return result;\n}\n/**\n * mutates! (and returns) target\n */\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var curSource = sources[i];\n        var currSourceKeys = keys(curSource);\n        for (var j = 0; j < currSourceKeys.length; j++) {\n            var currKey = currSourceKeys[j];\n            target[currKey] = curSource[currKey];\n        }\n    }\n    return target;\n}\n/**\n * mutates! (and returns) target\n */\nfunction assignNoOverwrite(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i++) {\n        var curSource = sources[i];\n        if (isUndefined(curSource)) {\n            continue;\n        }\n        var currSourceKeys = keys(curSource);\n        for (var j = 0; j < currSourceKeys.length; j++) {\n            var currKey = currSourceKeys[j];\n            if (!has(target, currKey)) {\n                target[currKey] = curSource[currKey];\n            }\n        }\n    }\n    return target;\n}\nfunction defaults() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return assignNoOverwrite.apply(null, [{}].concat(sources));\n}\nfunction groupBy(arr, groupKeyFunc) {\n    var result = {};\n    forEach(arr, function (item) {\n        var currGroupKey = groupKeyFunc(item);\n        var currGroupArr = result[currGroupKey];\n        if (currGroupArr) {\n            currGroupArr.push(item);\n        }\n        else {\n            result[currGroupKey] = [item];\n        }\n    });\n    return result;\n}\n/**\n * Merge obj2 into obj1.\n * Will overwrite existing properties with the same name\n */\nfunction merge(obj1, obj2) {\n    var result = cloneObj(obj1);\n    var keys2 = keys(obj2);\n    for (var i = 0; i < keys2.length; i++) {\n        var key = keys2[i];\n        var value = obj2[key];\n        result[key] = value;\n    }\n    return result;\n}\nfunction NOOP() { }\nfunction IDENTITY(item) {\n    return item;\n}\n/**\n * Will return a new packed array with same values.\n */\nfunction packArray(holeyArr) {\n    var result = [];\n    for (var i = 0; i < holeyArr.length; i++) {\n        var orgValue = holeyArr[i];\n        result.push(orgValue !== undefined ? orgValue : undefined);\n    }\n    return result;\n}\nfunction PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(\"Error: \" + msg);\n    }\n}\nfunction PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(\"Warning: \" + msg);\n    }\n}\nfunction isES2015MapSupported() {\n    return typeof Map === \"function\";\n}\nfunction applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach(function (baseCtor) {\n        var baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach(function (propName) {\n            if (propName === \"constructor\") {\n                return;\n            }\n            var basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n// base on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nfunction toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    var fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    eval(toBecomeFast);\n}\nfunction peek(arr) {\n    return arr[arr.length - 1];\n}\n/* istanbul ignore next - for performance tracing*/\nfunction timer(func) {\n    var start = new Date().getTime();\n    var val = func();\n    var end = new Date().getTime();\n    var total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=utils.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/utils/utils.js?");

/***/ }),

/***/ "./node_modules/chevrotain/lib_esm/src/version.js":
/*!********************************************************!*\
  !*** ./node_modules/chevrotain/lib_esm/src/version.js ***!
  \********************************************************/
/*! exports provided: VERSION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VERSION\", function() { return VERSION; });\n// needs a separate module as this is required inside chevrotain productive code\n// and also in the entry point for webpack(api.ts).\n// A separate file avoids cyclic dependencies and webpack errors.\nvar VERSION = \"6.4.0\";\n//# sourceMappingURL=version.js.map\n\n//# sourceURL=webpack:///./node_modules/chevrotain/lib_esm/src/version.js?");

/***/ }),

/***/ "./node_modules/regexp-to-ast/lib/regexp-to-ast.js":
/*!*********************************************************!*\
  !*** ./node_modules/regexp-to-ast/lib/regexp-to-ast.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;;(function(root, factory) {\n    // istanbul ignore next\n    if (true) {\n        // istanbul ignore next\n        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n    } else {}\n})(\n    typeof self !== \"undefined\"\n        ? // istanbul ignore next\n          self\n        : this,\n    function() {\n        // references\n        // https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n        // https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\n        function RegExpParser() {}\n\n        RegExpParser.prototype.saveState = function() {\n            return {\n                idx: this.idx,\n                input: this.input,\n                groupIdx: this.groupIdx\n            }\n        }\n\n        RegExpParser.prototype.restoreState = function(newState) {\n            this.idx = newState.idx\n            this.input = newState.input\n            this.groupIdx = newState.groupIdx\n        }\n\n        RegExpParser.prototype.pattern = function(input) {\n            // parser state\n            this.idx = 0\n            this.input = input\n            this.groupIdx = 0\n\n            this.consumeChar(\"/\")\n            var value = this.disjunction()\n            this.consumeChar(\"/\")\n\n            var flags = {\n                type: \"Flags\",\n                global: false,\n                ignoreCase: false,\n                multiLine: false,\n                unicode: false,\n                sticky: false\n            }\n\n            while (this.isRegExpFlag()) {\n                switch (this.popChar()) {\n                    case \"g\":\n                        addFlag(flags, \"global\")\n                        break\n                    case \"i\":\n                        addFlag(flags, \"ignoreCase\")\n                        break\n                    case \"m\":\n                        addFlag(flags, \"multiLine\")\n                        break\n                    case \"u\":\n                        addFlag(flags, \"unicode\")\n                        break\n                    case \"y\":\n                        addFlag(flags, \"sticky\")\n                        break\n                }\n            }\n\n            if (this.idx !== this.input.length) {\n                throw Error(\n                    \"Redundant input: \" + this.input.substring(this.idx)\n                )\n            }\n            return { type: \"Pattern\", flags: flags, value: value }\n        }\n\n        RegExpParser.prototype.disjunction = function() {\n            var alts = []\n            alts.push(this.alternative())\n\n            while (this.peekChar() === \"|\") {\n                this.consumeChar(\"|\")\n                alts.push(this.alternative())\n            }\n\n            return { type: \"Disjunction\", value: alts }\n        }\n\n        RegExpParser.prototype.alternative = function() {\n            var terms = []\n\n            while (this.isTerm()) {\n                terms.push(this.term())\n            }\n\n            return { type: \"Alternative\", value: terms }\n        }\n\n        RegExpParser.prototype.term = function() {\n            if (this.isAssertion()) {\n                return this.assertion()\n            } else {\n                return this.atom()\n            }\n        }\n\n        RegExpParser.prototype.assertion = function() {\n            switch (this.popChar()) {\n                case \"^\":\n                    return { type: \"StartAnchor\" }\n                case \"$\":\n                    return { type: \"EndAnchor\" }\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.popChar()) {\n                        case \"b\":\n                            return { type: \"WordBoundary\" }\n                        case \"B\":\n                            return { type: \"NonWordBoundary\" }\n                    }\n                    // istanbul ignore next\n                    throw Error(\"Invalid Assertion Escape\")\n                // '(?=' or '(?!'\n                case \"(\":\n                    this.consumeChar(\"?\")\n\n                    var type\n                    switch (this.popChar()) {\n                        case \"=\":\n                            type = \"Lookahead\"\n                            break\n                        case \"!\":\n                            type = \"NegativeLookahead\"\n                            break\n                    }\n                    ASSERT_EXISTS(type)\n\n                    var disjunction = this.disjunction()\n\n                    this.consumeChar(\")\")\n\n                    return { type: type, value: disjunction }\n            }\n            // istanbul ignore next\n            ASSERT_NEVER_REACH_HERE()\n        }\n\n        RegExpParser.prototype.quantifier = function(isBacktracking) {\n            var range\n            switch (this.popChar()) {\n                case \"*\":\n                    range = {\n                        atLeast: 0,\n                        atMost: Infinity\n                    }\n                    break\n                case \"+\":\n                    range = {\n                        atLeast: 1,\n                        atMost: Infinity\n                    }\n                    break\n                case \"?\":\n                    range = {\n                        atLeast: 0,\n                        atMost: 1\n                    }\n                    break\n                case \"{\":\n                    var atLeast = this.integerIncludingZero()\n                    switch (this.popChar()) {\n                        case \"}\":\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atLeast\n                            }\n                            break\n                        case \",\":\n                            var atMost\n                            if (this.isDigit()) {\n                                atMost = this.integerIncludingZero()\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: atMost\n                                }\n                            } else {\n                                range = {\n                                    atLeast: atLeast,\n                                    atMost: Infinity\n                                }\n                            }\n                            this.consumeChar(\"}\")\n                            break\n                    }\n                    // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                    // causes severe performance degradations\n                    if (isBacktracking === true && range === undefined) {\n                        return undefined\n                    }\n                    ASSERT_EXISTS(range)\n                    break\n            }\n\n            // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n            // causes severe performance degradations\n            if (isBacktracking === true && range === undefined) {\n                return undefined\n            }\n\n            ASSERT_EXISTS(range)\n\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\")\n                range.greedy = false\n            } else {\n                range.greedy = true\n            }\n\n            range.type = \"Quantifier\"\n            return range\n        }\n\n        RegExpParser.prototype.atom = function() {\n            var atom\n            switch (this.peekChar()) {\n                case \".\":\n                    atom = this.dotAll()\n                    break\n                case \"\\\\\":\n                    atom = this.atomEscape()\n                    break\n                case \"[\":\n                    atom = this.characterClass()\n                    break\n                case \"(\":\n                    atom = this.group()\n                    break\n            }\n\n            if (atom === undefined && this.isPatternCharacter()) {\n                atom = this.patternCharacter()\n            }\n\n            ASSERT_EXISTS(atom)\n\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier()\n            }\n\n            return atom\n        }\n\n        RegExpParser.prototype.dotAll = function() {\n            this.consumeChar(\".\")\n            return {\n                type: \"Set\",\n                complement: true,\n                value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")]\n            }\n        }\n\n        RegExpParser.prototype.atomEscape = function() {\n            this.consumeChar(\"\\\\\")\n\n            switch (this.peekChar()) {\n                case \"1\":\n                case \"2\":\n                case \"3\":\n                case \"4\":\n                case \"5\":\n                case \"6\":\n                case \"7\":\n                case \"8\":\n                case \"9\":\n                    return this.decimalEscapeAtom()\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.decimalEscapeAtom = function() {\n            var value = this.positiveInteger()\n\n            return { type: \"GroupBackReference\", value: value }\n        }\n\n        RegExpParser.prototype.characterClassEscape = function() {\n            var set\n            var complement = false\n            switch (this.popChar()) {\n                case \"d\":\n                    set = digitsCharCodes\n                    break\n                case \"D\":\n                    set = digitsCharCodes\n                    complement = true\n                    break\n                case \"s\":\n                    set = whitespaceCodes\n                    break\n                case \"S\":\n                    set = whitespaceCodes\n                    complement = true\n                    break\n                case \"w\":\n                    set = wordCharCodes\n                    break\n                case \"W\":\n                    set = wordCharCodes\n                    complement = true\n                    break\n            }\n\n            ASSERT_EXISTS(set)\n\n            return { type: \"Set\", value: set, complement: complement }\n        }\n\n        RegExpParser.prototype.controlEscapeAtom = function() {\n            var escapeCode\n            switch (this.popChar()) {\n                case \"f\":\n                    escapeCode = cc(\"\\f\")\n                    break\n                case \"n\":\n                    escapeCode = cc(\"\\n\")\n                    break\n                case \"r\":\n                    escapeCode = cc(\"\\r\")\n                    break\n                case \"t\":\n                    escapeCode = cc(\"\\t\")\n                    break\n                case \"v\":\n                    escapeCode = cc(\"\\v\")\n                    break\n            }\n            ASSERT_EXISTS(escapeCode)\n\n            return { type: \"Character\", value: escapeCode }\n        }\n\n        RegExpParser.prototype.controlLetterEscapeAtom = function() {\n            this.consumeChar(\"c\")\n            var letter = this.popChar()\n            if (/[a-zA-Z]/.test(letter) === false) {\n                throw Error(\"Invalid \")\n            }\n\n            var letterCode = letter.toUpperCase().charCodeAt(0) - 64\n            return { type: \"Character\", value: letterCode }\n        }\n\n        RegExpParser.prototype.nulCharacterAtom = function() {\n            // TODO implement '[lookahead ∉ DecimalDigit]'\n            // TODO: for the deprecated octal escape sequence\n            this.consumeChar(\"0\")\n            return { type: \"Character\", value: cc(\"\\0\") }\n        }\n\n        RegExpParser.prototype.hexEscapeSequenceAtom = function() {\n            this.consumeChar(\"x\")\n            return this.parseHexDigits(2)\n        }\n\n        RegExpParser.prototype.regExpUnicodeEscapeSequenceAtom = function() {\n            this.consumeChar(\"u\")\n            return this.parseHexDigits(4)\n        }\n\n        RegExpParser.prototype.identityEscapeAtom = function() {\n            // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n            // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n            var escapedChar = this.popChar()\n            return { type: \"Character\", value: cc(escapedChar) }\n        }\n\n        RegExpParser.prototype.classPatternCharacterAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \"]\":\n                    throw Error(\"TBD\")\n                default:\n                    var nextChar = this.popChar()\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n\n        RegExpParser.prototype.characterClass = function() {\n            var set = []\n            var complement = false\n            this.consumeChar(\"[\")\n            if (this.peekChar(0) === \"^\") {\n                this.consumeChar(\"^\")\n                complement = true\n            }\n\n            while (this.isClassAtom()) {\n                var from = this.classAtom()\n                var isFromSingleChar = from.type === \"Character\"\n                if (isFromSingleChar && this.isRangeDash()) {\n                    this.consumeChar(\"-\")\n                    var to = this.classAtom()\n                    var isToSingleChar = to.type === \"Character\"\n\n                    // a range can only be used when both sides are single characters\n                    if (isToSingleChar) {\n                        if (to.value < from.value) {\n                            throw Error(\"Range out of order in character class\")\n                        }\n                        set.push({ from: from.value, to: to.value })\n                    } else {\n                        // literal dash\n                        insertToSet(from.value, set)\n                        set.push(cc(\"-\"))\n                        insertToSet(to.value, set)\n                    }\n                } else {\n                    insertToSet(from.value, set)\n                }\n            }\n\n            this.consumeChar(\"]\")\n\n            return { type: \"Set\", complement: complement, value: set }\n        }\n\n        RegExpParser.prototype.classAtom = function() {\n            switch (this.peekChar()) {\n                // istanbul ignore next\n                case \"]\":\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                    throw Error(\"TBD\")\n                case \"\\\\\":\n                    return this.classEscape()\n                default:\n                    return this.classPatternCharacterAtom()\n            }\n        }\n\n        RegExpParser.prototype.classEscape = function() {\n            this.consumeChar(\"\\\\\")\n            switch (this.peekChar()) {\n                // Matches a backspace.\n                // (Not to be confused with \\b word boundary outside characterClass)\n                case \"b\":\n                    this.consumeChar(\"b\")\n                    return { type: \"Character\", value: cc(\"\\u0008\") }\n                case \"d\":\n                case \"D\":\n                case \"s\":\n                case \"S\":\n                case \"w\":\n                case \"W\":\n                    return this.characterClassEscape()\n                case \"f\":\n                case \"n\":\n                case \"r\":\n                case \"t\":\n                case \"v\":\n                    return this.controlEscapeAtom()\n                case \"c\":\n                    return this.controlLetterEscapeAtom()\n                case \"0\":\n                    return this.nulCharacterAtom()\n                case \"x\":\n                    return this.hexEscapeSequenceAtom()\n                case \"u\":\n                    return this.regExpUnicodeEscapeSequenceAtom()\n                default:\n                    return this.identityEscapeAtom()\n            }\n        }\n\n        RegExpParser.prototype.group = function() {\n            var capturing = true\n            this.consumeChar(\"(\")\n            switch (this.peekChar(0)) {\n                case \"?\":\n                    this.consumeChar(\"?\")\n                    this.consumeChar(\":\")\n                    capturing = false\n                    break\n                default:\n                    this.groupIdx++\n                    break\n            }\n            var value = this.disjunction()\n            this.consumeChar(\")\")\n\n            var groupAst = {\n                type: \"Group\",\n                capturing: capturing,\n                value: value\n            }\n\n            if (capturing) {\n                groupAst.idx = this.groupIdx\n            }\n\n            return groupAst\n        }\n\n        RegExpParser.prototype.positiveInteger = function() {\n            var number = this.popChar()\n\n            // istanbul ignore next - can't ever get here due to previous lookahead checks\n            // still implementing this error checking in case this ever changes.\n            if (decimalPatternNoZero.test(number) === false) {\n                throw Error(\"Expecting a positive integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.integerIncludingZero = function() {\n            var number = this.popChar()\n            if (decimalPattern.test(number) === false) {\n                throw Error(\"Expecting an integer\")\n            }\n\n            while (decimalPattern.test(this.peekChar(0))) {\n                number += this.popChar()\n            }\n\n            return parseInt(number, 10)\n        }\n\n        RegExpParser.prototype.patternCharacter = function() {\n            var nextChar = this.popChar()\n            switch (nextChar) {\n                // istanbul ignore next\n                case \"\\n\":\n                // istanbul ignore next\n                case \"\\r\":\n                // istanbul ignore next\n                case \"\\u2028\":\n                // istanbul ignore next\n                case \"\\u2029\":\n                // istanbul ignore next\n                case \"^\":\n                // istanbul ignore next\n                case \"$\":\n                // istanbul ignore next\n                case \"\\\\\":\n                // istanbul ignore next\n                case \".\":\n                // istanbul ignore next\n                case \"*\":\n                // istanbul ignore next\n                case \"+\":\n                // istanbul ignore next\n                case \"?\":\n                // istanbul ignore next\n                case \"(\":\n                // istanbul ignore next\n                case \")\":\n                // istanbul ignore next\n                case \"[\":\n                // istanbul ignore next\n                case \"|\":\n                    // istanbul ignore next\n                    throw Error(\"TBD\")\n                default:\n                    return { type: \"Character\", value: cc(nextChar) }\n            }\n        }\n        RegExpParser.prototype.isRegExpFlag = function() {\n            switch (this.peekChar(0)) {\n                case \"g\":\n                case \"i\":\n                case \"m\":\n                case \"u\":\n                case \"y\":\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isRangeDash = function() {\n            return this.peekChar() === \"-\" && this.isClassAtom(1)\n        }\n\n        RegExpParser.prototype.isDigit = function() {\n            return decimalPattern.test(this.peekChar(0))\n        }\n\n        RegExpParser.prototype.isClassAtom = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n\n            switch (this.peekChar(howMuch)) {\n                case \"]\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.isTerm = function() {\n            return this.isAtom() || this.isAssertion()\n        }\n\n        RegExpParser.prototype.isAtom = function() {\n            if (this.isPatternCharacter()) {\n                return true\n            }\n\n            switch (this.peekChar(0)) {\n                case \".\":\n                case \"\\\\\": // atomEscape\n                case \"[\": // characterClass\n                // TODO: isAtom must be called before isAssertion - disambiguate\n                case \"(\": // group\n                    return true\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isAssertion = function() {\n            switch (this.peekChar(0)) {\n                case \"^\":\n                case \"$\":\n                    return true\n                // '\\b' or '\\B'\n                case \"\\\\\":\n                    switch (this.peekChar(1)) {\n                        case \"b\":\n                        case \"B\":\n                            return true\n                        default:\n                            return false\n                    }\n                // '(?=' or '(?!'\n                case \"(\":\n                    return (\n                        this.peekChar(1) === \"?\" &&\n                        (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\")\n                    )\n                default:\n                    return false\n            }\n        }\n\n        RegExpParser.prototype.isQuantifier = function() {\n            var prevState = this.saveState()\n            try {\n                return this.quantifier(true) !== undefined\n            } catch (e) {\n                return false\n            } finally {\n                this.restoreState(prevState)\n            }\n        }\n\n        RegExpParser.prototype.isPatternCharacter = function() {\n            switch (this.peekChar()) {\n                case \"^\":\n                case \"$\":\n                case \"\\\\\":\n                case \".\":\n                case \"*\":\n                case \"+\":\n                case \"?\":\n                case \"(\":\n                case \")\":\n                case \"[\":\n                case \"|\":\n                case \"/\":\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\u2028\":\n                case \"\\u2029\":\n                    return false\n                default:\n                    return true\n            }\n        }\n\n        RegExpParser.prototype.parseHexDigits = function(howMany) {\n            var hexString = \"\"\n            for (var i = 0; i < howMany; i++) {\n                var hexChar = this.popChar()\n                if (hexDigitPattern.test(hexChar) === false) {\n                    throw Error(\"Expecting a HexDecimal digits\")\n                }\n                hexString += hexChar\n            }\n            var charCode = parseInt(hexString, 16)\n            return { type: \"Character\", value: charCode }\n        }\n\n        RegExpParser.prototype.peekChar = function(howMuch) {\n            if (howMuch === undefined) {\n                howMuch = 0\n            }\n            return this.input[this.idx + howMuch]\n        }\n\n        RegExpParser.prototype.popChar = function() {\n            var nextChar = this.peekChar(0)\n            this.consumeChar()\n            return nextChar\n        }\n\n        RegExpParser.prototype.consumeChar = function(char) {\n            if (char !== undefined && this.input[this.idx] !== char) {\n                throw Error(\n                    \"Expected: '\" +\n                        char +\n                        \"' but found: '\" +\n                        this.input[this.idx] +\n                        \"' at offset: \" +\n                        this.idx\n                )\n            }\n\n            if (this.idx >= this.input.length) {\n                throw Error(\"Unexpected end of input\")\n            }\n            this.idx++\n        }\n\n        // consts and utilities\n        var hexDigitPattern = /[0-9a-fA-F]/\n        var decimalPattern = /[0-9]/\n        var decimalPatternNoZero = /[1-9]/\n\n        function cc(char) {\n            return char.charCodeAt(0)\n        }\n\n        function insertToSet(item, set) {\n            if (item.length !== undefined) {\n                item.forEach(function(subItem) {\n                    set.push(subItem)\n                })\n            } else {\n                set.push(item)\n            }\n        }\n\n        function addFlag(flagObj, flagKey) {\n            if (flagObj[flagKey] === true) {\n                throw \"duplicate flag \" + flagKey\n            }\n\n            flagObj[flagKey] = true\n        }\n\n        function ASSERT_EXISTS(obj) {\n            // istanbul ignore next\n            if (obj === undefined) {\n                throw Error(\"Internal Error - Should never get here!\")\n            }\n        }\n\n        // istanbul ignore next\n        function ASSERT_NEVER_REACH_HERE() {\n            throw Error(\"Internal Error - Should never get here!\")\n        }\n\n        var i\n        var digitsCharCodes = []\n        for (i = cc(\"0\"); i <= cc(\"9\"); i++) {\n            digitsCharCodes.push(i)\n        }\n\n        var wordCharCodes = [cc(\"_\")].concat(digitsCharCodes)\n        for (i = cc(\"a\"); i <= cc(\"z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        for (i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n            wordCharCodes.push(i)\n        }\n\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\n        var whitespaceCodes = [\n            cc(\" \"),\n            cc(\"\\f\"),\n            cc(\"\\n\"),\n            cc(\"\\r\"),\n            cc(\"\\t\"),\n            cc(\"\\v\"),\n            cc(\"\\t\"),\n            cc(\"\\u00a0\"),\n            cc(\"\\u1680\"),\n            cc(\"\\u2000\"),\n            cc(\"\\u2001\"),\n            cc(\"\\u2002\"),\n            cc(\"\\u2003\"),\n            cc(\"\\u2004\"),\n            cc(\"\\u2005\"),\n            cc(\"\\u2006\"),\n            cc(\"\\u2007\"),\n            cc(\"\\u2008\"),\n            cc(\"\\u2009\"),\n            cc(\"\\u200a\"),\n            cc(\"\\u2028\"),\n            cc(\"\\u2029\"),\n            cc(\"\\u202f\"),\n            cc(\"\\u205f\"),\n            cc(\"\\u3000\"),\n            cc(\"\\ufeff\")\n        ]\n\n        function BaseRegExpVisitor() {}\n\n        BaseRegExpVisitor.prototype.visitChildren = function(node) {\n            for (var key in node) {\n                var child = node[key]\n                /* istanbul ignore else */\n                if (node.hasOwnProperty(key)) {\n                    if (child.type !== undefined) {\n                        this.visit(child)\n                    } else if (Array.isArray(child)) {\n                        child.forEach(function(subChild) {\n                            this.visit(subChild)\n                        }, this)\n                    }\n                }\n            }\n        }\n\n        BaseRegExpVisitor.prototype.visit = function(node) {\n            switch (node.type) {\n                case \"Pattern\":\n                    this.visitPattern(node)\n                    break\n                case \"Flags\":\n                    this.visitFlags(node)\n                    break\n                case \"Disjunction\":\n                    this.visitDisjunction(node)\n                    break\n                case \"Alternative\":\n                    this.visitAlternative(node)\n                    break\n                case \"StartAnchor\":\n                    this.visitStartAnchor(node)\n                    break\n                case \"EndAnchor\":\n                    this.visitEndAnchor(node)\n                    break\n                case \"WordBoundary\":\n                    this.visitWordBoundary(node)\n                    break\n                case \"NonWordBoundary\":\n                    this.visitNonWordBoundary(node)\n                    break\n                case \"Lookahead\":\n                    this.visitLookahead(node)\n                    break\n                case \"NegativeLookahead\":\n                    this.visitNegativeLookahead(node)\n                    break\n                case \"Character\":\n                    this.visitCharacter(node)\n                    break\n                case \"Set\":\n                    this.visitSet(node)\n                    break\n                case \"Group\":\n                    this.visitGroup(node)\n                    break\n                case \"GroupBackReference\":\n                    this.visitGroupBackReference(node)\n                    break\n                case \"Quantifier\":\n                    this.visitQuantifier(node)\n                    break\n            }\n\n            this.visitChildren(node)\n        }\n\n        BaseRegExpVisitor.prototype.visitPattern = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitFlags = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitDisjunction = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitAlternative = function(node) {}\n\n        // Assertion\n        BaseRegExpVisitor.prototype.visitStartAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitEndAnchor = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNonWordBoundary = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitLookahead = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitNegativeLookahead = function(node) {}\n\n        // atoms\n        BaseRegExpVisitor.prototype.visitCharacter = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitSet = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroup = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitGroupBackReference = function(node) {}\n\n        BaseRegExpVisitor.prototype.visitQuantifier = function(node) {}\n\n        return {\n            RegExpParser: RegExpParser,\n            BaseRegExpVisitor: BaseRegExpVisitor,\n            VERSION: \"0.4.0\"\n        }\n    }\n)\n\n\n//# sourceURL=webpack:///./node_modules/regexp-to-ast/lib/regexp-to-ast.js?");

/***/ }),

/***/ "./src/BaseVisitor.js":
/*!****************************!*\
  !*** ./src/BaseVisitor.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Visitor; });\n/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Parser */ \"./src/Parser.js\");\n\n\nconst parserInstance = new _Parser__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\nconst BaseVisitor = parserInstance.getBaseCstVisitorConstructor();\n\nclass Visitor extends BaseVisitor {\n  /**\n   * @returns {string}\n   */\n  getImage(contextNode) {\n    return contextNode[0].image;\n  }\n\n  /**\n   * @return {Array}\n   */\n  createOrPush(arr, id, value) {\n    arr[id] = arr[id] ? arr[id] : [];\n    arr[id].push(value);\n\n    return arr;\n  }\n\n  /**\n   * @return {Array}\n   */\n  visitAll(contextNode, params = {}) {\n    return contextNode ? contextNode.map(node => this.visit(node, params)) : [];\n  }\n}\n\n\n//# sourceURL=webpack:///./src/BaseVisitor.js?");

/***/ }),

/***/ "./src/Codegen.js":
/*!************************!*\
  !*** ./src/Codegen.js ***!
  \************************/
/*! exports provided: generate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generate\", function() { return generate; });\n/* harmony import */ var _lib_helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/helper */ \"./src/lib/helper.js\");\n\n\nconst exports = [];\n\nfunction generate(module, functions = [], imports = []) {\n  const importsString = addImports(imports);\n  const functionsString = addFunctions(functions);\n  const exportsString = _lib_helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"].arrayToObjectString(exports);\n\n  return `\n    ${importsString}\n    window.PRT.${module} = (function () {\n      ${functionsString}\n      return ${exportsString}\n    })()\n    \n    if(window.PRT.${module}.hasOwnProperty(\"principal\")){\n      window.PRT.${module}.principal()\n    }\n  `;\n}\n\nfunction addImports(imports) {\n  // @TODO: Verificar a ENV se é browser ou node antes de executar essa parte\n  return imports.map(module => `import ${module};`).join(\"\");\n}\n\nfunction addFunctions(functions) {\n  let functionsString = \"\";\n  const nameParams = params => {\n    const createLabel = ({ image }, id) => `const ${image} = params[${id}];`;\n    const nonIdentifiers = param => param.type === \"identifier\";\n\n    return params\n      .filter(nonIdentifiers)\n      .map(createLabel)\n      .join(\"\");\n  };\n\n  const addPatternMatching = (functionName, arity, params) => {\n    const onlyConstants = param => param.type !== \"identifier\";\n    const createMatching = ({ id, image }) => `arguments[${id}] == ${image}`;\n\n    let patternMatching = params\n      .filter(onlyConstants)\n      .map(createMatching)\n      .join(\"&&\");\n\n    patternMatching = patternMatching && \"&& \" + patternMatching;\n\n    return `\n      if(arguments.length == ${arity} ${patternMatching}){\n        return ${functionName}(arguments);\n      }\n    `;\n  };\n\n  const addFunctionByArity = (func, id) => {\n    func.name = `$_${func.identifier}${id}`;\n\n    return `\n    function ${func.name}(params) {\n      ${nameParams(func.params)}\n      return ${func.body};\n    }\n\n    ${addPatternMatching(func.name, func.arity, func.params)}`;\n  };\n\n  for (const functionName in functions) {\n    if (functions.hasOwnProperty(functionName)) {\n      exports.push(functionName);\n      const functionArities = functions[functionName];\n      functionsString += `\n        function ${functionName}() {\n          ${functionArities.map(addFunctionByArity).join(\"\")}\n        \n        throw \\`(Função ${functionName}/\\${arguments.length} inexistente): \n        A aridade \\${arguments.length} da função ${functionName} não existe\\`}`;\n    }\n  }\n\n  return functionsString;\n}\n\n\n//# sourceURL=webpack:///./src/Codegen.js?");

/***/ }),

/***/ "./src/Parser.js":
/*!***********************!*\
  !*** ./src/Parser.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PRTParser; });\n/* harmony import */ var chevrotain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chevrotain */ \"./node_modules/chevrotain/lib_esm/src/api.js\");\n/* harmony import */ var _Tokens__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tokens */ \"./src/Tokens.js\");\n\n\n\nclass PRTParser extends chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"CstParser\"] {\n  constructor(input) {\n    super(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"ALL_TOKENS\"]);\n    const $ = this;\n\n    $.RULE(\"program\", () => {\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"MODULE\"]);\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"IDENTIFIER\"], { LABEL: \"moduleName\" });\n      $.MANY(() => {\n        $.SUBRULE($.declaration);\n      });\n    });\n\n    $.RULE(\"declaration\", () => {\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"IDENTIFIER\"], { LABEL: \"functionName\" });\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"L_PAREN\"]);\n      $.MANY_SEP({\n        SEP: _Tokens__WEBPACK_IMPORTED_MODULE_1__[\"COMMA\"],\n        DEF: () => {\n          $.SUBRULE($.value, { ARGS: [true], LABEL: \"params\" });\n        }\n      });\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"R_PAREN\"]);\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"RETURN_WORD\"]);\n      $.SUBRULE($.expression, { LABEL: \"body\" });\n    });\n\n    $.RULE(\"expression\", () => {\n      $.SUBRULE($.value, { LABEL: \"left\" });\n      $.OPTION(() => {\n        $.SUBRULE($.mathExpression, { LABEL: \"right\" });\n      });\n    });\n\n    $.RULE(\"mathExpression\", () => {\n      $.SUBRULE($.binaryOperator, { LABEL: \"operator\" });\n      $.SUBRULE($.expression, { LABEL: \"right\" });\n    });\n\n    $.RULE(\"value\", (isFunctionPermited = false) => {\n      $.OR([\n        {\n          GATE: isFunctionPermited,\n          ALT: () => {\n            $.SUBRULE($.functionCall);\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"NUMBER_LITERAL\"]);\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"STRING_LITERAL\"]);\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"TRUE\"]);\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"FALSE\"]);\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"NULL\"]);\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME2(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"IDENTIFIER\"]);\n          }\n        }\n      ]);\n    });\n\n    $.RULE(\"binaryOperator\", () => {\n      $.OR([\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"ADDITIVE_OPERATOR\"], { LABEL: \"operator\" });\n          }\n        },\n        {\n          ALT: () => {\n            $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"MULTIPLICATIVE_OPERATOR\"], { LABEL: \"operator\" });\n          }\n        }\n      ]);\n    });\n\n    $.RULE(\"functionCall\", () => {\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"IDENTIFIER\"]);\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"L_PAREN\"]);\n      $.MANY_SEP({\n        SEP: _Tokens__WEBPACK_IMPORTED_MODULE_1__[\"COMMA\"],\n        DEF: () => {\n          $.SUBRULE($.expression, { LABEL: \"functionArguments\" });\n        }\n      });\n      $.CONSUME(_Tokens__WEBPACK_IMPORTED_MODULE_1__[\"R_PAREN\"]);\n    });\n\n    this.performSelfAnalysis();\n    if (input) {\n      this.input = input;\n    }\n  }\n}\n\n\n//# sourceURL=webpack:///./src/Parser.js?");

/***/ }),

/***/ "./src/Tokens.js":
/*!***********************!*\
  !*** ./src/Tokens.js ***!
  \***********************/
/*! exports provided: TRUE, FALSE, IDENTIFIER, NULL, MODULE, L_CURLY, R_CURLY, L_SQUARE, R_SQUARE, L_PAREN, R_PAREN, COMMA, COLON, STRING_LITERAL, NUMBER_LITERAL, UNARY_OPERATOR, ADDITIVE_OPERATOR, PLUS, MINUS, MULTIPLICATIVE_OPERATOR, ASTERISK, SLASH, EQUALITY_OPERATOR, EQUAL, FAT_ARROW, FUNCTION_WORD, RETURN_WORD, WHITE_SPACE, ALL_TOKENS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TRUE\", function() { return TRUE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FALSE\", function() { return FALSE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IDENTIFIER\", function() { return IDENTIFIER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NULL\", function() { return NULL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MODULE\", function() { return MODULE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L_CURLY\", function() { return L_CURLY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R_CURLY\", function() { return R_CURLY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L_SQUARE\", function() { return L_SQUARE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R_SQUARE\", function() { return R_SQUARE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"L_PAREN\", function() { return L_PAREN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"R_PAREN\", function() { return R_PAREN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COMMA\", function() { return COMMA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"COLON\", function() { return COLON; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"STRING_LITERAL\", function() { return STRING_LITERAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NUMBER_LITERAL\", function() { return NUMBER_LITERAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UNARY_OPERATOR\", function() { return UNARY_OPERATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ADDITIVE_OPERATOR\", function() { return ADDITIVE_OPERATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PLUS\", function() { return PLUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MINUS\", function() { return MINUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MULTIPLICATIVE_OPERATOR\", function() { return MULTIPLICATIVE_OPERATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ASTERISK\", function() { return ASTERISK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SLASH\", function() { return SLASH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUALITY_OPERATOR\", function() { return EQUALITY_OPERATOR; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EQUAL\", function() { return EQUAL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FAT_ARROW\", function() { return FAT_ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FUNCTION_WORD\", function() { return FUNCTION_WORD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RETURN_WORD\", function() { return RETURN_WORD; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WHITE_SPACE\", function() { return WHITE_SPACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ALL_TOKENS\", function() { return ALL_TOKENS; });\n/* harmony import */ var chevrotain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chevrotain */ \"./node_modules/chevrotain/lib_esm/src/api.js\");\n\n\n// Words\nconst TRUE = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"TRUE\", pattern: /verdadeiro/ });\nconst FALSE = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"FALSE\", pattern: /falso/ });\nconst IDENTIFIER = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"IDENTIFIER\",\n  pattern: /[a-zA-z_]\\w*/\n});\nconst NULL = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"NULL\", pattern: /nulo/ });\nconst MODULE = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"MODULE\",\n  pattern: /m[óo]dulo/\n});\n\n// Braces\nconst L_CURLY = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"L_CURLY\", pattern: /{/ });\nconst R_CURLY = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"R_CURLY\", pattern: /}/ });\nconst L_SQUARE = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"L_SQUARE\", pattern: /\\[/ });\nconst R_SQUARE = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"R_SQUARE\", pattern: /]/ });\nconst L_PAREN = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"L_PAREN\", pattern: /\\(/ });\nconst R_PAREN = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"R_PAREN\", pattern: /\\)/ });\n\nconst COMMA = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"COMMA\", pattern: /,/ });\nconst COLON = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"COLON\", pattern: /:/ });\n\n// Literals\nconst STRING_LITERAL = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"STRING_LITERAL\",\n  pattern: /\"(?:[^\\\\\"]|\\\\(?:[bfnrtv\"\\\\/]|u[0-9a-fA-F]{4}))*\"/\n});\nconst NUMBER_LITERAL = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"NUMBER_LITERAL\",\n  pattern: /(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?/\n});\n\n// Operators\nconst UNARY_OPERATOR = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"UNARY_OPERATOR\",\n  pattern: chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"Lexer\"].NA\n});\n\nconst ADDITIVE_OPERATOR = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"ADDITIVE_OPERATOR\",\n  pattern: chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"Lexer\"].NA\n});\nconst PLUS = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"PLUS\",\n  pattern: /\\+/,\n  categories: ADDITIVE_OPERATOR\n});\nconst MINUS = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"MINUS\",\n  pattern: /-/,\n  categories: ADDITIVE_OPERATOR\n});\n\nconst MULTIPLICATIVE_OPERATOR = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"MULTIPLICATIVE_OPERATOR\",\n  pattern: chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"Lexer\"].NA\n});\nconst ASTERISK = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"ASTERISK\",\n  pattern: /\\*/,\n  categories: MULTIPLICATIVE_OPERATOR\n});\nconst SLASH = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"SLASH\",\n  pattern: /\\//,\n  categories: MULTIPLICATIVE_OPERATOR\n});\n\nconst EQUALITY_OPERATOR = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"EQUALITY_OPERATOR\",\n  pattern: chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"Lexer\"].NA\n});\nconst EQUAL = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"EQUAL\",\n  pattern: /=/,\n  categories: EQUALITY_OPERATOR\n});\n\nconst FAT_ARROW = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({ name: \"FAT_ARROW\", pattern: /=>/ });\n\n// Reserved words\nconst FUNCTION_WORD = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"FUNCTION_WORD\",\n  pattern: /função/\n});\nconst RETURN_WORD = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"RETURN_WORD\",\n  pattern: /retorna/\n});\n\n// Ignored\nconst WHITE_SPACE = Object(chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"createToken\"])({\n  name: \"WHITE_SPACE\",\n  pattern: /[ \\t\\n\\r]+/,\n  group: chevrotain__WEBPACK_IMPORTED_MODULE_0__[\"Lexer\"].SKIPPED\n});\n\nconst ALL_TOKENS = [\n  TRUE,\n  FALSE,\n  NULL,\n  L_CURLY,\n  R_CURLY,\n  L_SQUARE,\n  R_SQUARE,\n  L_PAREN,\n  R_PAREN,\n  COMMA,\n  COLON,\n  STRING_LITERAL,\n  NUMBER_LITERAL,\n  UNARY_OPERATOR,\n  ADDITIVE_OPERATOR,\n  PLUS,\n  MINUS,\n  MULTIPLICATIVE_OPERATOR,\n  ASTERISK,\n  SLASH,\n  EQUALITY_OPERATOR,\n  FAT_ARROW,\n  EQUAL,\n  FUNCTION_WORD,\n  RETURN_WORD,\n  MODULE,\n  IDENTIFIER,\n  WHITE_SPACE\n];\n\n\n//# sourceURL=webpack:///./src/Tokens.js?");

/***/ }),

/***/ "./src/Visitor.js":
/*!************************!*\
  !*** ./src/Visitor.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Visitor; });\n/* harmony import */ var _BaseVisitor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseVisitor */ \"./src/BaseVisitor.js\");\n/* harmony import */ var _Codegen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Codegen */ \"./src/Codegen.js\");\n\n\n\nclass Visitor extends _BaseVisitor__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor() {\n    super();\n    this.validateVisitor();\n    this.functions = {};\n    this.deep = 0;\n  }\n\n  program(ctx) {\n    const moduleName = this.getImage(ctx.moduleName);\n    this.visitAll(ctx.declaration);\n\n    return _Codegen__WEBPACK_IMPORTED_MODULE_1__[\"generate\"](moduleName, this.functions);\n  }\n\n  declaration(ctx) {\n    const functionName = this.getImage(ctx.functionName);\n    const params = this.visitAll(ctx.params).map((param, id) => ({\n      ...param,\n      id\n    }));\n    const body = this.visit(ctx.body);\n    const arity = params.length;\n\n    this.createOrPush(this.functions, functionName, {\n      identifier: `${functionName}`,\n      arity,\n      params,\n      body\n    });\n  }\n\n  expression(ctx) {\n    const left = this.visit(ctx.left).image; // value\n\n    if (ctx.right) {\n      const right = this.visit(ctx.right); // mathExpression\n\n      return left + right;\n    }\n\n    return left;\n  }\n\n  mathExpression(ctx) {\n    const operator = this.visit(ctx.operator); // binaryOperator\n    const expression = this.visit(ctx.right);\n\n    return operator + expression;\n  }\n\n  binaryOperator(ctx) {\n    return this.getImage(ctx.operator);\n  }\n\n  value(ctx, params = {}) {\n    if (ctx.functionCall) {\n      return {\n        type: \"function\",\n        image: this.visit(ctx.functionCall)\n      };\n    }\n\n    if (ctx.NUMBER_LITERAL) {\n      return {\n        type: \"number\",\n        image: this.getImage(ctx.NUMBER_LITERAL)\n      };\n    }\n\n    if (ctx.STRING_LITERAL) {\n      return {\n        type: \"string\",\n        image: this.getImage(ctx.STRING_LITERAL)\n      };\n    }\n\n    if (ctx.TRUE) {\n      return {\n        type: \"boolean\",\n        image: \"true\"\n      };\n    }\n\n    if (ctx.FALSE) {\n      return {\n        type: \"boolean\",\n        image: \"false\"\n      };\n    }\n\n    if (ctx.NULL) {\n      return {\n        type: \"null\",\n        image: \"null\"\n      };\n    }\n\n    if (ctx.IDENTIFIER) {\n      return {\n        type: \"identifier\",\n        image: this.getImage(ctx.IDENTIFIER)\n      };\n    }\n  }\n\n  functionCall(ctx) {\n    const functionName = this.getImage(ctx.IDENTIFIER);\n    const functionArguments = this.visitAll(ctx.functionArguments);\n\n    return `${functionName}(${functionArguments})`;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/Visitor.js?");

/***/ }),

/***/ "./src/lib/helper.js":
/*!***************************!*\
  !*** ./src/lib/helper.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst get = key => object => object[key];\nconst arrayToObjectString = arr => `{${arr.join(\", \")}}`;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  get,\n  arrayToObjectString\n});\n\n\n//# sourceURL=webpack:///./src/lib/helper.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Tokens__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tokens */ \"./src/Tokens.js\");\n/* harmony import */ var chevrotain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chevrotain */ \"./node_modules/chevrotain/lib_esm/src/api.js\");\n/* harmony import */ var _Parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Parser */ \"./src/Parser.js\");\n/* harmony import */ var _Visitor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Visitor */ \"./src/Visitor.js\");\n\n\n\n\n\nwindow.PRT = {};\nwindow.parseCode = function(code) {\n  const lexer = new chevrotain__WEBPACK_IMPORTED_MODULE_1__[\"Lexer\"](_Tokens__WEBPACK_IMPORTED_MODULE_0__[\"ALL_TOKENS\"]);\n  const lexemes = lexer.tokenize(code);\n  const parser = new _Parser__WEBPACK_IMPORTED_MODULE_2__[\"default\"](lexemes.tokens);\n  const visitor = new _Visitor__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n\n  const cst = parser.program();\n\n  if (lexemes.errors.length > 0) {\n    return new Error(lexemes.errors);\n  }\n\n  if (parser.errors.length > 0) {\n    return new Error(parser.errors);\n  }\n\n  const result = visitor.visit(cst);\n\n  return result;\n};\n\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ })

/******/ });